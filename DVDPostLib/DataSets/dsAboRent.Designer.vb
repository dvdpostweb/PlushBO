'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5472
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsAboRent"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsAboRent
    Inherits Global.System.Data.DataSet
    
    Private tablecustomers As customersDataTable
    
    Private tableproducts As productsDataTable
    
    Private tableabo As aboDataTable
    
    Private tableabo_action As abo_actionDataTable
    
    Private tableAboRent As AboRentDataTable
    
    Private tableabo_view2 As abo_view2DataTable
    
    Private tableabo_view1 As abo_view1DataTable
    
    Private tableabo_stop_why As abo_stop_whyDataTable
    
    Private tableabo_stop_why_explained As abo_stop_why_explainedDataTable
    
    Private tableabo_stop_why_view1 As abo_stop_why_view1DataTable
    
    Private tableogone_payment As ogone_paymentDataTable
    
    Private tabledomiciliation_payment As domiciliation_paymentDataTable
    
    Private tablewishlist_assigned_view1 As wishlist_assigned_view1DataTable
    
    Private tableaboreconduction_view1 As aboreconduction_view1DataTable
    
    Private tableogone_payment_Validate As ogone_payment_ValidateDataTable
    
    Private tabledomiciliation_payment_Validate As domiciliation_payment_ValidateDataTable
    
    Private tablemail_messages_sent_history_view1 As mail_messages_sent_history_view1DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("customers")) Is Nothing) Then
                MyBase.Tables.Add(New customersDataTable(ds.Tables("customers")))
            End If
            If (Not (ds.Tables("products")) Is Nothing) Then
                MyBase.Tables.Add(New productsDataTable(ds.Tables("products")))
            End If
            If (Not (ds.Tables("abo")) Is Nothing) Then
                MyBase.Tables.Add(New aboDataTable(ds.Tables("abo")))
            End If
            If (Not (ds.Tables("abo_action")) Is Nothing) Then
                MyBase.Tables.Add(New abo_actionDataTable(ds.Tables("abo_action")))
            End If
            If (Not (ds.Tables("AboRent")) Is Nothing) Then
                MyBase.Tables.Add(New AboRentDataTable(ds.Tables("AboRent")))
            End If
            If (Not (ds.Tables("abo_view2")) Is Nothing) Then
                MyBase.Tables.Add(New abo_view2DataTable(ds.Tables("abo_view2")))
            End If
            If (Not (ds.Tables("abo_view1")) Is Nothing) Then
                MyBase.Tables.Add(New abo_view1DataTable(ds.Tables("abo_view1")))
            End If
            If (Not (ds.Tables("abo_stop_why")) Is Nothing) Then
                MyBase.Tables.Add(New abo_stop_whyDataTable(ds.Tables("abo_stop_why")))
            End If
            If (Not (ds.Tables("abo_stop_why_explained")) Is Nothing) Then
                MyBase.Tables.Add(New abo_stop_why_explainedDataTable(ds.Tables("abo_stop_why_explained")))
            End If
            If (Not (ds.Tables("abo_stop_why_view1")) Is Nothing) Then
                MyBase.Tables.Add(New abo_stop_why_view1DataTable(ds.Tables("abo_stop_why_view1")))
            End If
            If (Not (ds.Tables("ogone_payment")) Is Nothing) Then
                MyBase.Tables.Add(New ogone_paymentDataTable(ds.Tables("ogone_payment")))
            End If
            If (Not (ds.Tables("domiciliation_payment")) Is Nothing) Then
                MyBase.Tables.Add(New domiciliation_paymentDataTable(ds.Tables("domiciliation_payment")))
            End If
            If (Not (ds.Tables("wishlist_assigned_view1")) Is Nothing) Then
                MyBase.Tables.Add(New wishlist_assigned_view1DataTable(ds.Tables("wishlist_assigned_view1")))
            End If
            If (Not (ds.Tables("aboreconduction_view1")) Is Nothing) Then
                MyBase.Tables.Add(New aboreconduction_view1DataTable(ds.Tables("aboreconduction_view1")))
            End If
            If (Not (ds.Tables("ogone_payment_Validate")) Is Nothing) Then
                MyBase.Tables.Add(New ogone_payment_ValidateDataTable(ds.Tables("ogone_payment_Validate")))
            End If
            If (Not (ds.Tables("domiciliation_payment_Validate")) Is Nothing) Then
                MyBase.Tables.Add(New domiciliation_payment_ValidateDataTable(ds.Tables("domiciliation_payment_Validate")))
            End If
            If (Not (ds.Tables("mail_messages_sent_history_view1")) Is Nothing) Then
                MyBase.Tables.Add(New mail_messages_sent_history_view1DataTable(ds.Tables("mail_messages_sent_history_view1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property customers() As customersDataTable
        Get
            Return Me.tablecustomers
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property products() As productsDataTable
        Get
            Return Me.tableproducts
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property abo() As aboDataTable
        Get
            Return Me.tableabo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property abo_action() As abo_actionDataTable
        Get
            Return Me.tableabo_action
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AboRent() As AboRentDataTable
        Get
            Return Me.tableAboRent
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property abo_view2() As abo_view2DataTable
        Get
            Return Me.tableabo_view2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property abo_view1() As abo_view1DataTable
        Get
            Return Me.tableabo_view1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property abo_stop_why() As abo_stop_whyDataTable
        Get
            Return Me.tableabo_stop_why
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property abo_stop_why_explained() As abo_stop_why_explainedDataTable
        Get
            Return Me.tableabo_stop_why_explained
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property abo_stop_why_view1() As abo_stop_why_view1DataTable
        Get
            Return Me.tableabo_stop_why_view1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ogone_payment() As ogone_paymentDataTable
        Get
            Return Me.tableogone_payment
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property domiciliation_payment() As domiciliation_paymentDataTable
        Get
            Return Me.tabledomiciliation_payment
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property wishlist_assigned_view1() As wishlist_assigned_view1DataTable
        Get
            Return Me.tablewishlist_assigned_view1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property aboreconduction_view1() As aboreconduction_view1DataTable
        Get
            Return Me.tableaboreconduction_view1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ogone_payment_Validate() As ogone_payment_ValidateDataTable
        Get
            Return Me.tableogone_payment_Validate
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property domiciliation_payment_Validate() As domiciliation_payment_ValidateDataTable
        Get
            Return Me.tabledomiciliation_payment_Validate
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property mail_messages_sent_history_view1() As mail_messages_sent_history_view1DataTable
        Get
            Return Me.tablemail_messages_sent_history_view1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsAboRent = CType(MyBase.Clone,dsAboRent)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("customers")) Is Nothing) Then
                MyBase.Tables.Add(New customersDataTable(ds.Tables("customers")))
            End If
            If (Not (ds.Tables("products")) Is Nothing) Then
                MyBase.Tables.Add(New productsDataTable(ds.Tables("products")))
            End If
            If (Not (ds.Tables("abo")) Is Nothing) Then
                MyBase.Tables.Add(New aboDataTable(ds.Tables("abo")))
            End If
            If (Not (ds.Tables("abo_action")) Is Nothing) Then
                MyBase.Tables.Add(New abo_actionDataTable(ds.Tables("abo_action")))
            End If
            If (Not (ds.Tables("AboRent")) Is Nothing) Then
                MyBase.Tables.Add(New AboRentDataTable(ds.Tables("AboRent")))
            End If
            If (Not (ds.Tables("abo_view2")) Is Nothing) Then
                MyBase.Tables.Add(New abo_view2DataTable(ds.Tables("abo_view2")))
            End If
            If (Not (ds.Tables("abo_view1")) Is Nothing) Then
                MyBase.Tables.Add(New abo_view1DataTable(ds.Tables("abo_view1")))
            End If
            If (Not (ds.Tables("abo_stop_why")) Is Nothing) Then
                MyBase.Tables.Add(New abo_stop_whyDataTable(ds.Tables("abo_stop_why")))
            End If
            If (Not (ds.Tables("abo_stop_why_explained")) Is Nothing) Then
                MyBase.Tables.Add(New abo_stop_why_explainedDataTable(ds.Tables("abo_stop_why_explained")))
            End If
            If (Not (ds.Tables("abo_stop_why_view1")) Is Nothing) Then
                MyBase.Tables.Add(New abo_stop_why_view1DataTable(ds.Tables("abo_stop_why_view1")))
            End If
            If (Not (ds.Tables("ogone_payment")) Is Nothing) Then
                MyBase.Tables.Add(New ogone_paymentDataTable(ds.Tables("ogone_payment")))
            End If
            If (Not (ds.Tables("domiciliation_payment")) Is Nothing) Then
                MyBase.Tables.Add(New domiciliation_paymentDataTable(ds.Tables("domiciliation_payment")))
            End If
            If (Not (ds.Tables("wishlist_assigned_view1")) Is Nothing) Then
                MyBase.Tables.Add(New wishlist_assigned_view1DataTable(ds.Tables("wishlist_assigned_view1")))
            End If
            If (Not (ds.Tables("aboreconduction_view1")) Is Nothing) Then
                MyBase.Tables.Add(New aboreconduction_view1DataTable(ds.Tables("aboreconduction_view1")))
            End If
            If (Not (ds.Tables("ogone_payment_Validate")) Is Nothing) Then
                MyBase.Tables.Add(New ogone_payment_ValidateDataTable(ds.Tables("ogone_payment_Validate")))
            End If
            If (Not (ds.Tables("domiciliation_payment_Validate")) Is Nothing) Then
                MyBase.Tables.Add(New domiciliation_payment_ValidateDataTable(ds.Tables("domiciliation_payment_Validate")))
            End If
            If (Not (ds.Tables("mail_messages_sent_history_view1")) Is Nothing) Then
                MyBase.Tables.Add(New mail_messages_sent_history_view1DataTable(ds.Tables("mail_messages_sent_history_view1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablecustomers = CType(MyBase.Tables("customers"),customersDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecustomers) Is Nothing) Then
                Me.tablecustomers.InitVars
            End If
        End If
        Me.tableproducts = CType(MyBase.Tables("products"),productsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableproducts) Is Nothing) Then
                Me.tableproducts.InitVars
            End If
        End If
        Me.tableabo = CType(MyBase.Tables("abo"),aboDataTable)
        If (initTable = true) Then
            If (Not (Me.tableabo) Is Nothing) Then
                Me.tableabo.InitVars
            End If
        End If
        Me.tableabo_action = CType(MyBase.Tables("abo_action"),abo_actionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableabo_action) Is Nothing) Then
                Me.tableabo_action.InitVars
            End If
        End If
        Me.tableAboRent = CType(MyBase.Tables("AboRent"),AboRentDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAboRent) Is Nothing) Then
                Me.tableAboRent.InitVars
            End If
        End If
        Me.tableabo_view2 = CType(MyBase.Tables("abo_view2"),abo_view2DataTable)
        If (initTable = true) Then
            If (Not (Me.tableabo_view2) Is Nothing) Then
                Me.tableabo_view2.InitVars
            End If
        End If
        Me.tableabo_view1 = CType(MyBase.Tables("abo_view1"),abo_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableabo_view1) Is Nothing) Then
                Me.tableabo_view1.InitVars
            End If
        End If
        Me.tableabo_stop_why = CType(MyBase.Tables("abo_stop_why"),abo_stop_whyDataTable)
        If (initTable = true) Then
            If (Not (Me.tableabo_stop_why) Is Nothing) Then
                Me.tableabo_stop_why.InitVars
            End If
        End If
        Me.tableabo_stop_why_explained = CType(MyBase.Tables("abo_stop_why_explained"),abo_stop_why_explainedDataTable)
        If (initTable = true) Then
            If (Not (Me.tableabo_stop_why_explained) Is Nothing) Then
                Me.tableabo_stop_why_explained.InitVars
            End If
        End If
        Me.tableabo_stop_why_view1 = CType(MyBase.Tables("abo_stop_why_view1"),abo_stop_why_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableabo_stop_why_view1) Is Nothing) Then
                Me.tableabo_stop_why_view1.InitVars
            End If
        End If
        Me.tableogone_payment = CType(MyBase.Tables("ogone_payment"),ogone_paymentDataTable)
        If (initTable = true) Then
            If (Not (Me.tableogone_payment) Is Nothing) Then
                Me.tableogone_payment.InitVars
            End If
        End If
        Me.tabledomiciliation_payment = CType(MyBase.Tables("domiciliation_payment"),domiciliation_paymentDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledomiciliation_payment) Is Nothing) Then
                Me.tabledomiciliation_payment.InitVars
            End If
        End If
        Me.tablewishlist_assigned_view1 = CType(MyBase.Tables("wishlist_assigned_view1"),wishlist_assigned_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tablewishlist_assigned_view1) Is Nothing) Then
                Me.tablewishlist_assigned_view1.InitVars
            End If
        End If
        Me.tableaboreconduction_view1 = CType(MyBase.Tables("aboreconduction_view1"),aboreconduction_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableaboreconduction_view1) Is Nothing) Then
                Me.tableaboreconduction_view1.InitVars
            End If
        End If
        Me.tableogone_payment_Validate = CType(MyBase.Tables("ogone_payment_Validate"),ogone_payment_ValidateDataTable)
        If (initTable = true) Then
            If (Not (Me.tableogone_payment_Validate) Is Nothing) Then
                Me.tableogone_payment_Validate.InitVars
            End If
        End If
        Me.tabledomiciliation_payment_Validate = CType(MyBase.Tables("domiciliation_payment_Validate"),domiciliation_payment_ValidateDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledomiciliation_payment_Validate) Is Nothing) Then
                Me.tabledomiciliation_payment_Validate.InitVars
            End If
        End If
        Me.tablemail_messages_sent_history_view1 = CType(MyBase.Tables("mail_messages_sent_history_view1"),mail_messages_sent_history_view1DataTable)
        If (initTable = true) Then
            If (Not (Me.tablemail_messages_sent_history_view1) Is Nothing) Then
                Me.tablemail_messages_sent_history_view1.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dsAboRent"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsAboRent.xsd"
        Me.Locale = New Global.System.Globalization.CultureInfo("en-US")
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablecustomers = New customersDataTable
        MyBase.Tables.Add(Me.tablecustomers)
        Me.tableproducts = New productsDataTable
        MyBase.Tables.Add(Me.tableproducts)
        Me.tableabo = New aboDataTable
        MyBase.Tables.Add(Me.tableabo)
        Me.tableabo_action = New abo_actionDataTable
        MyBase.Tables.Add(Me.tableabo_action)
        Me.tableAboRent = New AboRentDataTable
        MyBase.Tables.Add(Me.tableAboRent)
        Me.tableabo_view2 = New abo_view2DataTable
        MyBase.Tables.Add(Me.tableabo_view2)
        Me.tableabo_view1 = New abo_view1DataTable
        MyBase.Tables.Add(Me.tableabo_view1)
        Me.tableabo_stop_why = New abo_stop_whyDataTable
        MyBase.Tables.Add(Me.tableabo_stop_why)
        Me.tableabo_stop_why_explained = New abo_stop_why_explainedDataTable
        MyBase.Tables.Add(Me.tableabo_stop_why_explained)
        Me.tableabo_stop_why_view1 = New abo_stop_why_view1DataTable
        MyBase.Tables.Add(Me.tableabo_stop_why_view1)
        Me.tableogone_payment = New ogone_paymentDataTable
        MyBase.Tables.Add(Me.tableogone_payment)
        Me.tabledomiciliation_payment = New domiciliation_paymentDataTable
        MyBase.Tables.Add(Me.tabledomiciliation_payment)
        Me.tablewishlist_assigned_view1 = New wishlist_assigned_view1DataTable
        MyBase.Tables.Add(Me.tablewishlist_assigned_view1)
        Me.tableaboreconduction_view1 = New aboreconduction_view1DataTable
        MyBase.Tables.Add(Me.tableaboreconduction_view1)
        Me.tableogone_payment_Validate = New ogone_payment_ValidateDataTable
        MyBase.Tables.Add(Me.tableogone_payment_Validate)
        Me.tabledomiciliation_payment_Validate = New domiciliation_payment_ValidateDataTable
        MyBase.Tables.Add(Me.tabledomiciliation_payment_Validate)
        Me.tablemail_messages_sent_history_view1 = New mail_messages_sent_history_view1DataTable
        MyBase.Tables.Add(Me.tablemail_messages_sent_history_view1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecustomers() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeproducts() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeabo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeabo_action() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeAboRent() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeabo_view2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeabo_view1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeabo_stop_why() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeabo_stop_why_explained() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeabo_stop_why_view1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeogone_payment() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedomiciliation_payment() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializewishlist_assigned_view1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeaboreconduction_view1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeogone_payment_Validate() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedomiciliation_payment_Validate() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializemail_messages_sent_history_view1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsAboRent = New dsAboRent
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub customersRowChangeEventHandler(ByVal sender As Object, ByVal e As customersRowChangeEvent)
    
    Public Delegate Sub productsRowChangeEventHandler(ByVal sender As Object, ByVal e As productsRowChangeEvent)
    
    Public Delegate Sub aboRowChangeEventHandler(ByVal sender As Object, ByVal e As aboRowChangeEvent)
    
    Public Delegate Sub abo_actionRowChangeEventHandler(ByVal sender As Object, ByVal e As abo_actionRowChangeEvent)
    
    Public Delegate Sub AboRentRowChangeEventHandler(ByVal sender As Object, ByVal e As AboRentRowChangeEvent)
    
    Public Delegate Sub abo_view2RowChangeEventHandler(ByVal sender As Object, ByVal e As abo_view2RowChangeEvent)
    
    Public Delegate Sub abo_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As abo_view1RowChangeEvent)
    
    Public Delegate Sub abo_stop_whyRowChangeEventHandler(ByVal sender As Object, ByVal e As abo_stop_whyRowChangeEvent)
    
    Public Delegate Sub abo_stop_why_explainedRowChangeEventHandler(ByVal sender As Object, ByVal e As abo_stop_why_explainedRowChangeEvent)
    
    Public Delegate Sub abo_stop_why_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As abo_stop_why_view1RowChangeEvent)
    
    Public Delegate Sub ogone_paymentRowChangeEventHandler(ByVal sender As Object, ByVal e As ogone_paymentRowChangeEvent)
    
    Public Delegate Sub domiciliation_paymentRowChangeEventHandler(ByVal sender As Object, ByVal e As domiciliation_paymentRowChangeEvent)
    
    Public Delegate Sub wishlist_assigned_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As wishlist_assigned_view1RowChangeEvent)
    
    Public Delegate Sub aboreconduction_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As aboreconduction_view1RowChangeEvent)
    
    Public Delegate Sub ogone_payment_ValidateRowChangeEventHandler(ByVal sender As Object, ByVal e As ogone_payment_ValidateRowChangeEvent)
    
    Public Delegate Sub domiciliation_payment_ValidateRowChangeEventHandler(ByVal sender As Object, ByVal e As domiciliation_payment_ValidateRowChangeEvent)
    
    Public Delegate Sub mail_messages_sent_history_view1RowChangeEventHandler(ByVal sender As Object, ByVal e As mail_messages_sent_history_view1RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class customersDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_gender As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_dob As Global.System.Data.DataColumn
        
        Private columnemail As Global.System.Data.DataColumn
        
        Private columncustomers_default_address_id As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columnencrypted_password As Global.System.Data.DataColumn
        
        Private columncustomers_newsletter As Global.System.Data.DataColumn
        
        Private columncustomers_newsletterpartner As Global.System.Data.DataColumn
        
        Private columncustomers_abo As Global.System.Data.DataColumn
        
        Private columncustomers_abo_suspended As Global.System.Data.DataColumn
        
        Private columncustomers_abo_type As Global.System.Data.DataColumn
        
        Private columncustomers_abo_method As Global.System.Data.DataColumn
        
        Private columncustomers_abo_validityto As Global.System.Data.DataColumn
        
        Private columncustomers_abo_discount_recurring_to_date As Global.System.Data.DataColumn
        
        Private columncustomers_abo_payment_method As Global.System.Data.DataColumn
        
        Private columnogone_card_type As Global.System.Data.DataColumn
        
        Private columnogone_card_no As Global.System.Data.DataColumn
        
        Private columnogone_exp_date As Global.System.Data.DataColumn
        
        Private columnogone_owner As Global.System.Data.DataColumn
        
        Private columnogone_cc_expiration_status As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "customers"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_dob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_default_address_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_default_address_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property encrypted_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnencrypted_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterpartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletterpartner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_suspendedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_suspended
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_discount_recurring_to_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_discount_recurring_to_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_payment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_exp_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_exp_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_cc_expiration_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_cc_expiration_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As customersRow
            Get
                Return CType(Me.Rows(index),customersRow)
            End Get
        End Property
        
        Public Event customersRowChanging As customersRowChangeEventHandler
        
        Public Event customersRowChanged As customersRowChangeEventHandler
        
        Public Event customersRowDeleting As customersRowChangeEventHandler
        
        Public Event customersRowDeleted As customersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddcustomersRow(ByVal row As customersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddcustomersRow( _
                    ByVal customers_gender As String,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_lastname As String,  _
                    ByVal customers_dob As Date,  _
                    ByVal email As String,  _
                    ByVal customers_default_address_id As Integer,  _
                    ByVal customers_telephone As String,  _
                    ByVal encrypted_password As String,  _
                    ByVal customers_newsletter As String,  _
                    ByVal customers_newsletterpartner As String,  _
                    ByVal customers_abo As Integer,  _
                    ByVal customers_abo_suspended As Integer,  _
                    ByVal customers_abo_type As Integer,  _
                    ByVal customers_abo_method As Integer,  _
                    ByVal customers_abo_validityto As Date,  _
                    ByVal customers_abo_discount_recurring_to_date As Date,  _
                    ByVal customers_abo_payment_method As Integer,  _
                    ByVal ogone_card_type As String,  _
                    ByVal ogone_card_no As String,  _
                    ByVal ogone_exp_date As String,  _
                    ByVal ogone_owner As String,  _
                    ByVal ogone_cc_expiration_status As Integer) As customersRow
            Dim rowcustomersRow As customersRow = CType(Me.NewRow,customersRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customers_gender, customers_firstname, customers_lastname, customers_dob, email, customers_default_address_id, customers_telephone, encrypted_password, customers_newsletter, customers_newsletterpartner, customers_abo, customers_abo_suspended, customers_abo_type, customers_abo_method, customers_abo_validityto, customers_abo_discount_recurring_to_date, customers_abo_payment_method, ogone_card_type, ogone_card_no, ogone_exp_date, ogone_owner, ogone_cc_expiration_status}
            rowcustomersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcustomersRow)
            Return rowcustomersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycustomers_id(ByVal customers_id As Integer) As customersRow
            Return CType(Me.Rows.Find(New Object() {customers_id}),customersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As customersDataTable = CType(MyBase.Clone,customersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New customersDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_gender = MyBase.Columns("customers_gender")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_dob = MyBase.Columns("customers_dob")
            Me.columnemail = MyBase.Columns("email")
            Me.columncustomers_default_address_id = MyBase.Columns("customers_default_address_id")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columnencrypted_password = MyBase.Columns("encrypted_password")
            Me.columncustomers_newsletter = MyBase.Columns("customers_newsletter")
            Me.columncustomers_newsletterpartner = MyBase.Columns("customers_newsletterpartner")
            Me.columncustomers_abo = MyBase.Columns("customers_abo")
            Me.columncustomers_abo_suspended = MyBase.Columns("customers_abo_suspended")
            Me.columncustomers_abo_type = MyBase.Columns("customers_abo_type")
            Me.columncustomers_abo_method = MyBase.Columns("customers_abo_method")
            Me.columncustomers_abo_validityto = MyBase.Columns("customers_abo_validityto")
            Me.columncustomers_abo_discount_recurring_to_date = MyBase.Columns("customers_abo_discount_recurring_to_date")
            Me.columncustomers_abo_payment_method = MyBase.Columns("customers_abo_payment_method")
            Me.columnogone_card_type = MyBase.Columns("ogone_card_type")
            Me.columnogone_card_no = MyBase.Columns("ogone_card_no")
            Me.columnogone_exp_date = MyBase.Columns("ogone_exp_date")
            Me.columnogone_owner = MyBase.Columns("ogone_owner")
            Me.columnogone_cc_expiration_status = MyBase.Columns("ogone_cc_expiration_status")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_gender = New Global.System.Data.DataColumn("customers_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_gender)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_dob = New Global.System.Data.DataColumn("customers_dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_dob)
            Me.columnemail = New Global.System.Data.DataColumn("email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columncustomers_default_address_id = New Global.System.Data.DataColumn("customers_default_address_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_default_address_id)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columnencrypted_password = New Global.System.Data.DataColumn("encrypted_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnencrypted_password)
            Me.columncustomers_newsletter = New Global.System.Data.DataColumn("customers_newsletter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletter)
            Me.columncustomers_newsletterpartner = New Global.System.Data.DataColumn("customers_newsletterpartner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletterpartner)
            Me.columncustomers_abo = New Global.System.Data.DataColumn("customers_abo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo)
            Me.columncustomers_abo_suspended = New Global.System.Data.DataColumn("customers_abo_suspended", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_suspended)
            Me.columncustomers_abo_type = New Global.System.Data.DataColumn("customers_abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_type)
            Me.columncustomers_abo_method = New Global.System.Data.DataColumn("customers_abo_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_method)
            Me.columncustomers_abo_validityto = New Global.System.Data.DataColumn("customers_abo_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_validityto)
            Me.columncustomers_abo_discount_recurring_to_date = New Global.System.Data.DataColumn("customers_abo_discount_recurring_to_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_discount_recurring_to_date)
            Me.columncustomers_abo_payment_method = New Global.System.Data.DataColumn("customers_abo_payment_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_payment_method)
            Me.columnogone_card_type = New Global.System.Data.DataColumn("ogone_card_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_type)
            Me.columnogone_card_no = New Global.System.Data.DataColumn("ogone_card_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_no)
            Me.columnogone_exp_date = New Global.System.Data.DataColumn("ogone_exp_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_exp_date)
            Me.columnogone_owner = New Global.System.Data.DataColumn("ogone_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_owner)
            Me.columnogone_cc_expiration_status = New Global.System.Data.DataColumn("ogone_cc_expiration_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_cc_expiration_status)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsAboRentKey2", New Global.System.Data.DataColumn() {Me.columncustomers_id}, true))
            Me.columncustomers_id.AutoIncrement = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_id.ReadOnly = true
            Me.columncustomers_id.Unique = true
            Me.columncustomers_gender.AllowDBNull = false
            Me.columncustomers_firstname.AllowDBNull = false
            Me.columncustomers_lastname.AllowDBNull = false
            Me.columnemail.AllowDBNull = false
            Me.columncustomers_default_address_id.AllowDBNull = false
            Me.columncustomers_telephone.AllowDBNull = false
            Me.columnencrypted_password.AllowDBNull = false
            Me.columncustomers_abo.AllowDBNull = false
            Me.columncustomers_abo_suspended.AllowDBNull = false
            Me.columncustomers_abo_type.AllowDBNull = false
            Me.columncustomers_abo_method.AllowDBNull = false
            Me.columncustomers_abo_payment_method.AllowDBNull = false
            Me.columnogone_cc_expiration_status.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewcustomersRow() As customersRow
            Return CType(Me.NewRow,customersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New customersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(customersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.customersRowChangedEvent) Is Nothing) Then
                RaiseEvent customersRowChanged(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.customersRowChangingEvent) Is Nothing) Then
                RaiseEvent customersRowChanging(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.customersRowDeletedEvent) Is Nothing) Then
                RaiseEvent customersRowDeleted(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.customersRowDeletingEvent) Is Nothing) Then
                RaiseEvent customersRowDeleting(Me, New customersRowChangeEvent(CType(e.Row,customersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovecustomersRow(ByVal row As customersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "customersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class productsDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnimdb_id As Global.System.Data.DataColumn
        
        Private columnproducts_title As Global.System.Data.DataColumn
        
        Private columnproducts_price As Global.System.Data.DataColumn
        
        Private columnproducts_date_added As Global.System.Data.DataColumn
        
        Private columnproducts_last_modified As Global.System.Data.DataColumn
        
        Private columnproducts_date_available As Global.System.Data.DataColumn
        
        Private columnproducts_status As Global.System.Data.DataColumn
        
        Private columnproducts_public As Global.System.Data.DataColumn
        
        Private columnproducts_runtime As Global.System.Data.DataColumn
        
        Private columnproducts_year As Global.System.Data.DataColumn
        
        Private columnproducts_countries_id As Global.System.Data.DataColumn
        
        Private columnproducts_picture_format As Global.System.Data.DataColumn
        
        Private columnproducts_rating As Global.System.Data.DataColumn
        
        Private columnproducts_directors_id As Global.System.Data.DataColumn
        
        Private columnproducts_studio As Global.System.Data.DataColumn
        
        Private columnin_cinema_now As Global.System.Data.DataColumn
        
        Private columnproducts_series_id As Global.System.Data.DataColumn
        
        Private columnproducts_series_number As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "products"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imdb_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimdb_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_last_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_availableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_available
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_publicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_public
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_runtimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_runtime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_yearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_countries_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_countries_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_picture_formatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_picture_format
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_ratingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_rating
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_directors_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_directors_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_studioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_studio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_cinema_nowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_cinema_now
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As productsRow
            Get
                Return CType(Me.Rows(index),productsRow)
            End Get
        End Property
        
        Public Event productsRowChanging As productsRowChangeEventHandler
        
        Public Event productsRowChanged As productsRowChangeEventHandler
        
        Public Event productsRowDeleting As productsRowChangeEventHandler
        
        Public Event productsRowDeleted As productsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddproductsRow(ByVal row As productsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddproductsRow( _
                    ByVal products_id As Integer,  _
                    ByVal products_model As String,  _
                    ByVal imdb_id As Integer,  _
                    ByVal products_title As String,  _
                    ByVal products_price As Decimal,  _
                    ByVal products_date_added As Date,  _
                    ByVal products_last_modified As Date,  _
                    ByVal products_date_available As Date,  _
                    ByVal products_status As Integer,  _
                    ByVal products_public As Integer,  _
                    ByVal products_runtime As Integer,  _
                    ByVal products_year As Integer,  _
                    ByVal products_countries_id As Integer,  _
                    ByVal products_picture_format As Integer,  _
                    ByVal products_rating As Integer,  _
                    ByVal products_directors_id As Integer,  _
                    ByVal products_studio As Integer,  _
                    ByVal in_cinema_now As Integer,  _
                    ByVal products_series_id As Integer,  _
                    ByVal products_series_number As Integer) As productsRow
            Dim rowproductsRow As productsRow = CType(Me.NewRow,productsRow)
            Dim columnValuesArray() As Object = New Object() {products_id, products_model, imdb_id, products_title, products_price, products_date_added, products_last_modified, products_date_available, products_status, products_public, products_runtime, products_year, products_countries_id, products_picture_format, products_rating, products_directors_id, products_studio, in_cinema_now, products_series_id, products_series_number}
            rowproductsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowproductsRow)
            Return rowproductsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByproducts_id(ByVal products_id As Integer) As productsRow
            Return CType(Me.Rows.Find(New Object() {products_id}),productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As productsDataTable = CType(MyBase.Clone,productsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New productsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnimdb_id = MyBase.Columns("imdb_id")
            Me.columnproducts_title = MyBase.Columns("products_title")
            Me.columnproducts_price = MyBase.Columns("products_price")
            Me.columnproducts_date_added = MyBase.Columns("products_date_added")
            Me.columnproducts_last_modified = MyBase.Columns("products_last_modified")
            Me.columnproducts_date_available = MyBase.Columns("products_date_available")
            Me.columnproducts_status = MyBase.Columns("products_status")
            Me.columnproducts_public = MyBase.Columns("products_public")
            Me.columnproducts_runtime = MyBase.Columns("products_runtime")
            Me.columnproducts_year = MyBase.Columns("products_year")
            Me.columnproducts_countries_id = MyBase.Columns("products_countries_id")
            Me.columnproducts_picture_format = MyBase.Columns("products_picture_format")
            Me.columnproducts_rating = MyBase.Columns("products_rating")
            Me.columnproducts_directors_id = MyBase.Columns("products_directors_id")
            Me.columnproducts_studio = MyBase.Columns("products_studio")
            Me.columnin_cinema_now = MyBase.Columns("in_cinema_now")
            Me.columnproducts_series_id = MyBase.Columns("products_series_id")
            Me.columnproducts_series_number = MyBase.Columns("products_series_number")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnimdb_id = New Global.System.Data.DataColumn("imdb_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimdb_id)
            Me.columnproducts_title = New Global.System.Data.DataColumn("products_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_title)
            Me.columnproducts_price = New Global.System.Data.DataColumn("products_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_price)
            Me.columnproducts_date_added = New Global.System.Data.DataColumn("products_date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_added)
            Me.columnproducts_last_modified = New Global.System.Data.DataColumn("products_last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_last_modified)
            Me.columnproducts_date_available = New Global.System.Data.DataColumn("products_date_available", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_available)
            Me.columnproducts_status = New Global.System.Data.DataColumn("products_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_status)
            Me.columnproducts_public = New Global.System.Data.DataColumn("products_public", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_public)
            Me.columnproducts_runtime = New Global.System.Data.DataColumn("products_runtime", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_runtime)
            Me.columnproducts_year = New Global.System.Data.DataColumn("products_year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_year)
            Me.columnproducts_countries_id = New Global.System.Data.DataColumn("products_countries_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_countries_id)
            Me.columnproducts_picture_format = New Global.System.Data.DataColumn("products_picture_format", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_picture_format)
            Me.columnproducts_rating = New Global.System.Data.DataColumn("products_rating", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_rating)
            Me.columnproducts_directors_id = New Global.System.Data.DataColumn("products_directors_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_directors_id)
            Me.columnproducts_studio = New Global.System.Data.DataColumn("products_studio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_studio)
            Me.columnin_cinema_now = New Global.System.Data.DataColumn("in_cinema_now", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_cinema_now)
            Me.columnproducts_series_id = New Global.System.Data.DataColumn("products_series_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_id)
            Me.columnproducts_series_number = New Global.System.Data.DataColumn("products_series_number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_number)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsAboRentKey3", New Global.System.Data.DataColumn() {Me.columnproducts_id}, true))
            Me.columnproducts_id.AllowDBNull = false
            Me.columnproducts_id.Unique = true
            Me.columnimdb_id.AllowDBNull = false
            Me.columnproducts_title.AllowDBNull = false
            Me.columnproducts_price.AllowDBNull = false
            Me.columnproducts_status.AllowDBNull = false
            Me.columnproducts_countries_id.AllowDBNull = false
            Me.columnin_cinema_now.AllowDBNull = false
            Me.columnproducts_series_id.AllowDBNull = false
            Me.columnproducts_series_number.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewproductsRow() As productsRow
            Return CType(Me.NewRow,productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New productsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(productsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.productsRowChangedEvent) Is Nothing) Then
                RaiseEvent productsRowChanged(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.productsRowChangingEvent) Is Nothing) Then
                RaiseEvent productsRowChanging(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.productsRowDeletedEvent) Is Nothing) Then
                RaiseEvent productsRowDeleted(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.productsRowDeletingEvent) Is Nothing) Then
                RaiseEvent productsRowDeleting(Me, New productsRowChangeEvent(CType(e.Row,productsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveproductsRow(ByVal row As productsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "productsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class aboDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnabo_id As Global.System.Data.DataColumn
        
        Private columncustomerid As Global.System.Data.DataColumn
        
        Private columnAction As Global.System.Data.DataColumn
        
        Private columncode_id As Global.System.Data.DataColumn
        
        Private columnDate As Global.System.Data.DataColumn
        
        Private columnproduct_id As Global.System.Data.DataColumn
        
        Private columnpayment_method As Global.System.Data.DataColumn
        
        Private columnprivilege_notified As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "abo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customeridColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomerid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ActionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property product_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproduct_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property privilege_notifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprivilege_notified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As aboRow
            Get
                Return CType(Me.Rows(index),aboRow)
            End Get
        End Property
        
        Public Event aboRowChanging As aboRowChangeEventHandler
        
        Public Event aboRowChanged As aboRowChangeEventHandler
        
        Public Event aboRowDeleting As aboRowChangeEventHandler
        
        Public Event aboRowDeleted As aboRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddaboRow(ByVal row As aboRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddaboRow(ByVal customerid As Integer, ByVal Action As Integer, ByVal code_id As Integer, ByVal _Date As Date, ByVal product_id As Integer, ByVal payment_method As String, ByVal privilege_notified As Integer, ByVal comment As String, ByVal site As Integer) As aboRow
            Dim rowaboRow As aboRow = CType(Me.NewRow,aboRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customerid, Action, code_id, _Date, product_id, payment_method, privilege_notified, comment, site}
            rowaboRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowaboRow)
            Return rowaboRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByabo_id(ByVal abo_id As Integer) As aboRow
            Return CType(Me.Rows.Find(New Object() {abo_id}),aboRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As aboDataTable = CType(MyBase.Clone,aboDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New aboDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnabo_id = MyBase.Columns("abo_id")
            Me.columncustomerid = MyBase.Columns("customerid")
            Me.columnAction = MyBase.Columns("Action")
            Me.columncode_id = MyBase.Columns("code_id")
            Me.columnDate = MyBase.Columns("Date")
            Me.columnproduct_id = MyBase.Columns("product_id")
            Me.columnpayment_method = MyBase.Columns("payment_method")
            Me.columnprivilege_notified = MyBase.Columns("privilege_notified")
            Me.columncomment = MyBase.Columns("comment")
            Me.columnsite = MyBase.Columns("site")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnabo_id = New Global.System.Data.DataColumn("abo_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_id)
            Me.columncustomerid = New Global.System.Data.DataColumn("customerid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomerid)
            Me.columnAction = New Global.System.Data.DataColumn("Action", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAction)
            Me.columncode_id = New Global.System.Data.DataColumn("code_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode_id)
            Me.columnDate = New Global.System.Data.DataColumn("Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "DateColumn")
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnDate")
            Me.columnDate.ExtendedProperties.Add("Generator_UserColumnName", "Date")
            MyBase.Columns.Add(Me.columnDate)
            Me.columnproduct_id = New Global.System.Data.DataColumn("product_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproduct_id)
            Me.columnpayment_method = New Global.System.Data.DataColumn("payment_method", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayment_method)
            Me.columnprivilege_notified = New Global.System.Data.DataColumn("privilege_notified", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprivilege_notified)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsAboRentKey4", New Global.System.Data.DataColumn() {Me.columnabo_id}, true))
            Me.columnabo_id.AutoIncrement = true
            Me.columnabo_id.AllowDBNull = false
            Me.columnabo_id.ReadOnly = true
            Me.columnabo_id.Unique = true
            Me.columncustomerid.AllowDBNull = false
            Me.columnAction.AllowDBNull = false
            Me.columnproduct_id.AllowDBNull = false
            Me.columnpayment_method.AllowDBNull = false
            Me.columnprivilege_notified.AllowDBNull = false
            Me.columncomment.AllowDBNull = false
            Me.columnsite.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewaboRow() As aboRow
            Return CType(Me.NewRow,aboRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New aboRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(aboRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.aboRowChangedEvent) Is Nothing) Then
                RaiseEvent aboRowChanged(Me, New aboRowChangeEvent(CType(e.Row,aboRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.aboRowChangingEvent) Is Nothing) Then
                RaiseEvent aboRowChanging(Me, New aboRowChangeEvent(CType(e.Row,aboRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.aboRowDeletedEvent) Is Nothing) Then
                RaiseEvent aboRowDeleted(Me, New aboRowChangeEvent(CType(e.Row,aboRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.aboRowDeletingEvent) Is Nothing) Then
                RaiseEvent aboRowDeleting(Me, New aboRowChangeEvent(CType(e.Row,aboRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveaboRow(ByVal row As aboRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "aboDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class abo_actionDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnname As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "abo_action"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As abo_actionRow
            Get
                Return CType(Me.Rows(index),abo_actionRow)
            End Get
        End Property
        
        Public Event abo_actionRowChanging As abo_actionRowChangeEventHandler
        
        Public Event abo_actionRowChanged As abo_actionRowChangeEventHandler
        
        Public Event abo_actionRowDeleting As abo_actionRowChangeEventHandler
        
        Public Event abo_actionRowDeleted As abo_actionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addabo_actionRow(ByVal row As abo_actionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addabo_actionRow(ByVal id As Integer, ByVal name As String) As abo_actionRow
            Dim rowabo_actionRow As abo_actionRow = CType(Me.NewRow,abo_actionRow)
            Dim columnValuesArray() As Object = New Object() {id, name}
            rowabo_actionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowabo_actionRow)
            Return rowabo_actionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As abo_actionDataTable = CType(MyBase.Clone,abo_actionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New abo_actionDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnname = MyBase.Columns("name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnid.AllowDBNull = false
            Me.columnname.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newabo_actionRow() As abo_actionRow
            Return CType(Me.NewRow,abo_actionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New abo_actionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(abo_actionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.abo_actionRowChangedEvent) Is Nothing) Then
                RaiseEvent abo_actionRowChanged(Me, New abo_actionRowChangeEvent(CType(e.Row,abo_actionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.abo_actionRowChangingEvent) Is Nothing) Then
                RaiseEvent abo_actionRowChanging(Me, New abo_actionRowChangeEvent(CType(e.Row,abo_actionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.abo_actionRowDeletedEvent) Is Nothing) Then
                RaiseEvent abo_actionRowDeleted(Me, New abo_actionRowChangeEvent(CType(e.Row,abo_actionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.abo_actionRowDeletingEvent) Is Nothing) Then
                RaiseEvent abo_actionRowDeleting(Me, New abo_actionRowChangeEvent(CType(e.Row,abo_actionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeabo_actionRow(ByVal row As abo_actionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "abo_actionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AboRentDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnabo As Global.System.Data.DataColumn
        
        Private columnabo_type As Global.System.Data.DataColumn
        
        Private columnabo_type_desc As Global.System.Data.DataColumn
        
        Private columnRentals As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "AboRent"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_type_descColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_type_desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RentalsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRentals
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AboRentRow
            Get
                Return CType(Me.Rows(index),AboRentRow)
            End Get
        End Property
        
        Public Event AboRentRowChanging As AboRentRowChangeEventHandler
        
        Public Event AboRentRowChanged As AboRentRowChangeEventHandler
        
        Public Event AboRentRowDeleting As AboRentRowChangeEventHandler
        
        Public Event AboRentRowDeleted As AboRentRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddAboRentRow(ByVal row As AboRentRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddAboRentRow(ByVal abo As Integer, ByVal abo_type As Integer, ByVal abo_type_desc As String, ByVal Rentals As Integer) As AboRentRow
            Dim rowAboRentRow As AboRentRow = CType(Me.NewRow,AboRentRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, abo, abo_type, abo_type_desc, Rentals}
            rowAboRentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAboRentRow)
            Return rowAboRentRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycustomers_id(ByVal customers_id As Integer) As AboRentRow
            Return CType(Me.Rows.Find(New Object() {customers_id}),AboRentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AboRentDataTable = CType(MyBase.Clone,AboRentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AboRentDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnabo = MyBase.Columns("abo")
            Me.columnabo_type = MyBase.Columns("abo_type")
            Me.columnabo_type_desc = MyBase.Columns("abo_type_desc")
            Me.columnRentals = MyBase.Columns("Rentals")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnabo = New Global.System.Data.DataColumn("abo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo)
            Me.columnabo_type = New Global.System.Data.DataColumn("abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_type)
            Me.columnabo_type_desc = New Global.System.Data.DataColumn("abo_type_desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_type_desc)
            Me.columnRentals = New Global.System.Data.DataColumn("Rentals", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRentals)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsAboRentKey5", New Global.System.Data.DataColumn() {Me.columncustomers_id}, true))
            Me.columncustomers_id.AutoIncrement = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_id.ReadOnly = true
            Me.columncustomers_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewAboRentRow() As AboRentRow
            Return CType(Me.NewRow,AboRentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AboRentRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AboRentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AboRentRowChangedEvent) Is Nothing) Then
                RaiseEvent AboRentRowChanged(Me, New AboRentRowChangeEvent(CType(e.Row,AboRentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AboRentRowChangingEvent) Is Nothing) Then
                RaiseEvent AboRentRowChanging(Me, New AboRentRowChangeEvent(CType(e.Row,AboRentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AboRentRowDeletedEvent) Is Nothing) Then
                RaiseEvent AboRentRowDeleted(Me, New AboRentRowChangeEvent(CType(e.Row,AboRentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AboRentRowDeletingEvent) Is Nothing) Then
                RaiseEvent AboRentRowDeleting(Me, New AboRentRowChangeEvent(CType(e.Row,AboRentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveAboRentRow(ByVal row As AboRentRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AboRentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class abo_view2DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnabo_id As Global.System.Data.DataColumn
        
        Private columncustomerid As Global.System.Data.DataColumn
        
        Private columnAction As Global.System.Data.DataColumn
        
        Private columncode_id As Global.System.Data.DataColumn
        
        Private columnproduct_id As Global.System.Data.DataColumn
        
        Private columnabo_date As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "abo_view2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customeridColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomerid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ActionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property product_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproduct_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As abo_view2Row
            Get
                Return CType(Me.Rows(index),abo_view2Row)
            End Get
        End Property
        
        Public Event abo_view2RowChanging As abo_view2RowChangeEventHandler
        
        Public Event abo_view2RowChanged As abo_view2RowChangeEventHandler
        
        Public Event abo_view2RowDeleting As abo_view2RowChangeEventHandler
        
        Public Event abo_view2RowDeleted As abo_view2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addabo_view2Row(ByVal row As abo_view2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addabo_view2Row(ByVal abo_id As Integer, ByVal customerid As Integer, ByVal Action As Integer, ByVal code_id As Integer, ByVal product_id As Integer, ByVal abo_date As Date) As abo_view2Row
            Dim rowabo_view2Row As abo_view2Row = CType(Me.NewRow,abo_view2Row)
            Dim columnValuesArray() As Object = New Object() {abo_id, customerid, Action, code_id, product_id, abo_date}
            rowabo_view2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowabo_view2Row)
            Return rowabo_view2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As abo_view2DataTable = CType(MyBase.Clone,abo_view2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New abo_view2DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnabo_id = MyBase.Columns("abo_id")
            Me.columncustomerid = MyBase.Columns("customerid")
            Me.columnAction = MyBase.Columns("Action")
            Me.columncode_id = MyBase.Columns("code_id")
            Me.columnproduct_id = MyBase.Columns("product_id")
            Me.columnabo_date = MyBase.Columns("abo_date")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnabo_id = New Global.System.Data.DataColumn("abo_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_id)
            Me.columncustomerid = New Global.System.Data.DataColumn("customerid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomerid)
            Me.columnAction = New Global.System.Data.DataColumn("Action", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAction)
            Me.columncode_id = New Global.System.Data.DataColumn("code_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode_id)
            Me.columnproduct_id = New Global.System.Data.DataColumn("product_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproduct_id)
            Me.columnabo_date = New Global.System.Data.DataColumn("abo_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_date)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newabo_view2Row() As abo_view2Row
            Return CType(Me.NewRow,abo_view2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New abo_view2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(abo_view2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.abo_view2RowChangedEvent) Is Nothing) Then
                RaiseEvent abo_view2RowChanged(Me, New abo_view2RowChangeEvent(CType(e.Row,abo_view2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.abo_view2RowChangingEvent) Is Nothing) Then
                RaiseEvent abo_view2RowChanging(Me, New abo_view2RowChangeEvent(CType(e.Row,abo_view2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.abo_view2RowDeletedEvent) Is Nothing) Then
                RaiseEvent abo_view2RowDeleted(Me, New abo_view2RowChangeEvent(CType(e.Row,abo_view2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.abo_view2RowDeletingEvent) Is Nothing) Then
                RaiseEvent abo_view2RowDeleting(Me, New abo_view2RowChangeEvent(CType(e.Row,abo_view2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeabo_view2Row(ByVal row As abo_view2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "abo_view2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class abo_view1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnabo_id As Global.System.Data.DataColumn
        
        Private columncustomerid As Global.System.Data.DataColumn
        
        Private columnAction As Global.System.Data.DataColumn
        
        Private columncode_id As Global.System.Data.DataColumn
        
        Private columnabo_date As Global.System.Data.DataColumn
        
        Private columnproduct_id As Global.System.Data.DataColumn
        
        Private columnpayment_method As Global.System.Data.DataColumn
        
        Private columnprivilege_notified As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columnsite As Global.System.Data.DataColumn
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnname As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_gender As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_dob As Global.System.Data.DataColumn
        
        Private columnemail As Global.System.Data.DataColumn
        
        Private columncustomers_default_address_id As Global.System.Data.DataColumn
        
        Private columncustomers_telephone As Global.System.Data.DataColumn
        
        Private columnencrypted_password As Global.System.Data.DataColumn
        
        Private columncustomers_newsletter As Global.System.Data.DataColumn
        
        Private columncustomers_newsletterpartner As Global.System.Data.DataColumn
        
        Private columncustomers_abo As Global.System.Data.DataColumn
        
        Private columncustomers_abo_suspended As Global.System.Data.DataColumn
        
        Private columncustomers_abo_type As Global.System.Data.DataColumn
        
        Private columncustomers_language As Global.System.Data.DataColumn
        
        Private columncustomers_abo_validityto As Global.System.Data.DataColumn
        
        Private columncustomers_abo_discount_recurring_to_date As Global.System.Data.DataColumn
        
        Private columncustomers_abo_payment_method As Global.System.Data.DataColumn
        
        Private columnogone_card_type As Global.System.Data.DataColumn
        
        Private columnogone_card_no As Global.System.Data.DataColumn
        
        Private columnogone_exp_date As Global.System.Data.DataColumn
        
        Private columnogone_owner As Global.System.Data.DataColumn
        
        Private columnogone_cc_expiration_status As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columncustomers_enquiry_id As Global.System.Data.DataColumn
        
        Private columndate_first_delivery As Global.System.Data.DataColumn
        
        Private columnmail_wl_adult_not_sufficient As Global.System.Data.DataColumn
        
        Private columnmail_wl_norm_not_sufficient As Global.System.Data.DataColumn
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnimdb_id As Global.System.Data.DataColumn
        
        Private columnproducts_title As Global.System.Data.DataColumn
        
        Private columnproducts_price As Global.System.Data.DataColumn
        
        Private columnproducts_date_added As Global.System.Data.DataColumn
        
        Private columnproducts_last_modified As Global.System.Data.DataColumn
        
        Private columnproducts_date_available As Global.System.Data.DataColumn
        
        Private columnproducts_status As Global.System.Data.DataColumn
        
        Private columnproducts_public As Global.System.Data.DataColumn
        
        Private columnproducts_runtime As Global.System.Data.DataColumn
        
        Private columnproducts_year As Global.System.Data.DataColumn
        
        Private columnproducts_countries_id As Global.System.Data.DataColumn
        
        Private columnproducts_rating As Global.System.Data.DataColumn
        
        Private columnproducts_directors_id As Global.System.Data.DataColumn
        
        Private columnproducts_studio As Global.System.Data.DataColumn
        
        Private columnin_cinema_now As Global.System.Data.DataColumn
        
        Private columnproducts_dvdpostchoice As Global.System.Data.DataColumn
        
        Private columnproducts_other_language As Global.System.Data.DataColumn
        
        Private columnproducts_next As Global.System.Data.DataColumn
        
        Private columnproducts_series_id As Global.System.Data.DataColumn
        
        Private columnproducts_series_number As Global.System.Data.DataColumn
        
        Private columnactivation_code As Global.System.Data.DataColumn
        
        Private columnactivation_cmt As Global.System.Data.DataColumn
        
        Private columndiscount_code As Global.System.Data.DataColumn
        
        Private columndiscount_cmt1 As Global.System.Data.DataColumn
        
        Private columndiscount_cmt2 As Global.System.Data.DataColumn
        
        Private columnAbo_Creation_Date As Global.System.Data.DataColumn
        
        Private columnWishList_Size As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_ID As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_Name As Global.System.Data.DataColumn
        
        Private columnPrevious_Discount_ID As Global.System.Data.DataColumn
        
        Private columnPrevious_Discount_Name As Global.System.Data.DataColumn
        
        Private columnMail_Sent As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_Activation_Type As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_Activation_ID As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_Activation_group_id As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_Activation_group_name As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_date As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columnentry_street_address As Global.System.Data.DataColumn
        
        Private columnentry_postcode As Global.System.Data.DataColumn
        
        Private columnentry_city As Global.System.Data.DataColumn
        
        Private columnactivation_group_name As Global.System.Data.DataColumn
        
        Private columncampaign As Global.System.Data.DataColumn
        
        Private columncreated_at As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "abo_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customeridColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomerid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ActionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property product_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproduct_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property privilege_notifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprivilege_notified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_gender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_dobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_dob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property emailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_default_address_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_default_address_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_telephoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_telephone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property encrypted_passwordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnencrypted_password
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_newsletterpartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_newsletterpartner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_aboColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_suspendedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_suspended
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_validitytoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_validityto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_discount_recurring_to_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_discount_recurring_to_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_abo_payment_methodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_abo_payment_method
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_card_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_card_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_exp_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_exp_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_ownerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_owner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_cc_expiration_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_cc_expiration_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_enquiry_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_enquiry_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_first_deliveryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_first_delivery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_adult_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_adult_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mail_wl_norm_not_sufficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmail_wl_norm_not_sufficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imdb_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimdb_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_priceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_price
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_last_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_date_availableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_date_available
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_publicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_public
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_runtimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_runtime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_yearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_countries_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_countries_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_ratingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_rating
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_directors_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_directors_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_studioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_studio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property in_cinema_nowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnin_cinema_now
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_dvdpostchoiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_dvdpostchoice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_other_languageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_other_language
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_nextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_next
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_series_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_series_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactivation_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_cmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactivation_cmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_cmt1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_cmt1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property discount_cmt2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_cmt2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Abo_Creation_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbo_Creation_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WishList_SizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWishList_Size
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Discount_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Discount_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Discount_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Discount_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Mail_SentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMail_Sent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_Activation_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_Activation_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_Activation_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_Activation_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_Activation_group_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_Activation_group_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_Activation_group_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_Activation_group_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_street_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_street_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_postcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_postcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property activation_group_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactivation_group_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property campaignColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncampaign
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property created_atColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncreated_at
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As abo_view1Row
            Get
                Return CType(Me.Rows(index),abo_view1Row)
            End Get
        End Property
        
        Public Event abo_view1RowChanging As abo_view1RowChangeEventHandler
        
        Public Event abo_view1RowChanged As abo_view1RowChangeEventHandler
        
        Public Event abo_view1RowDeleting As abo_view1RowChangeEventHandler
        
        Public Event abo_view1RowDeleted As abo_view1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addabo_view1Row(ByVal row As abo_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addabo_view1Row( _
                    ByVal customerid As Integer,  _
                    ByVal Action As Integer,  _
                    ByVal code_id As Integer,  _
                    ByVal abo_date As Date,  _
                    ByVal product_id As Integer,  _
                    ByVal payment_method As String,  _
                    ByVal privilege_notified As Integer,  _
                    ByVal comment As String,  _
                    ByVal site As Integer,  _
                    ByVal id As Integer,  _
                    ByVal name As String,  _
                    ByVal customers_gender As String,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_dob As Date,  _
                    ByVal email As String,  _
                    ByVal customers_default_address_id As Integer,  _
                    ByVal customers_telephone As String,  _
                    ByVal encrypted_password As String,  _
                    ByVal customers_newsletter As String,  _
                    ByVal customers_newsletterpartner As String,  _
                    ByVal customers_abo As Integer,  _
                    ByVal customers_abo_suspended As Integer,  _
                    ByVal customers_abo_type As Integer,  _
                    ByVal customers_language As String,  _
                    ByVal customers_abo_validityto As Date,  _
                    ByVal customers_abo_discount_recurring_to_date As Date,  _
                    ByVal customers_abo_payment_method As Integer,  _
                    ByVal ogone_card_type As String,  _
                    ByVal ogone_card_no As String,  _
                    ByVal ogone_exp_date As String,  _
                    ByVal ogone_owner As String,  _
                    ByVal ogone_cc_expiration_status As Integer,  _
                    ByVal Expr1 As String,  _
                    ByVal customers_enquiry_id As Integer,  _
                    ByVal date_first_delivery As Date,  _
                    ByVal mail_wl_adult_not_sufficient As Date,  _
                    ByVal mail_wl_norm_not_sufficient As Date,  _
                    ByVal products_id As Integer,  _
                    ByVal products_model As String,  _
                    ByVal imdb_id As Integer,  _
                    ByVal products_title As String,  _
                    ByVal products_price As Decimal,  _
                    ByVal products_date_added As Date,  _
                    ByVal products_last_modified As Date,  _
                    ByVal products_date_available As Date,  _
                    ByVal products_status As Integer,  _
                    ByVal products_public As Integer,  _
                    ByVal products_runtime As Integer,  _
                    ByVal products_year As Integer,  _
                    ByVal products_countries_id As Integer,  _
                    ByVal products_rating As Integer,  _
                    ByVal products_directors_id As Integer,  _
                    ByVal products_studio As Integer,  _
                    ByVal in_cinema_now As Integer,  _
                    ByVal products_dvdpostchoice As Integer,  _
                    ByVal products_other_language As Integer,  _
                    ByVal products_next As Integer,  _
                    ByVal products_series_id As Integer,  _
                    ByVal products_series_number As Integer,  _
                    ByVal activation_code As String,  _
                    ByVal activation_cmt As String,  _
                    ByVal discount_code As String,  _
                    ByVal discount_cmt1 As String,  _
                    ByVal discount_cmt2 As String,  _
                    ByVal Abo_Creation_Date As Date,  _
                    ByVal WishList_Size As Integer,  _
                    ByVal Previous_Action_ID As Integer,  _
                    ByVal Previous_Action_Name As String,  _
                    ByVal Previous_Discount_ID As Integer,  _
                    ByVal Previous_Discount_Name As String,  _
                    ByVal Mail_Sent As Integer,  _
                    ByVal Previous_Action_Activation_Type As String,  _
                    ByVal Previous_Action_Activation_ID As Integer,  _
                    ByVal Previous_Action_Activation_group_id As Integer,  _
                    ByVal Previous_Action_Activation_group_name As String,  _
                    ByVal Previous_Action_date As Date,  _
                    ByVal customers_lastname As String,  _
                    ByVal entry_street_address As String,  _
                    ByVal entry_postcode As String,  _
                    ByVal entry_city As String,  _
                    ByVal activation_group_name As String,  _
                    ByVal campaign As String,  _
                    ByVal created_at As Date) As abo_view1Row
            Dim rowabo_view1Row As abo_view1Row = CType(Me.NewRow,abo_view1Row)
            Dim columnValuesArray() As Object = New Object() {Nothing, customerid, Action, code_id, abo_date, product_id, payment_method, privilege_notified, comment, site, id, name, Nothing, customers_gender, customers_firstname, customers_dob, email, customers_default_address_id, customers_telephone, encrypted_password, customers_newsletter, customers_newsletterpartner, customers_abo, customers_abo_suspended, customers_abo_type, customers_language, customers_abo_validityto, customers_abo_discount_recurring_to_date, customers_abo_payment_method, ogone_card_type, ogone_card_no, ogone_exp_date, ogone_owner, ogone_cc_expiration_status, Expr1, customers_enquiry_id, date_first_delivery, mail_wl_adult_not_sufficient, mail_wl_norm_not_sufficient, products_id, products_model, imdb_id, products_title, products_price, products_date_added, products_last_modified, products_date_available, products_status, products_public, products_runtime, products_year, products_countries_id, products_rating, products_directors_id, products_studio, in_cinema_now, products_dvdpostchoice, products_other_language, products_next, products_series_id, products_series_number, activation_code, activation_cmt, discount_code, discount_cmt1, discount_cmt2, Abo_Creation_Date, WishList_Size, Previous_Action_ID, Previous_Action_Name, Previous_Discount_ID, Previous_Discount_Name, Mail_Sent, Previous_Action_Activation_Type, Previous_Action_Activation_ID, Previous_Action_Activation_group_id, Previous_Action_Activation_group_name, Previous_Action_date, customers_lastname, entry_street_address, entry_postcode, entry_city, activation_group_name, campaign, created_at}
            rowabo_view1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowabo_view1Row)
            Return rowabo_view1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As abo_view1DataTable = CType(MyBase.Clone,abo_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New abo_view1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnabo_id = MyBase.Columns("abo_id")
            Me.columncustomerid = MyBase.Columns("customerid")
            Me.columnAction = MyBase.Columns("Action")
            Me.columncode_id = MyBase.Columns("code_id")
            Me.columnabo_date = MyBase.Columns("abo_date")
            Me.columnproduct_id = MyBase.Columns("product_id")
            Me.columnpayment_method = MyBase.Columns("payment_method")
            Me.columnprivilege_notified = MyBase.Columns("privilege_notified")
            Me.columncomment = MyBase.Columns("comment")
            Me.columnsite = MyBase.Columns("site")
            Me.columnid = MyBase.Columns("id")
            Me.columnname = MyBase.Columns("name")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_gender = MyBase.Columns("customers_gender")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_dob = MyBase.Columns("customers_dob")
            Me.columnemail = MyBase.Columns("email")
            Me.columncustomers_default_address_id = MyBase.Columns("customers_default_address_id")
            Me.columncustomers_telephone = MyBase.Columns("customers_telephone")
            Me.columnencrypted_password = MyBase.Columns("encrypted_password")
            Me.columncustomers_newsletter = MyBase.Columns("customers_newsletter")
            Me.columncustomers_newsletterpartner = MyBase.Columns("customers_newsletterpartner")
            Me.columncustomers_abo = MyBase.Columns("customers_abo")
            Me.columncustomers_abo_suspended = MyBase.Columns("customers_abo_suspended")
            Me.columncustomers_abo_type = MyBase.Columns("customers_abo_type")
            Me.columncustomers_language = MyBase.Columns("customers_language")
            Me.columncustomers_abo_validityto = MyBase.Columns("customers_abo_validityto")
            Me.columncustomers_abo_discount_recurring_to_date = MyBase.Columns("customers_abo_discount_recurring_to_date")
            Me.columncustomers_abo_payment_method = MyBase.Columns("customers_abo_payment_method")
            Me.columnogone_card_type = MyBase.Columns("ogone_card_type")
            Me.columnogone_card_no = MyBase.Columns("ogone_card_no")
            Me.columnogone_exp_date = MyBase.Columns("ogone_exp_date")
            Me.columnogone_owner = MyBase.Columns("ogone_owner")
            Me.columnogone_cc_expiration_status = MyBase.Columns("ogone_cc_expiration_status")
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columncustomers_enquiry_id = MyBase.Columns("customers_enquiry_id")
            Me.columndate_first_delivery = MyBase.Columns("date_first_delivery")
            Me.columnmail_wl_adult_not_sufficient = MyBase.Columns("mail_wl_adult_not_sufficient")
            Me.columnmail_wl_norm_not_sufficient = MyBase.Columns("mail_wl_norm_not_sufficient")
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnimdb_id = MyBase.Columns("imdb_id")
            Me.columnproducts_title = MyBase.Columns("products_title")
            Me.columnproducts_price = MyBase.Columns("products_price")
            Me.columnproducts_date_added = MyBase.Columns("products_date_added")
            Me.columnproducts_last_modified = MyBase.Columns("products_last_modified")
            Me.columnproducts_date_available = MyBase.Columns("products_date_available")
            Me.columnproducts_status = MyBase.Columns("products_status")
            Me.columnproducts_public = MyBase.Columns("products_public")
            Me.columnproducts_runtime = MyBase.Columns("products_runtime")
            Me.columnproducts_year = MyBase.Columns("products_year")
            Me.columnproducts_countries_id = MyBase.Columns("products_countries_id")
            Me.columnproducts_rating = MyBase.Columns("products_rating")
            Me.columnproducts_directors_id = MyBase.Columns("products_directors_id")
            Me.columnproducts_studio = MyBase.Columns("products_studio")
            Me.columnin_cinema_now = MyBase.Columns("in_cinema_now")
            Me.columnproducts_dvdpostchoice = MyBase.Columns("products_dvdpostchoice")
            Me.columnproducts_other_language = MyBase.Columns("products_other_language")
            Me.columnproducts_next = MyBase.Columns("products_next")
            Me.columnproducts_series_id = MyBase.Columns("products_series_id")
            Me.columnproducts_series_number = MyBase.Columns("products_series_number")
            Me.columnactivation_code = MyBase.Columns("activation_code")
            Me.columnactivation_cmt = MyBase.Columns("activation_cmt")
            Me.columndiscount_code = MyBase.Columns("discount_code")
            Me.columndiscount_cmt1 = MyBase.Columns("discount_cmt1")
            Me.columndiscount_cmt2 = MyBase.Columns("discount_cmt2")
            Me.columnAbo_Creation_Date = MyBase.Columns("Abo_Creation_Date")
            Me.columnWishList_Size = MyBase.Columns("WishList_Size")
            Me.columnPrevious_Action_ID = MyBase.Columns("Previous_Action_ID")
            Me.columnPrevious_Action_Name = MyBase.Columns("Previous_Action_Name")
            Me.columnPrevious_Discount_ID = MyBase.Columns("Previous_Discount_ID")
            Me.columnPrevious_Discount_Name = MyBase.Columns("Previous_Discount_Name")
            Me.columnMail_Sent = MyBase.Columns("Mail_Sent")
            Me.columnPrevious_Action_Activation_Type = MyBase.Columns("Previous_Action_Activation_Type")
            Me.columnPrevious_Action_Activation_ID = MyBase.Columns("Previous_Action_Activation_ID")
            Me.columnPrevious_Action_Activation_group_id = MyBase.Columns("Previous_Action_Activation_group_id")
            Me.columnPrevious_Action_Activation_group_name = MyBase.Columns("Previous_Action_Activation_group_name")
            Me.columnPrevious_Action_date = MyBase.Columns("Previous_Action_date")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columnentry_street_address = MyBase.Columns("entry_street_address")
            Me.columnentry_postcode = MyBase.Columns("entry_postcode")
            Me.columnentry_city = MyBase.Columns("entry_city")
            Me.columnactivation_group_name = MyBase.Columns("activation_group_name")
            Me.columncampaign = MyBase.Columns("campaign")
            Me.columncreated_at = MyBase.Columns("created_at")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnabo_id = New Global.System.Data.DataColumn("abo_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_id)
            Me.columncustomerid = New Global.System.Data.DataColumn("customerid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomerid)
            Me.columnAction = New Global.System.Data.DataColumn("Action", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAction)
            Me.columncode_id = New Global.System.Data.DataColumn("code_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode_id)
            Me.columnabo_date = New Global.System.Data.DataColumn("abo_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_date)
            Me.columnproduct_id = New Global.System.Data.DataColumn("product_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproduct_id)
            Me.columnpayment_method = New Global.System.Data.DataColumn("payment_method", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayment_method)
            Me.columnprivilege_notified = New Global.System.Data.DataColumn("privilege_notified", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprivilege_notified)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnsite = New Global.System.Data.DataColumn("site", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsite)
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_gender = New Global.System.Data.DataColumn("customers_gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_gender)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_dob = New Global.System.Data.DataColumn("customers_dob", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_dob)
            Me.columnemail = New Global.System.Data.DataColumn("email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail)
            Me.columncustomers_default_address_id = New Global.System.Data.DataColumn("customers_default_address_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_default_address_id)
            Me.columncustomers_telephone = New Global.System.Data.DataColumn("customers_telephone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_telephone)
            Me.columnencrypted_password = New Global.System.Data.DataColumn("encrypted_password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnencrypted_password)
            Me.columncustomers_newsletter = New Global.System.Data.DataColumn("customers_newsletter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletter)
            Me.columncustomers_newsletterpartner = New Global.System.Data.DataColumn("customers_newsletterpartner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_newsletterpartner)
            Me.columncustomers_abo = New Global.System.Data.DataColumn("customers_abo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo)
            Me.columncustomers_abo_suspended = New Global.System.Data.DataColumn("customers_abo_suspended", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_suspended)
            Me.columncustomers_abo_type = New Global.System.Data.DataColumn("customers_abo_type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_type)
            Me.columncustomers_language = New Global.System.Data.DataColumn("customers_language", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_language)
            Me.columncustomers_abo_validityto = New Global.System.Data.DataColumn("customers_abo_validityto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_validityto)
            Me.columncustomers_abo_discount_recurring_to_date = New Global.System.Data.DataColumn("customers_abo_discount_recurring_to_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_discount_recurring_to_date)
            Me.columncustomers_abo_payment_method = New Global.System.Data.DataColumn("customers_abo_payment_method", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_abo_payment_method)
            Me.columnogone_card_type = New Global.System.Data.DataColumn("ogone_card_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_type)
            Me.columnogone_card_no = New Global.System.Data.DataColumn("ogone_card_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_card_no)
            Me.columnogone_exp_date = New Global.System.Data.DataColumn("ogone_exp_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_exp_date)
            Me.columnogone_owner = New Global.System.Data.DataColumn("ogone_owner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_owner)
            Me.columnogone_cc_expiration_status = New Global.System.Data.DataColumn("ogone_cc_expiration_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_cc_expiration_status)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columncustomers_enquiry_id = New Global.System.Data.DataColumn("customers_enquiry_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_enquiry_id)
            Me.columndate_first_delivery = New Global.System.Data.DataColumn("date_first_delivery", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_first_delivery)
            Me.columnmail_wl_adult_not_sufficient = New Global.System.Data.DataColumn("mail_wl_adult_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_adult_not_sufficient)
            Me.columnmail_wl_norm_not_sufficient = New Global.System.Data.DataColumn("mail_wl_norm_not_sufficient", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmail_wl_norm_not_sufficient)
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnimdb_id = New Global.System.Data.DataColumn("imdb_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimdb_id)
            Me.columnproducts_title = New Global.System.Data.DataColumn("products_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_title)
            Me.columnproducts_price = New Global.System.Data.DataColumn("products_price", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_price)
            Me.columnproducts_date_added = New Global.System.Data.DataColumn("products_date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_added)
            Me.columnproducts_last_modified = New Global.System.Data.DataColumn("products_last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_last_modified)
            Me.columnproducts_date_available = New Global.System.Data.DataColumn("products_date_available", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_date_available)
            Me.columnproducts_status = New Global.System.Data.DataColumn("products_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_status)
            Me.columnproducts_public = New Global.System.Data.DataColumn("products_public", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_public)
            Me.columnproducts_runtime = New Global.System.Data.DataColumn("products_runtime", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_runtime)
            Me.columnproducts_year = New Global.System.Data.DataColumn("products_year", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_year)
            Me.columnproducts_countries_id = New Global.System.Data.DataColumn("products_countries_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_countries_id)
            Me.columnproducts_rating = New Global.System.Data.DataColumn("products_rating", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_rating)
            Me.columnproducts_directors_id = New Global.System.Data.DataColumn("products_directors_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_directors_id)
            Me.columnproducts_studio = New Global.System.Data.DataColumn("products_studio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_studio)
            Me.columnin_cinema_now = New Global.System.Data.DataColumn("in_cinema_now", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnin_cinema_now)
            Me.columnproducts_dvdpostchoice = New Global.System.Data.DataColumn("products_dvdpostchoice", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_dvdpostchoice)
            Me.columnproducts_other_language = New Global.System.Data.DataColumn("products_other_language", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_other_language)
            Me.columnproducts_next = New Global.System.Data.DataColumn("products_next", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_next)
            Me.columnproducts_series_id = New Global.System.Data.DataColumn("products_series_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_id)
            Me.columnproducts_series_number = New Global.System.Data.DataColumn("products_series_number", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_series_number)
            Me.columnactivation_code = New Global.System.Data.DataColumn("activation_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_code)
            Me.columnactivation_cmt = New Global.System.Data.DataColumn("activation_cmt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_cmt)
            Me.columndiscount_code = New Global.System.Data.DataColumn("discount_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_code)
            Me.columndiscount_cmt1 = New Global.System.Data.DataColumn("discount_cmt1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_cmt1)
            Me.columndiscount_cmt2 = New Global.System.Data.DataColumn("discount_cmt2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_cmt2)
            Me.columnAbo_Creation_Date = New Global.System.Data.DataColumn("Abo_Creation_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbo_Creation_Date)
            Me.columnWishList_Size = New Global.System.Data.DataColumn("WishList_Size", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWishList_Size)
            Me.columnPrevious_Action_ID = New Global.System.Data.DataColumn("Previous_Action_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_ID)
            Me.columnPrevious_Action_Name = New Global.System.Data.DataColumn("Previous_Action_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_Name)
            Me.columnPrevious_Discount_ID = New Global.System.Data.DataColumn("Previous_Discount_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Discount_ID)
            Me.columnPrevious_Discount_Name = New Global.System.Data.DataColumn("Previous_Discount_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Discount_Name)
            Me.columnMail_Sent = New Global.System.Data.DataColumn("Mail_Sent", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMail_Sent)
            Me.columnPrevious_Action_Activation_Type = New Global.System.Data.DataColumn("Previous_Action_Activation_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_Activation_Type)
            Me.columnPrevious_Action_Activation_ID = New Global.System.Data.DataColumn("Previous_Action_Activation_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_Activation_ID)
            Me.columnPrevious_Action_Activation_group_id = New Global.System.Data.DataColumn("Previous_Action_Activation_group_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_Activation_group_id)
            Me.columnPrevious_Action_Activation_group_name = New Global.System.Data.DataColumn("Previous_Action_Activation_group_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_Activation_group_name)
            Me.columnPrevious_Action_date = New Global.System.Data.DataColumn("Previous_Action_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_date)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columnentry_street_address = New Global.System.Data.DataColumn("entry_street_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_street_address)
            Me.columnentry_postcode = New Global.System.Data.DataColumn("entry_postcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_postcode)
            Me.columnentry_city = New Global.System.Data.DataColumn("entry_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_city)
            Me.columnactivation_group_name = New Global.System.Data.DataColumn("activation_group_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactivation_group_name)
            Me.columncampaign = New Global.System.Data.DataColumn("campaign", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncampaign)
            Me.columncreated_at = New Global.System.Data.DataColumn("created_at", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncreated_at)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsAboRentKey7", New Global.System.Data.DataColumn() {Me.columnabo_id, Me.columncustomers_id, Me.columnproducts_id}, false))
            Me.columnabo_id.AutoIncrement = true
            Me.columnabo_id.AllowDBNull = false
            Me.columnabo_id.ReadOnly = true
            Me.columncustomerid.AllowDBNull = false
            Me.columnAction.AllowDBNull = false
            Me.columnproduct_id.AllowDBNull = false
            Me.columnpayment_method.AllowDBNull = false
            Me.columnprivilege_notified.AllowDBNull = false
            Me.columncomment.AllowDBNull = false
            Me.columnsite.AllowDBNull = false
            Me.columncustomers_id.AutoIncrement = true
            Me.columncustomers_id.ReadOnly = true
            Me.columncreated_at.Caption = "date_subscription"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newabo_view1Row() As abo_view1Row
            Return CType(Me.NewRow,abo_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New abo_view1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(abo_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.abo_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent abo_view1RowChanged(Me, New abo_view1RowChangeEvent(CType(e.Row,abo_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.abo_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent abo_view1RowChanging(Me, New abo_view1RowChangeEvent(CType(e.Row,abo_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.abo_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent abo_view1RowDeleted(Me, New abo_view1RowChangeEvent(CType(e.Row,abo_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.abo_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent abo_view1RowDeleting(Me, New abo_view1RowChangeEvent(CType(e.Row,abo_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeabo_view1Row(ByVal row As abo_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "abo_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class abo_stop_whyDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnabo_stop_why_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columndate As Global.System.Data.DataColumn
        
        Private columnwhystop1 As Global.System.Data.DataColumn
        
        Private columnwhystop2 As Global.System.Data.DataColumn
        
        Private columnwhystop3 As Global.System.Data.DataColumn
        
        Private columnwhystop4 As Global.System.Data.DataColumn
        
        Private columnwhystop5 As Global.System.Data.DataColumn
        
        Private columnwhystop6 As Global.System.Data.DataColumn
        
        Private columnwhystop7 As Global.System.Data.DataColumn
        
        Private columnwhystop8 As Global.System.Data.DataColumn
        
        Private columnwhystop9 As Global.System.Data.DataColumn
        
        Private columnwhystop10 As Global.System.Data.DataColumn
        
        Private columnwhystop11 As Global.System.Data.DataColumn
        
        Private columnwhystop12 As Global.System.Data.DataColumn
        
        Private columnwhystop13 As Global.System.Data.DataColumn
        
        Private columnwhystop14 As Global.System.Data.DataColumn
        
        Private columnwhystop15 As Global.System.Data.DataColumn
        
        Private columnwhystop16 As Global.System.Data.DataColumn
        
        Private columnwhystop17 As Global.System.Data.DataColumn
        
        Private columnwhystop18 As Global.System.Data.DataColumn
        
        Private columnwhystop19 As Global.System.Data.DataColumn
        
        Private columnwhystop20 As Global.System.Data.DataColumn
        
        Private columnwhystop21 As Global.System.Data.DataColumn
        
        Private columnwhystop22 As Global.System.Data.DataColumn
        
        Private columnwhystop23 As Global.System.Data.DataColumn
        
        Private columnwhystop24 As Global.System.Data.DataColumn
        
        Private columnwhystop25 As Global.System.Data.DataColumn
        
        Private columnwhystop26 As Global.System.Data.DataColumn
        
        Private columnwhystopother As Global.System.Data.DataColumn
        
        Private columnyouliked1 As Global.System.Data.DataColumn
        
        Private columnyouliked2 As Global.System.Data.DataColumn
        
        Private columnyouliked3 As Global.System.Data.DataColumn
        
        Private columnyouliked4 As Global.System.Data.DataColumn
        
        Private columnyouliked5 As Global.System.Data.DataColumn
        
        Private columnyouliked6 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "abo_stop_why"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_stop_why_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_stop_why_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystop26Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop26
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystopotherColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystopother
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property youliked1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnyouliked1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property youliked2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnyouliked2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property youliked3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnyouliked3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property youliked4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnyouliked4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property youliked5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnyouliked5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property youliked6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnyouliked6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As abo_stop_whyRow
            Get
                Return CType(Me.Rows(index),abo_stop_whyRow)
            End Get
        End Property
        
        Public Event abo_stop_whyRowChanging As abo_stop_whyRowChangeEventHandler
        
        Public Event abo_stop_whyRowChanged As abo_stop_whyRowChangeEventHandler
        
        Public Event abo_stop_whyRowDeleting As abo_stop_whyRowChangeEventHandler
        
        Public Event abo_stop_whyRowDeleted As abo_stop_whyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addabo_stop_whyRow(ByVal row As abo_stop_whyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addabo_stop_whyRow( _
                    ByVal customers_id As Integer,  _
                    ByVal _date As Date,  _
                    ByVal whystop1 As Integer,  _
                    ByVal whystop2 As Integer,  _
                    ByVal whystop3 As Integer,  _
                    ByVal whystop4 As Integer,  _
                    ByVal whystop5 As Integer,  _
                    ByVal whystop6 As Integer,  _
                    ByVal whystop7 As Integer,  _
                    ByVal whystop8 As Integer,  _
                    ByVal whystop9 As Integer,  _
                    ByVal whystop10 As Integer,  _
                    ByVal whystop11 As Integer,  _
                    ByVal whystop12 As Integer,  _
                    ByVal whystop13 As Integer,  _
                    ByVal whystop14 As Integer,  _
                    ByVal whystop15 As Integer,  _
                    ByVal whystop16 As Integer,  _
                    ByVal whystop17 As Integer,  _
                    ByVal whystop18 As Integer,  _
                    ByVal whystop19 As Integer,  _
                    ByVal whystop20 As Integer,  _
                    ByVal whystop21 As Integer,  _
                    ByVal whystop22 As Integer,  _
                    ByVal whystop23 As Integer,  _
                    ByVal whystop24 As Integer,  _
                    ByVal whystop25 As Integer,  _
                    ByVal whystop26 As Integer,  _
                    ByVal whystopother As String,  _
                    ByVal youliked1 As Integer,  _
                    ByVal youliked2 As Integer,  _
                    ByVal youliked3 As Integer,  _
                    ByVal youliked4 As Integer,  _
                    ByVal youliked5 As Integer,  _
                    ByVal youliked6 As Integer) As abo_stop_whyRow
            Dim rowabo_stop_whyRow As abo_stop_whyRow = CType(Me.NewRow,abo_stop_whyRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, customers_id, _date, whystop1, whystop2, whystop3, whystop4, whystop5, whystop6, whystop7, whystop8, whystop9, whystop10, whystop11, whystop12, whystop13, whystop14, whystop15, whystop16, whystop17, whystop18, whystop19, whystop20, whystop21, whystop22, whystop23, whystop24, whystop25, whystop26, whystopother, youliked1, youliked2, youliked3, youliked4, youliked5, youliked6}
            rowabo_stop_whyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowabo_stop_whyRow)
            Return rowabo_stop_whyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByabo_stop_why_id(ByVal abo_stop_why_id As Integer) As abo_stop_whyRow
            Return CType(Me.Rows.Find(New Object() {abo_stop_why_id}),abo_stop_whyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As abo_stop_whyDataTable = CType(MyBase.Clone,abo_stop_whyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New abo_stop_whyDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnabo_stop_why_id = MyBase.Columns("abo_stop_why_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columndate = MyBase.Columns("date")
            Me.columnwhystop1 = MyBase.Columns("whystop1")
            Me.columnwhystop2 = MyBase.Columns("whystop2")
            Me.columnwhystop3 = MyBase.Columns("whystop3")
            Me.columnwhystop4 = MyBase.Columns("whystop4")
            Me.columnwhystop5 = MyBase.Columns("whystop5")
            Me.columnwhystop6 = MyBase.Columns("whystop6")
            Me.columnwhystop7 = MyBase.Columns("whystop7")
            Me.columnwhystop8 = MyBase.Columns("whystop8")
            Me.columnwhystop9 = MyBase.Columns("whystop9")
            Me.columnwhystop10 = MyBase.Columns("whystop10")
            Me.columnwhystop11 = MyBase.Columns("whystop11")
            Me.columnwhystop12 = MyBase.Columns("whystop12")
            Me.columnwhystop13 = MyBase.Columns("whystop13")
            Me.columnwhystop14 = MyBase.Columns("whystop14")
            Me.columnwhystop15 = MyBase.Columns("whystop15")
            Me.columnwhystop16 = MyBase.Columns("whystop16")
            Me.columnwhystop17 = MyBase.Columns("whystop17")
            Me.columnwhystop18 = MyBase.Columns("whystop18")
            Me.columnwhystop19 = MyBase.Columns("whystop19")
            Me.columnwhystop20 = MyBase.Columns("whystop20")
            Me.columnwhystop21 = MyBase.Columns("whystop21")
            Me.columnwhystop22 = MyBase.Columns("whystop22")
            Me.columnwhystop23 = MyBase.Columns("whystop23")
            Me.columnwhystop24 = MyBase.Columns("whystop24")
            Me.columnwhystop25 = MyBase.Columns("whystop25")
            Me.columnwhystop26 = MyBase.Columns("whystop26")
            Me.columnwhystopother = MyBase.Columns("whystopother")
            Me.columnyouliked1 = MyBase.Columns("youliked1")
            Me.columnyouliked2 = MyBase.Columns("youliked2")
            Me.columnyouliked3 = MyBase.Columns("youliked3")
            Me.columnyouliked4 = MyBase.Columns("youliked4")
            Me.columnyouliked5 = MyBase.Columns("youliked5")
            Me.columnyouliked6 = MyBase.Columns("youliked6")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnabo_stop_why_id = New Global.System.Data.DataColumn("abo_stop_why_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_stop_why_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columndate = New Global.System.Data.DataColumn("date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columndate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "dateColumn")
            Me.columndate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columndate")
            Me.columndate.ExtendedProperties.Add("Generator_UserColumnName", "date")
            MyBase.Columns.Add(Me.columndate)
            Me.columnwhystop1 = New Global.System.Data.DataColumn("whystop1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop1)
            Me.columnwhystop2 = New Global.System.Data.DataColumn("whystop2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop2)
            Me.columnwhystop3 = New Global.System.Data.DataColumn("whystop3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop3)
            Me.columnwhystop4 = New Global.System.Data.DataColumn("whystop4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop4)
            Me.columnwhystop5 = New Global.System.Data.DataColumn("whystop5", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop5)
            Me.columnwhystop6 = New Global.System.Data.DataColumn("whystop6", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop6)
            Me.columnwhystop7 = New Global.System.Data.DataColumn("whystop7", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop7)
            Me.columnwhystop8 = New Global.System.Data.DataColumn("whystop8", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop8)
            Me.columnwhystop9 = New Global.System.Data.DataColumn("whystop9", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop9)
            Me.columnwhystop10 = New Global.System.Data.DataColumn("whystop10", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop10)
            Me.columnwhystop11 = New Global.System.Data.DataColumn("whystop11", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop11)
            Me.columnwhystop12 = New Global.System.Data.DataColumn("whystop12", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop12)
            Me.columnwhystop13 = New Global.System.Data.DataColumn("whystop13", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop13)
            Me.columnwhystop14 = New Global.System.Data.DataColumn("whystop14", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop14)
            Me.columnwhystop15 = New Global.System.Data.DataColumn("whystop15", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop15)
            Me.columnwhystop16 = New Global.System.Data.DataColumn("whystop16", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop16)
            Me.columnwhystop17 = New Global.System.Data.DataColumn("whystop17", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop17)
            Me.columnwhystop18 = New Global.System.Data.DataColumn("whystop18", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop18)
            Me.columnwhystop19 = New Global.System.Data.DataColumn("whystop19", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop19)
            Me.columnwhystop20 = New Global.System.Data.DataColumn("whystop20", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop20)
            Me.columnwhystop21 = New Global.System.Data.DataColumn("whystop21", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop21)
            Me.columnwhystop22 = New Global.System.Data.DataColumn("whystop22", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop22)
            Me.columnwhystop23 = New Global.System.Data.DataColumn("whystop23", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop23)
            Me.columnwhystop24 = New Global.System.Data.DataColumn("whystop24", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop24)
            Me.columnwhystop25 = New Global.System.Data.DataColumn("whystop25", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop25)
            Me.columnwhystop26 = New Global.System.Data.DataColumn("whystop26", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop26)
            Me.columnwhystopother = New Global.System.Data.DataColumn("whystopother", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystopother)
            Me.columnyouliked1 = New Global.System.Data.DataColumn("youliked1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyouliked1)
            Me.columnyouliked2 = New Global.System.Data.DataColumn("youliked2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyouliked2)
            Me.columnyouliked3 = New Global.System.Data.DataColumn("youliked3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyouliked3)
            Me.columnyouliked4 = New Global.System.Data.DataColumn("youliked4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyouliked4)
            Me.columnyouliked5 = New Global.System.Data.DataColumn("youliked5", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyouliked5)
            Me.columnyouliked6 = New Global.System.Data.DataColumn("youliked6", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnyouliked6)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsAboRentKey8", New Global.System.Data.DataColumn() {Me.columnabo_stop_why_id}, true))
            Me.columnabo_stop_why_id.AutoIncrement = true
            Me.columnabo_stop_why_id.AllowDBNull = false
            Me.columnabo_stop_why_id.ReadOnly = true
            Me.columnabo_stop_why_id.Unique = true
            Me.columncustomers_id.AllowDBNull = false
            Me.columnwhystop1.AllowDBNull = false
            Me.columnwhystop2.AllowDBNull = false
            Me.columnwhystop3.AllowDBNull = false
            Me.columnwhystop4.AllowDBNull = false
            Me.columnwhystop5.AllowDBNull = false
            Me.columnwhystop6.AllowDBNull = false
            Me.columnwhystop7.AllowDBNull = false
            Me.columnwhystop8.AllowDBNull = false
            Me.columnwhystop9.AllowDBNull = false
            Me.columnwhystop10.AllowDBNull = false
            Me.columnwhystop11.AllowDBNull = false
            Me.columnwhystop12.AllowDBNull = false
            Me.columnwhystop13.AllowDBNull = false
            Me.columnwhystop14.AllowDBNull = false
            Me.columnwhystop15.AllowDBNull = false
            Me.columnwhystop16.AllowDBNull = false
            Me.columnwhystop17.AllowDBNull = false
            Me.columnwhystop18.AllowDBNull = false
            Me.columnwhystop19.AllowDBNull = false
            Me.columnwhystop20.AllowDBNull = false
            Me.columnwhystop21.AllowDBNull = false
            Me.columnwhystop22.AllowDBNull = false
            Me.columnwhystop23.AllowDBNull = false
            Me.columnwhystop24.AllowDBNull = false
            Me.columnwhystop25.AllowDBNull = false
            Me.columnwhystop26.AllowDBNull = false
            Me.columnwhystopother.AllowDBNull = false
            Me.columnyouliked1.AllowDBNull = false
            Me.columnyouliked2.AllowDBNull = false
            Me.columnyouliked3.AllowDBNull = false
            Me.columnyouliked4.AllowDBNull = false
            Me.columnyouliked5.AllowDBNull = false
            Me.columnyouliked6.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newabo_stop_whyRow() As abo_stop_whyRow
            Return CType(Me.NewRow,abo_stop_whyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New abo_stop_whyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(abo_stop_whyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.abo_stop_whyRowChangedEvent) Is Nothing) Then
                RaiseEvent abo_stop_whyRowChanged(Me, New abo_stop_whyRowChangeEvent(CType(e.Row,abo_stop_whyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.abo_stop_whyRowChangingEvent) Is Nothing) Then
                RaiseEvent abo_stop_whyRowChanging(Me, New abo_stop_whyRowChangeEvent(CType(e.Row,abo_stop_whyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.abo_stop_whyRowDeletedEvent) Is Nothing) Then
                RaiseEvent abo_stop_whyRowDeleted(Me, New abo_stop_whyRowChangeEvent(CType(e.Row,abo_stop_whyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.abo_stop_whyRowDeletingEvent) Is Nothing) Then
                RaiseEvent abo_stop_whyRowDeleting(Me, New abo_stop_whyRowChangeEvent(CType(e.Row,abo_stop_whyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeabo_stop_whyRow(ByVal row As abo_stop_whyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "abo_stop_whyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class abo_stop_why_explainedDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnwhystop As Global.System.Data.DataColumn
        
        Private columnexplained As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "abo_stop_why_explained"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property whystopColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwhystop
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property explainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexplained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As abo_stop_why_explainedRow
            Get
                Return CType(Me.Rows(index),abo_stop_why_explainedRow)
            End Get
        End Property
        
        Public Event abo_stop_why_explainedRowChanging As abo_stop_why_explainedRowChangeEventHandler
        
        Public Event abo_stop_why_explainedRowChanged As abo_stop_why_explainedRowChangeEventHandler
        
        Public Event abo_stop_why_explainedRowDeleting As abo_stop_why_explainedRowChangeEventHandler
        
        Public Event abo_stop_why_explainedRowDeleted As abo_stop_why_explainedRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addabo_stop_why_explainedRow(ByVal row As abo_stop_why_explainedRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addabo_stop_why_explainedRow(ByVal whystop As String, ByVal explained As String) As abo_stop_why_explainedRow
            Dim rowabo_stop_why_explainedRow As abo_stop_why_explainedRow = CType(Me.NewRow,abo_stop_why_explainedRow)
            Dim columnValuesArray() As Object = New Object() {whystop, explained}
            rowabo_stop_why_explainedRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowabo_stop_why_explainedRow)
            Return rowabo_stop_why_explainedRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As abo_stop_why_explainedDataTable = CType(MyBase.Clone,abo_stop_why_explainedDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New abo_stop_why_explainedDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnwhystop = MyBase.Columns("whystop")
            Me.columnexplained = MyBase.Columns("explained")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnwhystop = New Global.System.Data.DataColumn("whystop", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwhystop)
            Me.columnexplained = New Global.System.Data.DataColumn("explained", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexplained)
            Me.columnwhystop.AllowDBNull = false
            Me.columnexplained.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newabo_stop_why_explainedRow() As abo_stop_why_explainedRow
            Return CType(Me.NewRow,abo_stop_why_explainedRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New abo_stop_why_explainedRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(abo_stop_why_explainedRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.abo_stop_why_explainedRowChangedEvent) Is Nothing) Then
                RaiseEvent abo_stop_why_explainedRowChanged(Me, New abo_stop_why_explainedRowChangeEvent(CType(e.Row,abo_stop_why_explainedRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.abo_stop_why_explainedRowChangingEvent) Is Nothing) Then
                RaiseEvent abo_stop_why_explainedRowChanging(Me, New abo_stop_why_explainedRowChangeEvent(CType(e.Row,abo_stop_why_explainedRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.abo_stop_why_explainedRowDeletedEvent) Is Nothing) Then
                RaiseEvent abo_stop_why_explainedRowDeleted(Me, New abo_stop_why_explainedRowChangeEvent(CType(e.Row,abo_stop_why_explainedRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.abo_stop_why_explainedRowDeletingEvent) Is Nothing) Then
                RaiseEvent abo_stop_why_explainedRowDeleting(Me, New abo_stop_why_explainedRowChangeEvent(CType(e.Row,abo_stop_why_explainedRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeabo_stop_why_explainedRow(ByVal row As abo_stop_why_explainedRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "abo_stop_why_explainedDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class abo_stop_why_view1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columndate_stop As Global.System.Data.DataColumn
        
        Private columnreason As Global.System.Data.DataColumn
        
        Private columncomment As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_ID As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_Name As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_Activation_Type As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_Activation_ID As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_Activation_group_id As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_Activation_group_name As Global.System.Data.DataColumn
        
        Private columnPrevious_Action_date As Global.System.Data.DataColumn
        
        Private columncomment_users As Global.System.Data.DataColumn
        
        Private columnprevent_users As Global.System.Data.DataColumn
        
        Private columndvdPerMonth As Global.System.Data.DataColumn
        
        Private columncredit As Global.System.Data.DataColumn
        
        Private columncpt_reconduction As Global.System.Data.DataColumn
        
        Private columnsize_wishlist As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "abo_stop_why_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_stopColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_stop
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property reasonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreason
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property commentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_Activation_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_Activation_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_Activation_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_Activation_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_Activation_group_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_Activation_group_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_Activation_group_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_Activation_group_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Previous_Action_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevious_Action_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property comment_usersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomment_users
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property prevent_usersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevent_users
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvdPerMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndvdPerMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property creditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncredit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cpt_reconductionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncpt_reconduction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property size_wishlistColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsize_wishlist
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As abo_stop_why_view1Row
            Get
                Return CType(Me.Rows(index),abo_stop_why_view1Row)
            End Get
        End Property
        
        Public Event abo_stop_why_view1RowChanging As abo_stop_why_view1RowChangeEventHandler
        
        Public Event abo_stop_why_view1RowChanged As abo_stop_why_view1RowChangeEventHandler
        
        Public Event abo_stop_why_view1RowDeleting As abo_stop_why_view1RowChangeEventHandler
        
        Public Event abo_stop_why_view1RowDeleted As abo_stop_why_view1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addabo_stop_why_view1Row(ByVal row As abo_stop_why_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addabo_stop_why_view1Row( _
                    ByVal id As Integer,  _
                    ByVal customers_id As Integer,  _
                    ByVal date_stop As Date,  _
                    ByVal reason As String,  _
                    ByVal comment As String,  _
                    ByVal Previous_Action_ID As Integer,  _
                    ByVal Previous_Action_Name As String,  _
                    ByVal Previous_Action_Activation_Type As String,  _
                    ByVal Previous_Action_Activation_ID As Integer,  _
                    ByVal Previous_Action_Activation_group_id As Integer,  _
                    ByVal Previous_Action_Activation_group_name As String,  _
                    ByVal Previous_Action_date As Date,  _
                    ByVal comment_users As String,  _
                    ByVal prevent_users As String,  _
                    ByVal dvdPerMonth As String,  _
                    ByVal credit As String,  _
                    ByVal cpt_reconduction As String,  _
                    ByVal size_wishlist As String) As abo_stop_why_view1Row
            Dim rowabo_stop_why_view1Row As abo_stop_why_view1Row = CType(Me.NewRow,abo_stop_why_view1Row)
            Dim columnValuesArray() As Object = New Object() {id, customers_id, date_stop, reason, comment, Previous_Action_ID, Previous_Action_Name, Previous_Action_Activation_Type, Previous_Action_Activation_ID, Previous_Action_Activation_group_id, Previous_Action_Activation_group_name, Previous_Action_date, comment_users, prevent_users, dvdPerMonth, credit, cpt_reconduction, size_wishlist}
            rowabo_stop_why_view1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowabo_stop_why_view1Row)
            Return rowabo_stop_why_view1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As abo_stop_why_view1DataTable = CType(MyBase.Clone,abo_stop_why_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New abo_stop_why_view1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columndate_stop = MyBase.Columns("date_stop")
            Me.columnreason = MyBase.Columns("reason")
            Me.columncomment = MyBase.Columns("comment")
            Me.columnPrevious_Action_ID = MyBase.Columns("Previous_Action_ID")
            Me.columnPrevious_Action_Name = MyBase.Columns("Previous_Action_Name")
            Me.columnPrevious_Action_Activation_Type = MyBase.Columns("Previous_Action_Activation_Type")
            Me.columnPrevious_Action_Activation_ID = MyBase.Columns("Previous_Action_Activation_ID")
            Me.columnPrevious_Action_Activation_group_id = MyBase.Columns("Previous_Action_Activation_group_id")
            Me.columnPrevious_Action_Activation_group_name = MyBase.Columns("Previous_Action_Activation_group_name")
            Me.columnPrevious_Action_date = MyBase.Columns("Previous_Action_date")
            Me.columncomment_users = MyBase.Columns("comment_users")
            Me.columnprevent_users = MyBase.Columns("prevent_users")
            Me.columndvdPerMonth = MyBase.Columns("dvdPerMonth")
            Me.columncredit = MyBase.Columns("credit")
            Me.columncpt_reconduction = MyBase.Columns("cpt_reconduction")
            Me.columnsize_wishlist = MyBase.Columns("size_wishlist")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columndate_stop = New Global.System.Data.DataColumn("date_stop", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_stop)
            Me.columnreason = New Global.System.Data.DataColumn("reason", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreason)
            Me.columncomment = New Global.System.Data.DataColumn("comment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment)
            Me.columnPrevious_Action_ID = New Global.System.Data.DataColumn("Previous_Action_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_ID)
            Me.columnPrevious_Action_Name = New Global.System.Data.DataColumn("Previous_Action_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_Name)
            Me.columnPrevious_Action_Activation_Type = New Global.System.Data.DataColumn("Previous_Action_Activation_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_Activation_Type)
            Me.columnPrevious_Action_Activation_ID = New Global.System.Data.DataColumn("Previous_Action_Activation_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_Activation_ID)
            Me.columnPrevious_Action_Activation_group_id = New Global.System.Data.DataColumn("Previous_Action_Activation_group_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_Activation_group_id)
            Me.columnPrevious_Action_Activation_group_name = New Global.System.Data.DataColumn("Previous_Action_Activation_group_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_Activation_group_name)
            Me.columnPrevious_Action_date = New Global.System.Data.DataColumn("Previous_Action_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevious_Action_date)
            Me.columncomment_users = New Global.System.Data.DataColumn("comment_users", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomment_users)
            Me.columnprevent_users = New Global.System.Data.DataColumn("prevent_users", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevent_users)
            Me.columndvdPerMonth = New Global.System.Data.DataColumn("dvdPerMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndvdPerMonth)
            Me.columncredit = New Global.System.Data.DataColumn("credit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredit)
            Me.columncpt_reconduction = New Global.System.Data.DataColumn("cpt_reconduction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncpt_reconduction)
            Me.columnsize_wishlist = New Global.System.Data.DataColumn("size_wishlist", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsize_wishlist)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newabo_stop_why_view1Row() As abo_stop_why_view1Row
            Return CType(Me.NewRow,abo_stop_why_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New abo_stop_why_view1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(abo_stop_why_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.abo_stop_why_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent abo_stop_why_view1RowChanged(Me, New abo_stop_why_view1RowChangeEvent(CType(e.Row,abo_stop_why_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.abo_stop_why_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent abo_stop_why_view1RowChanging(Me, New abo_stop_why_view1RowChangeEvent(CType(e.Row,abo_stop_why_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.abo_stop_why_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent abo_stop_why_view1RowDeleted(Me, New abo_stop_why_view1RowChangeEvent(CType(e.Row,abo_stop_why_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.abo_stop_why_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent abo_stop_why_view1RowDeleting(Me, New abo_stop_why_view1RowChangeEvent(CType(e.Row,abo_stop_why_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeabo_stop_why_view1Row(ByVal row As abo_stop_why_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "abo_stop_why_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ogone_paymentDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnogone_payment_id As Global.System.Data.DataColumn
        
        Private columndate_added As Global.System.Data.DataColumn
        
        Private columnabo_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnamount As Global.System.Data.DataColumn
        
        Private columnogone_payment_status As Global.System.Data.DataColumn
        
        Private columnogone_batch_id As Global.System.Data.DataColumn
        
        Private columnlast_modified As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ogone_payment"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_payment_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_payment_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_payment_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_payment_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_batch_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_batch_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ogone_paymentRow
            Get
                Return CType(Me.Rows(index),ogone_paymentRow)
            End Get
        End Property
        
        Public Event ogone_paymentRowChanging As ogone_paymentRowChangeEventHandler
        
        Public Event ogone_paymentRowChanged As ogone_paymentRowChangeEventHandler
        
        Public Event ogone_paymentRowDeleting As ogone_paymentRowChangeEventHandler
        
        Public Event ogone_paymentRowDeleted As ogone_paymentRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addogone_paymentRow(ByVal row As ogone_paymentRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addogone_paymentRow(ByVal date_added As Date, ByVal abo_id As Integer, ByVal customers_id As Integer, ByVal amount As Decimal, ByVal ogone_payment_status As Integer, ByVal ogone_batch_id As String, ByVal last_modified As Date) As ogone_paymentRow
            Dim rowogone_paymentRow As ogone_paymentRow = CType(Me.NewRow,ogone_paymentRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, date_added, abo_id, customers_id, amount, ogone_payment_status, ogone_batch_id, last_modified}
            rowogone_paymentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowogone_paymentRow)
            Return rowogone_paymentRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByogone_payment_id(ByVal ogone_payment_id As Integer) As ogone_paymentRow
            Return CType(Me.Rows.Find(New Object() {ogone_payment_id}),ogone_paymentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ogone_paymentDataTable = CType(MyBase.Clone,ogone_paymentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ogone_paymentDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnogone_payment_id = MyBase.Columns("ogone_payment_id")
            Me.columndate_added = MyBase.Columns("date_added")
            Me.columnabo_id = MyBase.Columns("abo_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnamount = MyBase.Columns("amount")
            Me.columnogone_payment_status = MyBase.Columns("ogone_payment_status")
            Me.columnogone_batch_id = MyBase.Columns("ogone_batch_id")
            Me.columnlast_modified = MyBase.Columns("last_modified")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnogone_payment_id = New Global.System.Data.DataColumn("ogone_payment_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_payment_id)
            Me.columndate_added = New Global.System.Data.DataColumn("date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_added)
            Me.columnabo_id = New Global.System.Data.DataColumn("abo_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnamount = New Global.System.Data.DataColumn("amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount)
            Me.columnogone_payment_status = New Global.System.Data.DataColumn("ogone_payment_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_payment_status)
            Me.columnogone_batch_id = New Global.System.Data.DataColumn("ogone_batch_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_batch_id)
            Me.columnlast_modified = New Global.System.Data.DataColumn("last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_modified)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsAboRentKey9", New Global.System.Data.DataColumn() {Me.columnogone_payment_id}, true))
            Me.columnogone_payment_id.AutoIncrement = true
            Me.columnogone_payment_id.AllowDBNull = false
            Me.columnogone_payment_id.ReadOnly = true
            Me.columnogone_payment_id.Unique = true
            Me.columnabo_id.AllowDBNull = false
            Me.columncustomers_id.AllowDBNull = false
            Me.columnamount.AllowDBNull = false
            Me.columnogone_payment_status.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newogone_paymentRow() As ogone_paymentRow
            Return CType(Me.NewRow,ogone_paymentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ogone_paymentRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ogone_paymentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ogone_paymentRowChangedEvent) Is Nothing) Then
                RaiseEvent ogone_paymentRowChanged(Me, New ogone_paymentRowChangeEvent(CType(e.Row,ogone_paymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ogone_paymentRowChangingEvent) Is Nothing) Then
                RaiseEvent ogone_paymentRowChanging(Me, New ogone_paymentRowChangeEvent(CType(e.Row,ogone_paymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ogone_paymentRowDeletedEvent) Is Nothing) Then
                RaiseEvent ogone_paymentRowDeleted(Me, New ogone_paymentRowChangeEvent(CType(e.Row,ogone_paymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ogone_paymentRowDeletingEvent) Is Nothing) Then
                RaiseEvent ogone_paymentRowDeleting(Me, New ogone_paymentRowChangeEvent(CType(e.Row,ogone_paymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeogone_paymentRow(ByVal row As ogone_paymentRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ogone_paymentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class domiciliation_paymentDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columndomiciliation_payment_id As Global.System.Data.DataColumn
        
        Private columndomiciliation_payment_date As Global.System.Data.DataColumn
        
        Private columnabo_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columncustomers_name As Global.System.Data.DataColumn
        
        Private columncustomers_address As Global.System.Data.DataColumn
        
        Private columnamount As Global.System.Data.DataColumn
        
        Private columnstrdomiciliation_debiter_name As Global.System.Data.DataColumn
        
        Private columnstrdomiciliation_number As Global.System.Data.DataColumn
        
        Private columncommunication As Global.System.Data.DataColumn
        
        Private columnfirst_payment As Global.System.Data.DataColumn
        
        Private columnreconduction As Global.System.Data.DataColumn
        
        Private columndomiciliation_payment_status As Global.System.Data.DataColumn
        
        Private columndomiciliation_payment_isabel_date As Global.System.Data.DataColumn
        
        Private columndomiciliation_unpaid_id As Global.System.Data.DataColumn
        
        Private columnbatch_immatriculation_number As Global.System.Data.DataColumn
        
        Private columnlast_modified As Global.System.Data.DataColumn
        
        Private columnabo_stopped_with_dvdathome_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "domiciliation_payment"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_payment_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_payment_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_payment_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_payment_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strdomiciliation_debiter_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstrdomiciliation_debiter_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property strdomiciliation_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstrdomiciliation_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property communicationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncommunication
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property first_paymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfirst_payment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property reconductionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreconduction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_payment_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_payment_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_payment_isabel_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_payment_isabel_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_unpaid_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_unpaid_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property batch_immatriculation_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbatch_immatriculation_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_stopped_with_dvdathome_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_stopped_with_dvdathome_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As domiciliation_paymentRow
            Get
                Return CType(Me.Rows(index),domiciliation_paymentRow)
            End Get
        End Property
        
        Public Event domiciliation_paymentRowChanging As domiciliation_paymentRowChangeEventHandler
        
        Public Event domiciliation_paymentRowChanged As domiciliation_paymentRowChangeEventHandler
        
        Public Event domiciliation_paymentRowDeleting As domiciliation_paymentRowChangeEventHandler
        
        Public Event domiciliation_paymentRowDeleted As domiciliation_paymentRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddomiciliation_paymentRow(ByVal row As domiciliation_paymentRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddomiciliation_paymentRow( _
                    ByVal domiciliation_payment_date As Date,  _
                    ByVal abo_id As Integer,  _
                    ByVal customers_id As Integer,  _
                    ByVal customers_name As String,  _
                    ByVal customers_address As String,  _
                    ByVal amount As Decimal,  _
                    ByVal strdomiciliation_debiter_name As String,  _
                    ByVal strdomiciliation_number As String,  _
                    ByVal communication As String,  _
                    ByVal first_payment As Integer,  _
                    ByVal reconduction As Integer,  _
                    ByVal payment_status As Integer,  _
                    ByVal domiciliation_payment_isabel_date As Date,  _
                    ByVal domiciliation_unpaid_id As Integer,  _
                    ByVal batch_immatriculation_number As String,  _
                    ByVal last_modified As Date,  _
                    ByVal abo_stopped_with_dvdathome_id As Integer) As domiciliation_paymentRow
            Dim rowdomiciliation_paymentRow As domiciliation_paymentRow = CType(Me.NewRow,domiciliation_paymentRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, domiciliation_payment_date, abo_id, customers_id, customers_name, customers_address, amount, strdomiciliation_debiter_name, strdomiciliation_number, communication, first_payment, reconduction, payment_status, domiciliation_payment_isabel_date, domiciliation_unpaid_id, batch_immatriculation_number, last_modified, abo_stopped_with_dvdathome_id}
            rowdomiciliation_paymentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdomiciliation_paymentRow)
            Return rowdomiciliation_paymentRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBydomiciliation_payment_id(ByVal domiciliation_payment_id As Integer) As domiciliation_paymentRow
            Return CType(Me.Rows.Find(New Object() {domiciliation_payment_id}),domiciliation_paymentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As domiciliation_paymentDataTable = CType(MyBase.Clone,domiciliation_paymentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New domiciliation_paymentDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndomiciliation_payment_id = MyBase.Columns("domiciliation_payment_id")
            Me.columndomiciliation_payment_date = MyBase.Columns("domiciliation_payment_date")
            Me.columnabo_id = MyBase.Columns("abo_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columncustomers_name = MyBase.Columns("customers_name")
            Me.columncustomers_address = MyBase.Columns("customers_address")
            Me.columnamount = MyBase.Columns("amount")
            Me.columnstrdomiciliation_debiter_name = MyBase.Columns("strdomiciliation_debiter_name")
            Me.columnstrdomiciliation_number = MyBase.Columns("strdomiciliation_number")
            Me.columncommunication = MyBase.Columns("communication")
            Me.columnfirst_payment = MyBase.Columns("first_payment")
            Me.columnreconduction = MyBase.Columns("reconduction")
            Me.columndomiciliation_payment_status = MyBase.Columns("payment_status")
            Me.columndomiciliation_payment_isabel_date = MyBase.Columns("domiciliation_payment_isabel_date")
            Me.columndomiciliation_unpaid_id = MyBase.Columns("domiciliation_unpaid_id")
            Me.columnbatch_immatriculation_number = MyBase.Columns("batch_immatriculation_number")
            Me.columnlast_modified = MyBase.Columns("last_modified")
            Me.columnabo_stopped_with_dvdathome_id = MyBase.Columns("abo_stopped_with_dvdathome_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndomiciliation_payment_id = New Global.System.Data.DataColumn("domiciliation_payment_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_payment_id)
            Me.columndomiciliation_payment_date = New Global.System.Data.DataColumn("domiciliation_payment_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_payment_date)
            Me.columnabo_id = New Global.System.Data.DataColumn("abo_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columncustomers_name = New Global.System.Data.DataColumn("customers_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_name)
            Me.columncustomers_address = New Global.System.Data.DataColumn("customers_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_address)
            Me.columnamount = New Global.System.Data.DataColumn("amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount)
            Me.columnstrdomiciliation_debiter_name = New Global.System.Data.DataColumn("strdomiciliation_debiter_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrdomiciliation_debiter_name)
            Me.columnstrdomiciliation_number = New Global.System.Data.DataColumn("strdomiciliation_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstrdomiciliation_number)
            Me.columncommunication = New Global.System.Data.DataColumn("communication", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncommunication)
            Me.columnfirst_payment = New Global.System.Data.DataColumn("first_payment", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfirst_payment)
            Me.columnreconduction = New Global.System.Data.DataColumn("reconduction", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreconduction)
            Me.columndomiciliation_payment_status = New Global.System.Data.DataColumn("payment_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            Me.columndomiciliation_payment_status.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "domiciliation_payment_statusColumn")
            Me.columndomiciliation_payment_status.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columndomiciliation_payment_status")
            Me.columndomiciliation_payment_status.ExtendedProperties.Add("Generator_UserColumnName", "payment_status")
            MyBase.Columns.Add(Me.columndomiciliation_payment_status)
            Me.columndomiciliation_payment_isabel_date = New Global.System.Data.DataColumn("domiciliation_payment_isabel_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_payment_isabel_date)
            Me.columndomiciliation_unpaid_id = New Global.System.Data.DataColumn("domiciliation_unpaid_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_unpaid_id)
            Me.columnbatch_immatriculation_number = New Global.System.Data.DataColumn("batch_immatriculation_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbatch_immatriculation_number)
            Me.columnlast_modified = New Global.System.Data.DataColumn("last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_modified)
            Me.columnabo_stopped_with_dvdathome_id = New Global.System.Data.DataColumn("abo_stopped_with_dvdathome_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_stopped_with_dvdathome_id)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsAboRentKey10", New Global.System.Data.DataColumn() {Me.columndomiciliation_payment_id}, true))
            Me.columndomiciliation_payment_id.AutoIncrement = true
            Me.columndomiciliation_payment_id.AllowDBNull = false
            Me.columndomiciliation_payment_id.ReadOnly = true
            Me.columndomiciliation_payment_id.Unique = true
            Me.columnabo_id.AllowDBNull = false
            Me.columncustomers_id.AllowDBNull = false
            Me.columncustomers_name.AllowDBNull = false
            Me.columncustomers_address.AllowDBNull = false
            Me.columnamount.AllowDBNull = false
            Me.columnstrdomiciliation_debiter_name.AllowDBNull = false
            Me.columnstrdomiciliation_number.AllowDBNull = false
            Me.columncommunication.AllowDBNull = false
            Me.columnfirst_payment.AllowDBNull = false
            Me.columnreconduction.AllowDBNull = false
            Me.columndomiciliation_payment_status.AllowDBNull = false
            Me.columndomiciliation_unpaid_id.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdomiciliation_paymentRow() As domiciliation_paymentRow
            Return CType(Me.NewRow,domiciliation_paymentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New domiciliation_paymentRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(domiciliation_paymentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.domiciliation_paymentRowChangedEvent) Is Nothing) Then
                RaiseEvent domiciliation_paymentRowChanged(Me, New domiciliation_paymentRowChangeEvent(CType(e.Row,domiciliation_paymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.domiciliation_paymentRowChangingEvent) Is Nothing) Then
                RaiseEvent domiciliation_paymentRowChanging(Me, New domiciliation_paymentRowChangeEvent(CType(e.Row,domiciliation_paymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.domiciliation_paymentRowDeletedEvent) Is Nothing) Then
                RaiseEvent domiciliation_paymentRowDeleted(Me, New domiciliation_paymentRowChangeEvent(CType(e.Row,domiciliation_paymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.domiciliation_paymentRowDeletingEvent) Is Nothing) Then
                RaiseEvent domiciliation_paymentRowDeleting(Me, New domiciliation_paymentRowChangeEvent(CType(e.Row,domiciliation_paymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedomiciliation_paymentRow(ByVal row As domiciliation_paymentRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "domiciliation_paymentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class wishlist_assigned_view1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnwl_assigned_id As Global.System.Data.DataColumn
        
        Private columnwl_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnproducts_id As Global.System.Data.DataColumn
        
        Private columnrank As Global.System.Data.DataColumn
        
        Private columndate_added As Global.System.Data.DataColumn
        
        Private columndate_assigned As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columnproducts_type As Global.System.Data.DataColumn
        
        Private columnproducts_title As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "wishlist_assigned_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wl_assigned_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwl_assigned_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property wl_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnwl_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_assignedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_assigned
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_titleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_title
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As wishlist_assigned_view1Row
            Get
                Return CType(Me.Rows(index),wishlist_assigned_view1Row)
            End Get
        End Property
        
        Public Event wishlist_assigned_view1RowChanging As wishlist_assigned_view1RowChangeEventHandler
        
        Public Event wishlist_assigned_view1RowChanged As wishlist_assigned_view1RowChangeEventHandler
        
        Public Event wishlist_assigned_view1RowDeleting As wishlist_assigned_view1RowChangeEventHandler
        
        Public Event wishlist_assigned_view1RowDeleted As wishlist_assigned_view1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addwishlist_assigned_view1Row(ByVal row As wishlist_assigned_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addwishlist_assigned_view1Row(ByVal wl_id As Integer, ByVal customers_id As Integer, ByVal products_id As Integer, ByVal rank As Integer, ByVal date_added As Date, ByVal date_assigned As Date, ByVal customers_lastname As String, ByVal customers_firstname As String, ByVal products_type As String, ByVal products_title As String) As wishlist_assigned_view1Row
            Dim rowwishlist_assigned_view1Row As wishlist_assigned_view1Row = CType(Me.NewRow,wishlist_assigned_view1Row)
            Dim columnValuesArray() As Object = New Object() {Nothing, wl_id, customers_id, products_id, rank, date_added, date_assigned, customers_lastname, customers_firstname, products_type, products_title}
            rowwishlist_assigned_view1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowwishlist_assigned_view1Row)
            Return rowwishlist_assigned_view1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBywl_assigned_id(ByVal wl_assigned_id As Integer) As wishlist_assigned_view1Row
            Return CType(Me.Rows.Find(New Object() {wl_assigned_id}),wishlist_assigned_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As wishlist_assigned_view1DataTable = CType(MyBase.Clone,wishlist_assigned_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New wishlist_assigned_view1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnwl_assigned_id = MyBase.Columns("wl_assigned_id")
            Me.columnwl_id = MyBase.Columns("wl_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnproducts_id = MyBase.Columns("products_id")
            Me.columnrank = MyBase.Columns("rank")
            Me.columndate_added = MyBase.Columns("date_added")
            Me.columndate_assigned = MyBase.Columns("date_assigned")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columnproducts_type = MyBase.Columns("products_type")
            Me.columnproducts_title = MyBase.Columns("products_title")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnwl_assigned_id = New Global.System.Data.DataColumn("wl_assigned_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwl_assigned_id)
            Me.columnwl_id = New Global.System.Data.DataColumn("wl_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnwl_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnproducts_id = New Global.System.Data.DataColumn("products_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_id)
            Me.columnrank = New Global.System.Data.DataColumn("rank", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrank)
            Me.columndate_added = New Global.System.Data.DataColumn("date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_added)
            Me.columndate_assigned = New Global.System.Data.DataColumn("date_assigned", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_assigned)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columnproducts_type = New Global.System.Data.DataColumn("products_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_type)
            Me.columnproducts_title = New Global.System.Data.DataColumn("products_title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_title)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("dsAboRentKey11", New Global.System.Data.DataColumn() {Me.columnwl_assigned_id}, true))
            Me.columnwl_assigned_id.AutoIncrement = true
            Me.columnwl_assigned_id.AllowDBNull = false
            Me.columnwl_assigned_id.ReadOnly = true
            Me.columnwl_assigned_id.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newwishlist_assigned_view1Row() As wishlist_assigned_view1Row
            Return CType(Me.NewRow,wishlist_assigned_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New wishlist_assigned_view1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(wishlist_assigned_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.wishlist_assigned_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent wishlist_assigned_view1RowChanged(Me, New wishlist_assigned_view1RowChangeEvent(CType(e.Row,wishlist_assigned_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.wishlist_assigned_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent wishlist_assigned_view1RowChanging(Me, New wishlist_assigned_view1RowChangeEvent(CType(e.Row,wishlist_assigned_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.wishlist_assigned_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent wishlist_assigned_view1RowDeleted(Me, New wishlist_assigned_view1RowChangeEvent(CType(e.Row,wishlist_assigned_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.wishlist_assigned_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent wishlist_assigned_view1RowDeleting(Me, New wishlist_assigned_view1RowChangeEvent(CType(e.Row,wishlist_assigned_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removewishlist_assigned_view1Row(ByVal row As wishlist_assigned_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "wishlist_assigned_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class aboreconduction_view1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnabo_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnmonth1 As Global.System.Data.DataColumn
        
        Private columnmonth2 As Global.System.Data.DataColumn
        
        Private columnmonth3 As Global.System.Data.DataColumn
        
        Private columnMonth12 As Global.System.Data.DataColumn
        
        Private columnMonth13 As Global.System.Data.DataColumn
        
        Private columnMonth23 As Global.System.Data.DataColumn
        
        Private columnMonth123 As Global.System.Data.DataColumn
        
        Private columnDOfM1 As Global.System.Data.DataColumn
        
        Private columnDOfM2 As Global.System.Data.DataColumn
        
        Private columnDOfM3 As Global.System.Data.DataColumn
        
        Private columnOgone As Global.System.Data.DataColumn
        
        Private columnDom As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columncode_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "aboreconduction_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property month1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonth1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property month2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonth2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property month3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonth3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Month12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonth12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Month13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonth13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Month23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonth23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Month123Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonth123
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DOfM1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOfM1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DOfM2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOfM2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DOfM3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOfM3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OgoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOgone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As aboreconduction_view1Row
            Get
                Return CType(Me.Rows(index),aboreconduction_view1Row)
            End Get
        End Property
        
        Public Event aboreconduction_view1RowChanging As aboreconduction_view1RowChangeEventHandler
        
        Public Event aboreconduction_view1RowChanged As aboreconduction_view1RowChangeEventHandler
        
        Public Event aboreconduction_view1RowDeleting As aboreconduction_view1RowChangeEventHandler
        
        Public Event aboreconduction_view1RowDeleted As aboreconduction_view1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addaboreconduction_view1Row(ByVal row As aboreconduction_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addaboreconduction_view1Row( _
                    ByVal abo_id As Integer,  _
                    ByVal customers_id As Integer,  _
                    ByVal month1 As Integer,  _
                    ByVal month2 As Integer,  _
                    ByVal month3 As Integer,  _
                    ByVal Month12 As Integer,  _
                    ByVal Month13 As Integer,  _
                    ByVal Month23 As Integer,  _
                    ByVal Month123 As Integer,  _
                    ByVal DOfM1 As Integer,  _
                    ByVal DOfM2 As Integer,  _
                    ByVal DOfM3 As Integer,  _
                    ByVal Ogone As Integer,  _
                    ByVal Dom As Integer,  _
                    ByVal Amount As Double,  _
                    ByVal code_id As String) As aboreconduction_view1Row
            Dim rowaboreconduction_view1Row As aboreconduction_view1Row = CType(Me.NewRow,aboreconduction_view1Row)
            Dim columnValuesArray() As Object = New Object() {abo_id, customers_id, month1, month2, month3, Month12, Month13, Month23, Month123, DOfM1, DOfM2, DOfM3, Ogone, Dom, Amount, code_id}
            rowaboreconduction_view1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowaboreconduction_view1Row)
            Return rowaboreconduction_view1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As aboreconduction_view1DataTable = CType(MyBase.Clone,aboreconduction_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New aboreconduction_view1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnabo_id = MyBase.Columns("abo_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnmonth1 = MyBase.Columns("month1")
            Me.columnmonth2 = MyBase.Columns("month2")
            Me.columnmonth3 = MyBase.Columns("month3")
            Me.columnMonth12 = MyBase.Columns("Month12")
            Me.columnMonth13 = MyBase.Columns("Month13")
            Me.columnMonth23 = MyBase.Columns("Month23")
            Me.columnMonth123 = MyBase.Columns("Month123")
            Me.columnDOfM1 = MyBase.Columns("DOfM1")
            Me.columnDOfM2 = MyBase.Columns("DOfM2")
            Me.columnDOfM3 = MyBase.Columns("DOfM3")
            Me.columnOgone = MyBase.Columns("Ogone")
            Me.columnDom = MyBase.Columns("Dom")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columncode_id = MyBase.Columns("code_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnabo_id = New Global.System.Data.DataColumn("abo_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnmonth1 = New Global.System.Data.DataColumn("month1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonth1)
            Me.columnmonth2 = New Global.System.Data.DataColumn("month2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonth2)
            Me.columnmonth3 = New Global.System.Data.DataColumn("month3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonth3)
            Me.columnMonth12 = New Global.System.Data.DataColumn("Month12", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonth12)
            Me.columnMonth13 = New Global.System.Data.DataColumn("Month13", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonth13)
            Me.columnMonth23 = New Global.System.Data.DataColumn("Month23", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonth23)
            Me.columnMonth123 = New Global.System.Data.DataColumn("Month123", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonth123)
            Me.columnDOfM1 = New Global.System.Data.DataColumn("DOfM1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOfM1)
            Me.columnDOfM2 = New Global.System.Data.DataColumn("DOfM2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOfM2)
            Me.columnDOfM3 = New Global.System.Data.DataColumn("DOfM3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOfM3)
            Me.columnOgone = New Global.System.Data.DataColumn("Ogone", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOgone)
            Me.columnDom = New Global.System.Data.DataColumn("Dom", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDom)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columncode_id = New Global.System.Data.DataColumn("code_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode_id)
            Me.columnOgone.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newaboreconduction_view1Row() As aboreconduction_view1Row
            Return CType(Me.NewRow,aboreconduction_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New aboreconduction_view1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(aboreconduction_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.aboreconduction_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent aboreconduction_view1RowChanged(Me, New aboreconduction_view1RowChangeEvent(CType(e.Row,aboreconduction_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.aboreconduction_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent aboreconduction_view1RowChanging(Me, New aboreconduction_view1RowChangeEvent(CType(e.Row,aboreconduction_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.aboreconduction_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent aboreconduction_view1RowDeleted(Me, New aboreconduction_view1RowChangeEvent(CType(e.Row,aboreconduction_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.aboreconduction_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent aboreconduction_view1RowDeleting(Me, New aboreconduction_view1RowChangeEvent(CType(e.Row,aboreconduction_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeaboreconduction_view1Row(ByVal row As aboreconduction_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "aboreconduction_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ogone_payment_ValidateDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnogone_payment_id As Global.System.Data.DataColumn
        
        Private columndate_added As Global.System.Data.DataColumn
        
        Private columnabo_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnamount As Global.System.Data.DataColumn
        
        Private columnogone_payment_status As Global.System.Data.DataColumn
        
        Private columnogone_batch_id As Global.System.Data.DataColumn
        
        Private columnlast_modified As Global.System.Data.DataColumn
        
        Private columnAbo_Amount As Global.System.Data.DataColumn
        
        Private columnAbo_Type As Global.System.Data.DataColumn
        
        Private columnAbo_Amount_Discounted As Global.System.Data.DataColumn
        
        Private columnAbo_Action_Name As Global.System.Data.DataColumn
        
        Private columnAbo_Date As Global.System.Data.DataColumn
        
        Private columnDiscount_type As Global.System.Data.DataColumn
        
        Private columnDiscount_Value As Global.System.Data.DataColumn
        
        Private columnDiscount_Explained As Global.System.Data.DataColumn
        
        Private columnDiff As Global.System.Data.DataColumn
        
        Private columnUpgradeDownGrade As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnprevious_month_amount As Global.System.Data.DataColumn
        
        Private columnDiff_Month As Global.System.Data.DataColumn
        
        Private columncurrent_discount_code_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ogone_payment_Validate"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_payment_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_payment_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property date_addedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndate_added
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_payment_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_payment_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ogone_batch_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogone_batch_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Abo_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbo_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Abo_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbo_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Abo_Amount_DiscountedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbo_Amount_Discounted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Abo_Action_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbo_Action_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Abo_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbo_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Discount_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Discount_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Discount_ExplainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount_Explained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DiffColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiff
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UpgradeDownGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpgradeDownGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property previous_month_amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevious_month_amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Diff_MonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiff_Month
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property current_discount_code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncurrent_discount_code_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ogone_payment_ValidateRow
            Get
                Return CType(Me.Rows(index),ogone_payment_ValidateRow)
            End Get
        End Property
        
        Public Event ogone_payment_ValidateRowChanging As ogone_payment_ValidateRowChangeEventHandler
        
        Public Event ogone_payment_ValidateRowChanged As ogone_payment_ValidateRowChangeEventHandler
        
        Public Event ogone_payment_ValidateRowDeleting As ogone_payment_ValidateRowChangeEventHandler
        
        Public Event ogone_payment_ValidateRowDeleted As ogone_payment_ValidateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addogone_payment_ValidateRow(ByVal row As ogone_payment_ValidateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addogone_payment_ValidateRow( _
                    ByVal date_added As Date,  _
                    ByVal abo_id As Integer,  _
                    ByVal customers_id As Integer,  _
                    ByVal amount As Decimal,  _
                    ByVal ogone_payment_status As Integer,  _
                    ByVal ogone_batch_id As String,  _
                    ByVal last_modified As Date,  _
                    ByVal Abo_Amount As Double,  _
                    ByVal Abo_Type As String,  _
                    ByVal Abo_Amount_Discounted As Double,  _
                    ByVal Abo_Action_Name As String,  _
                    ByVal Abo_Date As Date,  _
                    ByVal Discount_type As String,  _
                    ByVal Discount_Value As Double,  _
                    ByVal Discount_Explained As String,  _
                    ByVal Diff As Double,  _
                    ByVal UpgradeDownGrade As String,  _
                    ByVal products_model As String,  _
                    ByVal previous_month_amount As Double,  _
                    ByVal Diff_Month As Double,  _
                    ByVal current_discount_code_id As Integer) As ogone_payment_ValidateRow
            Dim rowogone_payment_ValidateRow As ogone_payment_ValidateRow = CType(Me.NewRow,ogone_payment_ValidateRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, date_added, abo_id, customers_id, amount, ogone_payment_status, ogone_batch_id, last_modified, Abo_Amount, Abo_Type, Abo_Amount_Discounted, Abo_Action_Name, Abo_Date, Discount_type, Discount_Value, Discount_Explained, Diff, UpgradeDownGrade, products_model, previous_month_amount, Diff_Month, current_discount_code_id}
            rowogone_payment_ValidateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowogone_payment_ValidateRow)
            Return rowogone_payment_ValidateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ogone_payment_ValidateDataTable = CType(MyBase.Clone,ogone_payment_ValidateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ogone_payment_ValidateDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnogone_payment_id = MyBase.Columns("ogone_payment_id")
            Me.columndate_added = MyBase.Columns("date_added")
            Me.columnabo_id = MyBase.Columns("abo_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnamount = MyBase.Columns("amount")
            Me.columnogone_payment_status = MyBase.Columns("ogone_payment_status")
            Me.columnogone_batch_id = MyBase.Columns("ogone_batch_id")
            Me.columnlast_modified = MyBase.Columns("last_modified")
            Me.columnAbo_Amount = MyBase.Columns("Abo_Amount")
            Me.columnAbo_Type = MyBase.Columns("Abo_Type")
            Me.columnAbo_Amount_Discounted = MyBase.Columns("Abo_Amount_Discounted")
            Me.columnAbo_Action_Name = MyBase.Columns("Abo_Action_Name")
            Me.columnAbo_Date = MyBase.Columns("Abo_Date")
            Me.columnDiscount_type = MyBase.Columns("Discount_type")
            Me.columnDiscount_Value = MyBase.Columns("Discount_Value")
            Me.columnDiscount_Explained = MyBase.Columns("Discount_Explained")
            Me.columnDiff = MyBase.Columns("Diff")
            Me.columnUpgradeDownGrade = MyBase.Columns("UpgradeDownGrade")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnprevious_month_amount = MyBase.Columns("previous_month_amount")
            Me.columnDiff_Month = MyBase.Columns("Diff_Month")
            Me.columncurrent_discount_code_id = MyBase.Columns("current_discount_code_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnogone_payment_id = New Global.System.Data.DataColumn("ogone_payment_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_payment_id)
            Me.columndate_added = New Global.System.Data.DataColumn("date_added", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndate_added)
            Me.columnabo_id = New Global.System.Data.DataColumn("abo_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnamount = New Global.System.Data.DataColumn("amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount)
            Me.columnogone_payment_status = New Global.System.Data.DataColumn("ogone_payment_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_payment_status)
            Me.columnogone_batch_id = New Global.System.Data.DataColumn("ogone_batch_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogone_batch_id)
            Me.columnlast_modified = New Global.System.Data.DataColumn("last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_modified)
            Me.columnAbo_Amount = New Global.System.Data.DataColumn("Abo_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbo_Amount)
            Me.columnAbo_Type = New Global.System.Data.DataColumn("Abo_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbo_Type)
            Me.columnAbo_Amount_Discounted = New Global.System.Data.DataColumn("Abo_Amount_Discounted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbo_Amount_Discounted)
            Me.columnAbo_Action_Name = New Global.System.Data.DataColumn("Abo_Action_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbo_Action_Name)
            Me.columnAbo_Date = New Global.System.Data.DataColumn("Abo_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbo_Date)
            Me.columnDiscount_type = New Global.System.Data.DataColumn("Discount_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount_type)
            Me.columnDiscount_Value = New Global.System.Data.DataColumn("Discount_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount_Value)
            Me.columnDiscount_Explained = New Global.System.Data.DataColumn("Discount_Explained", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount_Explained)
            Me.columnDiff = New Global.System.Data.DataColumn("Diff", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiff)
            Me.columnUpgradeDownGrade = New Global.System.Data.DataColumn("UpgradeDownGrade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpgradeDownGrade)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnprevious_month_amount = New Global.System.Data.DataColumn("previous_month_amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevious_month_amount)
            Me.columnDiff_Month = New Global.System.Data.DataColumn("Diff_Month", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiff_Month)
            Me.columncurrent_discount_code_id = New Global.System.Data.DataColumn("current_discount_code_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurrent_discount_code_id)
            Me.columnogone_payment_id.AutoIncrement = true
            Me.columnogone_payment_id.AllowDBNull = false
            Me.columnogone_payment_id.ReadOnly = true
            Me.columnabo_id.AllowDBNull = false
            Me.columncustomers_id.AllowDBNull = false
            Me.columnamount.AllowDBNull = false
            Me.columnogone_payment_status.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newogone_payment_ValidateRow() As ogone_payment_ValidateRow
            Return CType(Me.NewRow,ogone_payment_ValidateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ogone_payment_ValidateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ogone_payment_ValidateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ogone_payment_ValidateRowChangedEvent) Is Nothing) Then
                RaiseEvent ogone_payment_ValidateRowChanged(Me, New ogone_payment_ValidateRowChangeEvent(CType(e.Row,ogone_payment_ValidateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ogone_payment_ValidateRowChangingEvent) Is Nothing) Then
                RaiseEvent ogone_payment_ValidateRowChanging(Me, New ogone_payment_ValidateRowChangeEvent(CType(e.Row,ogone_payment_ValidateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ogone_payment_ValidateRowDeletedEvent) Is Nothing) Then
                RaiseEvent ogone_payment_ValidateRowDeleted(Me, New ogone_payment_ValidateRowChangeEvent(CType(e.Row,ogone_payment_ValidateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ogone_payment_ValidateRowDeletingEvent) Is Nothing) Then
                RaiseEvent ogone_payment_ValidateRowDeleting(Me, New ogone_payment_ValidateRowChangeEvent(CType(e.Row,ogone_payment_ValidateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeogone_payment_ValidateRow(ByVal row As ogone_payment_ValidateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ogone_payment_ValidateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class domiciliation_payment_ValidateDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columndomiciliation_payment_id As Global.System.Data.DataColumn
        
        Private columndomiciliation_payment_date As Global.System.Data.DataColumn
        
        Private columnabo_id As Global.System.Data.DataColumn
        
        Private columncustomers_id As Global.System.Data.DataColumn
        
        Private columnamount As Global.System.Data.DataColumn
        
        Private columndomiciliation_payment_status As Global.System.Data.DataColumn
        
        Private columnlast_modified As Global.System.Data.DataColumn
        
        Private columnAbo_Amount As Global.System.Data.DataColumn
        
        Private columnAbo_Type As Global.System.Data.DataColumn
        
        Private columnAbo_Amount_Discounted As Global.System.Data.DataColumn
        
        Private columnAbo_Action_Name As Global.System.Data.DataColumn
        
        Private columnAbo_Date As Global.System.Data.DataColumn
        
        Private columnDiscount_type As Global.System.Data.DataColumn
        
        Private columnDiscount_Value As Global.System.Data.DataColumn
        
        Private columnDiscount_Explained As Global.System.Data.DataColumn
        
        Private columnDiff As Global.System.Data.DataColumn
        
        Private columnUpgradeDownGrade As Global.System.Data.DataColumn
        
        Private columnproducts_model As Global.System.Data.DataColumn
        
        Private columnprevious_month_amount As Global.System.Data.DataColumn
        
        Private columnDiff_Month As Global.System.Data.DataColumn
        
        Private columncurrent_discount_code_id As Global.System.Data.DataColumn
        
        Private columncustomers_name As Global.System.Data.DataColumn
        
        Private columncustomers_address As Global.System.Data.DataColumn
        
        Private columndomiciliation_payment_isabel_date As Global.System.Data.DataColumn
        
        Private columndomiciliation_unpaid_id As Global.System.Data.DataColumn
        
        Private columncustomers_firstname As Global.System.Data.DataColumn
        
        Private columncustomers_lastname As Global.System.Data.DataColumn
        
        Private columndomiciliation_debiter_name As Global.System.Data.DataColumn
        
        Private columndomiciliation_number As Global.System.Data.DataColumn
        
        Private columnentry_street_address As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "domiciliation_payment_Validate"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_payment_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_payment_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_payment_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_payment_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property abo_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnabo_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_payment_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_payment_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property last_modifiedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlast_modified
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Abo_AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbo_Amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Abo_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbo_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Abo_Amount_DiscountedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbo_Amount_Discounted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Abo_Action_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbo_Action_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Abo_DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbo_Date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Discount_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Discount_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Discount_ExplainedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount_Explained
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DiffColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiff
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UpgradeDownGradeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpgradeDownGrade
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property products_modelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnproducts_model
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property previous_month_amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevious_month_amount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Diff_MonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiff_Month
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property current_discount_code_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncurrent_discount_code_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_payment_isabel_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_payment_isabel_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_unpaid_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_unpaid_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_firstnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_firstname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property customers_lastnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncustomers_lastname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_debiter_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_debiter_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property domiciliation_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndomiciliation_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entry_street_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentry_street_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As domiciliation_payment_ValidateRow
            Get
                Return CType(Me.Rows(index),domiciliation_payment_ValidateRow)
            End Get
        End Property
        
        Public Event domiciliation_payment_ValidateRowChanging As domiciliation_payment_ValidateRowChangeEventHandler
        
        Public Event domiciliation_payment_ValidateRowChanged As domiciliation_payment_ValidateRowChangeEventHandler
        
        Public Event domiciliation_payment_ValidateRowDeleting As domiciliation_payment_ValidateRowChangeEventHandler
        
        Public Event domiciliation_payment_ValidateRowDeleted As domiciliation_payment_ValidateRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddomiciliation_payment_ValidateRow(ByVal row As domiciliation_payment_ValidateRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddomiciliation_payment_ValidateRow( _
                    ByVal domiciliation_payment_date As Date,  _
                    ByVal abo_id As Integer,  _
                    ByVal customers_id As Integer,  _
                    ByVal amount As Decimal,  _
                    ByVal payment_status As Integer,  _
                    ByVal last_modified As Date,  _
                    ByVal Abo_Amount As Double,  _
                    ByVal Abo_Type As String,  _
                    ByVal Abo_Amount_Discounted As Double,  _
                    ByVal Abo_Action_Name As String,  _
                    ByVal Abo_Date As Date,  _
                    ByVal Discount_type As String,  _
                    ByVal Discount_Value As Double,  _
                    ByVal Discount_Explained As String,  _
                    ByVal Diff As Double,  _
                    ByVal UpgradeDownGrade As String,  _
                    ByVal products_model As String,  _
                    ByVal previous_month_amount As Double,  _
                    ByVal Diff_Month As Double,  _
                    ByVal current_discount_code_id As Integer,  _
                    ByVal customers_name As String,  _
                    ByVal customers_address As String,  _
                    ByVal domiciliation_payment_isabel_date As Date,  _
                    ByVal domiciliation_unpaid_id As Integer,  _
                    ByVal customers_firstname As String,  _
                    ByVal customers_lastname As String,  _
                    ByVal domiciliation_debiter_name As String,  _
                    ByVal domiciliation_number As Long,  _
                    ByVal entry_street_address As String) As domiciliation_payment_ValidateRow
            Dim rowdomiciliation_payment_ValidateRow As domiciliation_payment_ValidateRow = CType(Me.NewRow,domiciliation_payment_ValidateRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, domiciliation_payment_date, abo_id, customers_id, amount, payment_status, last_modified, Abo_Amount, Abo_Type, Abo_Amount_Discounted, Abo_Action_Name, Abo_Date, Discount_type, Discount_Value, Discount_Explained, Diff, UpgradeDownGrade, products_model, previous_month_amount, Diff_Month, current_discount_code_id, customers_name, customers_address, domiciliation_payment_isabel_date, domiciliation_unpaid_id, customers_firstname, customers_lastname, domiciliation_debiter_name, domiciliation_number, entry_street_address}
            rowdomiciliation_payment_ValidateRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdomiciliation_payment_ValidateRow)
            Return rowdomiciliation_payment_ValidateRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As domiciliation_payment_ValidateDataTable = CType(MyBase.Clone,domiciliation_payment_ValidateDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New domiciliation_payment_ValidateDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndomiciliation_payment_id = MyBase.Columns("domiciliation_payment_id")
            Me.columndomiciliation_payment_date = MyBase.Columns("domiciliation_payment_date")
            Me.columnabo_id = MyBase.Columns("abo_id")
            Me.columncustomers_id = MyBase.Columns("customers_id")
            Me.columnamount = MyBase.Columns("amount")
            Me.columndomiciliation_payment_status = MyBase.Columns("payment_status")
            Me.columnlast_modified = MyBase.Columns("last_modified")
            Me.columnAbo_Amount = MyBase.Columns("Abo_Amount")
            Me.columnAbo_Type = MyBase.Columns("Abo_Type")
            Me.columnAbo_Amount_Discounted = MyBase.Columns("Abo_Amount_Discounted")
            Me.columnAbo_Action_Name = MyBase.Columns("Abo_Action_Name")
            Me.columnAbo_Date = MyBase.Columns("Abo_Date")
            Me.columnDiscount_type = MyBase.Columns("Discount_type")
            Me.columnDiscount_Value = MyBase.Columns("Discount_Value")
            Me.columnDiscount_Explained = MyBase.Columns("Discount_Explained")
            Me.columnDiff = MyBase.Columns("Diff")
            Me.columnUpgradeDownGrade = MyBase.Columns("UpgradeDownGrade")
            Me.columnproducts_model = MyBase.Columns("products_model")
            Me.columnprevious_month_amount = MyBase.Columns("previous_month_amount")
            Me.columnDiff_Month = MyBase.Columns("Diff_Month")
            Me.columncurrent_discount_code_id = MyBase.Columns("current_discount_code_id")
            Me.columncustomers_name = MyBase.Columns("customers_name")
            Me.columncustomers_address = MyBase.Columns("customers_address")
            Me.columndomiciliation_payment_isabel_date = MyBase.Columns("domiciliation_payment_isabel_date")
            Me.columndomiciliation_unpaid_id = MyBase.Columns("domiciliation_unpaid_id")
            Me.columncustomers_firstname = MyBase.Columns("customers_firstname")
            Me.columncustomers_lastname = MyBase.Columns("customers_lastname")
            Me.columndomiciliation_debiter_name = MyBase.Columns("domiciliation_debiter_name")
            Me.columndomiciliation_number = MyBase.Columns("domiciliation_number")
            Me.columnentry_street_address = MyBase.Columns("entry_street_address")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndomiciliation_payment_id = New Global.System.Data.DataColumn("domiciliation_payment_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_payment_id)
            Me.columndomiciliation_payment_date = New Global.System.Data.DataColumn("domiciliation_payment_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_payment_date)
            Me.columnabo_id = New Global.System.Data.DataColumn("abo_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnabo_id)
            Me.columncustomers_id = New Global.System.Data.DataColumn("customers_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_id)
            Me.columnamount = New Global.System.Data.DataColumn("amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount)
            Me.columndomiciliation_payment_status = New Global.System.Data.DataColumn("payment_status", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            Me.columndomiciliation_payment_status.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "domiciliation_payment_statusColumn")
            Me.columndomiciliation_payment_status.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columndomiciliation_payment_status")
            Me.columndomiciliation_payment_status.ExtendedProperties.Add("Generator_UserColumnName", "payment_status")
            MyBase.Columns.Add(Me.columndomiciliation_payment_status)
            Me.columnlast_modified = New Global.System.Data.DataColumn("last_modified", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlast_modified)
            Me.columnAbo_Amount = New Global.System.Data.DataColumn("Abo_Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbo_Amount)
            Me.columnAbo_Type = New Global.System.Data.DataColumn("Abo_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbo_Type)
            Me.columnAbo_Amount_Discounted = New Global.System.Data.DataColumn("Abo_Amount_Discounted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbo_Amount_Discounted)
            Me.columnAbo_Action_Name = New Global.System.Data.DataColumn("Abo_Action_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbo_Action_Name)
            Me.columnAbo_Date = New Global.System.Data.DataColumn("Abo_Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbo_Date)
            Me.columnDiscount_type = New Global.System.Data.DataColumn("Discount_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount_type)
            Me.columnDiscount_Value = New Global.System.Data.DataColumn("Discount_Value", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount_Value)
            Me.columnDiscount_Explained = New Global.System.Data.DataColumn("Discount_Explained", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount_Explained)
            Me.columnDiff = New Global.System.Data.DataColumn("Diff", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiff)
            Me.columnUpgradeDownGrade = New Global.System.Data.DataColumn("UpgradeDownGrade", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpgradeDownGrade)
            Me.columnproducts_model = New Global.System.Data.DataColumn("products_model", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnproducts_model)
            Me.columnprevious_month_amount = New Global.System.Data.DataColumn("previous_month_amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevious_month_amount)
            Me.columnDiff_Month = New Global.System.Data.DataColumn("Diff_Month", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiff_Month)
            Me.columncurrent_discount_code_id = New Global.System.Data.DataColumn("current_discount_code_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncurrent_discount_code_id)
            Me.columncustomers_name = New Global.System.Data.DataColumn("customers_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_name)
            Me.columncustomers_address = New Global.System.Data.DataColumn("customers_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_address)
            Me.columndomiciliation_payment_isabel_date = New Global.System.Data.DataColumn("domiciliation_payment_isabel_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_payment_isabel_date)
            Me.columndomiciliation_unpaid_id = New Global.System.Data.DataColumn("domiciliation_unpaid_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_unpaid_id)
            Me.columncustomers_firstname = New Global.System.Data.DataColumn("customers_firstname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_firstname)
            Me.columncustomers_lastname = New Global.System.Data.DataColumn("customers_lastname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncustomers_lastname)
            Me.columndomiciliation_debiter_name = New Global.System.Data.DataColumn("domiciliation_debiter_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_debiter_name)
            Me.columndomiciliation_number = New Global.System.Data.DataColumn("domiciliation_number", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndomiciliation_number)
            Me.columnentry_street_address = New Global.System.Data.DataColumn("entry_street_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentry_street_address)
            Me.columndomiciliation_payment_id.AutoIncrement = true
            Me.columndomiciliation_payment_id.AllowDBNull = false
            Me.columndomiciliation_payment_id.ReadOnly = true
            Me.columnabo_id.AllowDBNull = false
            Me.columncustomers_id.AllowDBNull = false
            Me.columnamount.AllowDBNull = false
            Me.columndomiciliation_payment_status.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdomiciliation_payment_ValidateRow() As domiciliation_payment_ValidateRow
            Return CType(Me.NewRow,domiciliation_payment_ValidateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New domiciliation_payment_ValidateRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(domiciliation_payment_ValidateRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.domiciliation_payment_ValidateRowChangedEvent) Is Nothing) Then
                RaiseEvent domiciliation_payment_ValidateRowChanged(Me, New domiciliation_payment_ValidateRowChangeEvent(CType(e.Row,domiciliation_payment_ValidateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.domiciliation_payment_ValidateRowChangingEvent) Is Nothing) Then
                RaiseEvent domiciliation_payment_ValidateRowChanging(Me, New domiciliation_payment_ValidateRowChangeEvent(CType(e.Row,domiciliation_payment_ValidateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.domiciliation_payment_ValidateRowDeletedEvent) Is Nothing) Then
                RaiseEvent domiciliation_payment_ValidateRowDeleted(Me, New domiciliation_payment_ValidateRowChangeEvent(CType(e.Row,domiciliation_payment_ValidateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.domiciliation_payment_ValidateRowDeletingEvent) Is Nothing) Then
                RaiseEvent domiciliation_payment_ValidateRowDeleting(Me, New domiciliation_payment_ValidateRowChangeEvent(CType(e.Row,domiciliation_payment_ValidateRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedomiciliation_payment_ValidateRow(ByVal row As domiciliation_payment_ValidateRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "domiciliation_payment_ValidateDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class mail_messages_sent_history_view1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "mail_messages_sent_history_view1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As mail_messages_sent_history_view1Row
            Get
                Return CType(Me.Rows(index),mail_messages_sent_history_view1Row)
            End Get
        End Property
        
        Public Event mail_messages_sent_history_view1RowChanging As mail_messages_sent_history_view1RowChangeEventHandler
        
        Public Event mail_messages_sent_history_view1RowChanged As mail_messages_sent_history_view1RowChangeEventHandler
        
        Public Event mail_messages_sent_history_view1RowDeleting As mail_messages_sent_history_view1RowChangeEventHandler
        
        Public Event mail_messages_sent_history_view1RowDeleted As mail_messages_sent_history_view1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addmail_messages_sent_history_view1Row(ByVal row As mail_messages_sent_history_view1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addmail_messages_sent_history_view1Row() As mail_messages_sent_history_view1Row
            Dim rowmail_messages_sent_history_view1Row As mail_messages_sent_history_view1Row = CType(Me.NewRow,mail_messages_sent_history_view1Row)
            Dim columnValuesArray(-1) As Object
            rowmail_messages_sent_history_view1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowmail_messages_sent_history_view1Row)
            Return rowmail_messages_sent_history_view1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As mail_messages_sent_history_view1DataTable = CType(MyBase.Clone,mail_messages_sent_history_view1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New mail_messages_sent_history_view1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newmail_messages_sent_history_view1Row() As mail_messages_sent_history_view1Row
            Return CType(Me.NewRow,mail_messages_sent_history_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New mail_messages_sent_history_view1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(mail_messages_sent_history_view1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.mail_messages_sent_history_view1RowChangedEvent) Is Nothing) Then
                RaiseEvent mail_messages_sent_history_view1RowChanged(Me, New mail_messages_sent_history_view1RowChangeEvent(CType(e.Row,mail_messages_sent_history_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.mail_messages_sent_history_view1RowChangingEvent) Is Nothing) Then
                RaiseEvent mail_messages_sent_history_view1RowChanging(Me, New mail_messages_sent_history_view1RowChangeEvent(CType(e.Row,mail_messages_sent_history_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.mail_messages_sent_history_view1RowDeletedEvent) Is Nothing) Then
                RaiseEvent mail_messages_sent_history_view1RowDeleted(Me, New mail_messages_sent_history_view1RowChangeEvent(CType(e.Row,mail_messages_sent_history_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.mail_messages_sent_history_view1RowDeletingEvent) Is Nothing) Then
                RaiseEvent mail_messages_sent_history_view1RowDeleting(Me, New mail_messages_sent_history_view1RowChangeEvent(CType(e.Row,mail_messages_sent_history_view1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removemail_messages_sent_history_view1Row(ByVal row As mail_messages_sent_history_view1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dsAboRent = New dsAboRent
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "mail_messages_sent_history_view1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class customersRow
        Inherits Global.System.Data.DataRow
        
        Private tablecustomers As customersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecustomers = CType(Me.Table,customersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_gender() As String
            Get
                Return CType(Me(Me.tablecustomers.customers_genderColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.customers_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Return CType(Me(Me.tablecustomers.customers_firstnameColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Return CType(Me(Me.tablecustomers.customers_lastnameColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_dob' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property email() As String
            Get
                Return CType(Me(Me.tablecustomers.emailColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_default_address_id() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_default_address_idColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_default_address_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Return CType(Me(Me.tablecustomers.customers_telephoneColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property encrypted_password() As String
            Get
                Return CType(Me(Me.tablecustomers.encrypted_passwordColumn),String)
            End Get
            Set
                Me(Me.tablecustomers.encrypted_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletter() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_newsletterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletter' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_newsletterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletterpartner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_newsletterpartnerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletterpartner' in table 'customers' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_newsletterpartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_aboColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_suspended() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_suspendedColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_suspendedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_type() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_typeColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_method() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_methodColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_validityto' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_discount_recurring_to_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_discount_recurring_to_date' in table 'custome"& _ 
                            "rs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_payment_method() As Integer
            Get
                Return CType(Me(Me.tablecustomers.customers_abo_payment_methodColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.customers_abo_payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_card_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_type' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_card_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_no() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_card_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_no' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_card_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_exp_date() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_exp_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_exp_date' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_exp_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tablecustomers.ogone_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_owner' in table 'customers' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablecustomers.ogone_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_cc_expiration_status() As Integer
            Get
                Return CType(Me(Me.tablecustomers.ogone_cc_expiration_statusColumn),Integer)
            End Get
            Set
                Me(Me.tablecustomers.ogone_cc_expiration_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_dobNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_dobNull()
            Me(Me.tablecustomers.customers_dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_newsletterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterNull()
            Me(Me.tablecustomers.customers_newsletterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterpartnerNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_newsletterpartnerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterpartnerNull()
            Me(Me.tablecustomers.customers_newsletterpartnerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_validitytoNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_validitytoNull()
            Me(Me.tablecustomers.customers_abo_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_discount_recurring_to_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_discount_recurring_to_dateNull()
            Me(Me.tablecustomers.customers_abo_discount_recurring_to_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_typeNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_card_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_typeNull()
            Me(Me.tablecustomers.ogone_card_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_noNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_card_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_noNull()
            Me(Me.tablecustomers.ogone_card_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_exp_dateNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_exp_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_exp_dateNull()
            Me(Me.tablecustomers.ogone_exp_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_ownerNull() As Boolean
            Return Me.IsNull(Me.tablecustomers.ogone_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_ownerNull()
            Me(Me.tablecustomers.ogone_ownerColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class productsRow
        Inherits Global.System.Data.DataRow
        
        Private tableproducts As productsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableproducts = CType(Me.Table,productsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property imdb_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.imdb_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.imdb_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_title() As String
            Get
                Return CType(Me(Me.tableproducts.products_titleColumn),String)
            End Get
            Set
                Me(Me.tableproducts.products_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_price() As Decimal
            Get
                Return CType(Me(Me.tableproducts.products_priceColumn),Decimal)
            End Get
            Set
                Me(Me.tableproducts.products_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_added' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_last_modified' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_available() As Date
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_date_availableColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_available' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_date_availableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_status() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_public() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_publicColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_public' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_publicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_runtime() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_runtimeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_runtime' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_runtimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_year() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_yearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_year' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_yearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_countries_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_countries_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_countries_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_picture_format() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_picture_formatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_picture_format' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_picture_formatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_rating() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_ratingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_rating' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_ratingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_directors_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_directors_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_directors_id' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_directors_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_studio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableproducts.products_studioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_studio' in table 'products' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableproducts.products_studioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_cinema_now() As Integer
            Get
                Return CType(Me(Me.tableproducts.in_cinema_nowColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.in_cinema_nowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_id() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_idColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_number() As Integer
            Get
                Return CType(Me(Me.tableproducts.products_series_numberColumn),Integer)
            End Get
            Set
                Me(Me.tableproducts.products_series_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tableproducts.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_addedNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_addedNull()
            Me(Me.tableproducts.products_date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_last_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_last_modifiedNull()
            Me(Me.tableproducts.products_last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_availableNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_date_availableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_availableNull()
            Me(Me.tableproducts.products_date_availableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_publicNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_publicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_publicNull()
            Me(Me.tableproducts.products_publicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_runtimeNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_runtimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_runtimeNull()
            Me(Me.tableproducts.products_runtimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_yearNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_yearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_yearNull()
            Me(Me.tableproducts.products_yearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_picture_formatNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_picture_formatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_picture_formatNull()
            Me(Me.tableproducts.products_picture_formatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_ratingNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_ratingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_ratingNull()
            Me(Me.tableproducts.products_ratingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_directors_idNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_directors_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_directors_idNull()
            Me(Me.tableproducts.products_directors_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_studioNull() As Boolean
            Return Me.IsNull(Me.tableproducts.products_studioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_studioNull()
            Me(Me.tableproducts.products_studioColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class aboRow
        Inherits Global.System.Data.DataRow
        
        Private tableabo As aboDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableabo = CType(Me.Table,aboDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_id() As Integer
            Get
                Return CType(Me(Me.tableabo.abo_idColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.abo_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customerid() As Integer
            Get
                Return CType(Me(Me.tableabo.customeridColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.customeridColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Action() As Integer
            Get
                Return CType(Me(Me.tableabo.ActionColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.ActionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo.code_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code_id' in table 'abo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo.code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo.DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date' in table 'abo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo.DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property product_id() As Integer
            Get
                Return CType(Me(Me.tableabo.product_idColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.product_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_method() As String
            Get
                Return CType(Me(Me.tableabo.payment_methodColumn),String)
            End Get
            Set
                Me(Me.tableabo.payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property privilege_notified() As Integer
            Get
                Return CType(Me(Me.tableabo.privilege_notifiedColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.privilege_notifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Return CType(Me(Me.tableabo.commentColumn),String)
            End Get
            Set
                Me(Me.tableabo.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As Integer
            Get
                Return CType(Me(Me.tableabo.siteColumn),Integer)
            End Get
            Set
                Me(Me.tableabo.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscode_idNull() As Boolean
            Return Me.IsNull(Me.tableabo.code_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcode_idNull()
            Me(Me.tableabo.code_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_DateNull() As Boolean
            Return Me.IsNull(Me.tableabo.DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_DateNull()
            Me(Me.tableabo.DateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class abo_actionRow
        Inherits Global.System.Data.DataRow
        
        Private tableabo_action As abo_actionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableabo_action = CType(Me.Table,abo_actionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Return CType(Me(Me.tableabo_action.idColumn),Integer)
            End Get
            Set
                Me(Me.tableabo_action.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name() As String
            Get
                Return CType(Me(Me.tableabo_action.nameColumn),String)
            End Get
            Set
                Me(Me.tableabo_action.nameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class AboRentRow
        Inherits Global.System.Data.DataRow
        
        Private tableAboRent As AboRentDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAboRent = CType(Me.Table,AboRentDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tableAboRent.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tableAboRent.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAboRent.aboColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo' in table 'AboRent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAboRent.aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_type() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAboRent.abo_typeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_type' in table 'AboRent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAboRent.abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_type_desc() As String
            Get
                Try 
                    Return CType(Me(Me.tableAboRent.abo_type_descColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_type_desc' in table 'AboRent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAboRent.abo_type_descColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Rentals() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAboRent.RentalsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rentals' in table 'AboRent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAboRent.RentalsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsaboNull() As Boolean
            Return Me.IsNull(Me.tableAboRent.aboColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetaboNull()
            Me(Me.tableAboRent.aboColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_typeNull() As Boolean
            Return Me.IsNull(Me.tableAboRent.abo_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_typeNull()
            Me(Me.tableAboRent.abo_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_type_descNull() As Boolean
            Return Me.IsNull(Me.tableAboRent.abo_type_descColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_type_descNull()
            Me(Me.tableAboRent.abo_type_descColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRentalsNull() As Boolean
            Return Me.IsNull(Me.tableAboRent.RentalsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRentalsNull()
            Me(Me.tableAboRent.RentalsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class abo_view2Row
        Inherits Global.System.Data.DataRow
        
        Private tableabo_view2 As abo_view2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableabo_view2 = CType(Me.Table,abo_view2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view2.abo_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_id' in table 'abo_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view2.abo_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customerid() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view2.customeridColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customerid' in table 'abo_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view2.customeridColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Action() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view2.ActionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Action' in table 'abo_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view2.ActionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view2.code_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code_id' in table 'abo_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view2.code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property product_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view2.product_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'product_id' in table 'abo_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view2.product_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view2.abo_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_date' in table 'abo_view2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view2.abo_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view2.abo_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_idNull()
            Me(Me.tableabo_view2.abo_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscustomeridNull() As Boolean
            Return Me.IsNull(Me.tableabo_view2.customeridColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcustomeridNull()
            Me(Me.tableabo_view2.customeridColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsActionNull() As Boolean
            Return Me.IsNull(Me.tableabo_view2.ActionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetActionNull()
            Me(Me.tableabo_view2.ActionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscode_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view2.code_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcode_idNull()
            Me(Me.tableabo_view2.code_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproduct_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view2.product_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproduct_idNull()
            Me(Me.tableabo_view2.product_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_dateNull() As Boolean
            Return Me.IsNull(Me.tableabo_view2.abo_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_dateNull()
            Me(Me.tableabo_view2.abo_dateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class abo_view1Row
        Inherits Global.System.Data.DataRow
        
        Private tableabo_view1 As abo_view1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableabo_view1 = CType(Me.Table,abo_view1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_id() As Integer
            Get
                Return CType(Me(Me.tableabo_view1.abo_idColumn),Integer)
            End Get
            Set
                Me(Me.tableabo_view1.abo_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customerid() As Integer
            Get
                Return CType(Me(Me.tableabo_view1.customeridColumn),Integer)
            End Get
            Set
                Me(Me.tableabo_view1.customeridColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Action() As Integer
            Get
                Return CType(Me(Me.tableabo_view1.ActionColumn),Integer)
            End Get
            Set
                Me(Me.tableabo_view1.ActionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.code_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code_id' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.abo_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_date' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.abo_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property product_id() As Integer
            Get
                Return CType(Me(Me.tableabo_view1.product_idColumn),Integer)
            End Get
            Set
                Me(Me.tableabo_view1.product_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_method() As String
            Get
                Return CType(Me(Me.tableabo_view1.payment_methodColumn),String)
            End Get
            Set
                Me(Me.tableabo_view1.payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property privilege_notified() As Integer
            Get
                Return CType(Me(Me.tableabo_view1.privilege_notifiedColumn),Integer)
            End Get
            Set
                Me(Me.tableabo_view1.privilege_notifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Return CType(Me(Me.tableabo_view1.commentColumn),String)
            End Get
            Set
                Me(Me.tableabo_view1.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property site() As Integer
            Get
                Return CType(Me(Me.tableabo_view1.siteColumn),Integer)
            End Get
            Set
                Me(Me.tableabo_view1.siteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'name' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_gender() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_genderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_gender' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_firstname' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_dob() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_dobColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_dob' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_dobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property email() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.emailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'email' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.emailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_default_address_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_default_address_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_default_address_id' in table 'abo_view1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_default_address_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_telephone() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_telephoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_telephone' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_telephoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property encrypted_password() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.encrypted_passwordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'encrypted_password' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.encrypted_passwordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletter() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_newsletterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletter' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_newsletterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_newsletterpartner() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_newsletterpartnerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_newsletterpartner' in table 'abo_view1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_newsletterpartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_aboColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_aboColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_suspended() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_abo_suspendedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_suspended' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_abo_suspendedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_type() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_abo_typeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_type' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_abo_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_language() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_languageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_language' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_validityto() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_abo_validitytoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_validityto' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_abo_validitytoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_discount_recurring_to_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_abo_discount_recurring_to_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_discount_recurring_to_date' in table 'abo_vie"& _ 
                            "w1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_abo_discount_recurring_to_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_abo_payment_method() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_abo_payment_methodColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_abo_payment_method' in table 'abo_view1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_abo_payment_methodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.ogone_card_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_type' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.ogone_card_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_card_no() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.ogone_card_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_card_no' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.ogone_card_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_exp_date() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.ogone_exp_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_exp_date' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.ogone_exp_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_owner() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.ogone_ownerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_owner' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.ogone_ownerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_cc_expiration_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.ogone_cc_expiration_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_cc_expiration_status' in table 'abo_view1' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.ogone_cc_expiration_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expr1() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.Expr1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr1' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_enquiry_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_enquiry_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_enquiry_id' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_enquiry_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_first_delivery() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.date_first_deliveryColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_first_delivery' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.date_first_deliveryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_adult_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.mail_wl_adult_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_adult_not_sufficient' in table 'abo_view1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.mail_wl_adult_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mail_wl_norm_not_sufficient() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.mail_wl_norm_not_sufficientColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mail_wl_norm_not_sufficient' in table 'abo_view1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.mail_wl_norm_not_sufficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_id' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property imdb_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.imdb_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'imdb_id' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.imdb_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_title() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_titleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_title' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_price() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_priceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_price' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_priceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_added' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_last_modified' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_date_available() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_date_availableColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_date_available' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_date_availableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_status() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_statusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_status' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_public() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_publicColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_public' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_publicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_runtime() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_runtimeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_runtime' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_runtimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_year() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_yearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_year' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_yearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_countries_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_countries_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_countries_id' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_countries_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_rating() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_ratingColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_rating' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_ratingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_directors_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_directors_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_directors_id' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_directors_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_studio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_studioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_studio' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_studioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property in_cinema_now() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.in_cinema_nowColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'in_cinema_now' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.in_cinema_nowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_dvdpostchoice() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_dvdpostchoiceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_dvdpostchoice' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_dvdpostchoiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_other_language() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_other_languageColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_other_language' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_other_languageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_next() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_nextColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_next' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_nextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_series_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_series_id' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_series_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_series_number() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.products_series_numberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_series_number' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.products_series_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_code() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.activation_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'activation_code' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.activation_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_cmt() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.activation_cmtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'activation_cmt' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.activation_cmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_code() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.discount_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discount_code' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.discount_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_cmt1() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.discount_cmt1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discount_cmt1' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.discount_cmt1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property discount_cmt2() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.discount_cmt2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'discount_cmt2' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.discount_cmt2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abo_Creation_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.Abo_Creation_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abo_Creation_Date' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.Abo_Creation_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property WishList_Size() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.WishList_SizeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WishList_Size' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.WishList_SizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.Previous_Action_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_ID' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.Previous_Action_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.Previous_Action_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_Name' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.Previous_Action_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Discount_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.Previous_Discount_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Discount_ID' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.Previous_Discount_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Discount_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.Previous_Discount_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Discount_Name' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.Previous_Discount_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Mail_Sent() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.Mail_SentColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mail_Sent' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.Mail_SentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_Activation_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.Previous_Action_Activation_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_Activation_Type' in table 'abo_view1' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.Previous_Action_Activation_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_Activation_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.Previous_Action_Activation_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_Activation_ID' in table 'abo_view1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.Previous_Action_Activation_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_Activation_group_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.Previous_Action_Activation_group_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_Activation_group_id' in table 'abo_view1' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.Previous_Action_Activation_group_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_Activation_group_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.Previous_Action_Activation_group_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_Activation_group_name' in table 'abo_view1'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.Previous_Action_Activation_group_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.Previous_Action_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_date' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.Previous_Action_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.customers_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_lastname' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_street_address() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.entry_street_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_street_address' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.entry_street_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_postcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.entry_postcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_postcode' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.entry_postcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_city() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.entry_cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_city' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.entry_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property activation_group_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.activation_group_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'activation_group_name' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.activation_group_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property campaign() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.campaignColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'campaign' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.campaignColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property created_at() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_view1.created_atColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'created_at' in table 'abo_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_view1.created_atColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscode_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.code_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcode_idNull()
            Me(Me.tableabo_view1.code_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_dateNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.abo_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_dateNull()
            Me(Me.tableabo_view1.abo_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidNull()
            Me(Me.tableabo_view1.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnameNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnameNull()
            Me(Me.tableabo_view1.nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableabo_view1.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_genderNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_genderNull()
            Me(Me.tableabo_view1.customers_genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_firstnameNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_firstnameNull()
            Me(Me.tableabo_view1.customers_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_dobNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_dobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_dobNull()
            Me(Me.tableabo_view1.customers_dobColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsemailNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.emailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetemailNull()
            Me(Me.tableabo_view1.emailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_default_address_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_default_address_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_default_address_idNull()
            Me(Me.tableabo_view1.customers_default_address_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_telephoneNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_telephoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_telephoneNull()
            Me(Me.tableabo_view1.customers_telephoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isencrypted_passwordNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.encrypted_passwordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setencrypted_passwordNull()
            Me(Me.tableabo_view1.encrypted_passwordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_newsletterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterNull()
            Me(Me.tableabo_view1.customers_newsletterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_newsletterpartnerNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_newsletterpartnerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_newsletterpartnerNull()
            Me(Me.tableabo_view1.customers_newsletterpartnerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_aboNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_aboColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_aboNull()
            Me(Me.tableabo_view1.customers_aboColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_suspendedNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_abo_suspendedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_suspendedNull()
            Me(Me.tableabo_view1.customers_abo_suspendedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_typeNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_abo_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_typeNull()
            Me(Me.tableabo_view1.customers_abo_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_languageNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_languageNull()
            Me(Me.tableabo_view1.customers_languageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_validitytoNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_abo_validitytoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_validitytoNull()
            Me(Me.tableabo_view1.customers_abo_validitytoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_discount_recurring_to_dateNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_abo_discount_recurring_to_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_discount_recurring_to_dateNull()
            Me(Me.tableabo_view1.customers_abo_discount_recurring_to_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_abo_payment_methodNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_abo_payment_methodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_abo_payment_methodNull()
            Me(Me.tableabo_view1.customers_abo_payment_methodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_typeNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.ogone_card_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_typeNull()
            Me(Me.tableabo_view1.ogone_card_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_card_noNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.ogone_card_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_card_noNull()
            Me(Me.tableabo_view1.ogone_card_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_exp_dateNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.ogone_exp_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_exp_dateNull()
            Me(Me.tableabo_view1.ogone_exp_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_ownerNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.ogone_ownerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_ownerNull()
            Me(Me.tableabo_view1.ogone_ownerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_cc_expiration_statusNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.ogone_cc_expiration_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_cc_expiration_statusNull()
            Me(Me.tableabo_view1.ogone_cc_expiration_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tableabo_view1.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpr1Null()
            Me(Me.tableabo_view1.Expr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_enquiry_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_enquiry_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_enquiry_idNull()
            Me(Me.tableabo_view1.customers_enquiry_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_first_deliveryNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.date_first_deliveryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_first_deliveryNull()
            Me(Me.tableabo_view1.date_first_deliveryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_adult_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.mail_wl_adult_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_adult_not_sufficientNull()
            Me(Me.tableabo_view1.mail_wl_adult_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismail_wl_norm_not_sufficientNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.mail_wl_norm_not_sufficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmail_wl_norm_not_sufficientNull()
            Me(Me.tableabo_view1.mail_wl_norm_not_sufficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_idNull()
            Me(Me.tableabo_view1.products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tableabo_view1.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isimdb_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.imdb_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setimdb_idNull()
            Me(Me.tableabo_view1.imdb_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_titleNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_titleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_titleNull()
            Me(Me.tableabo_view1.products_titleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_priceNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_priceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_priceNull()
            Me(Me.tableabo_view1.products_priceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_addedNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_addedNull()
            Me(Me.tableabo_view1.products_date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_last_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_last_modifiedNull()
            Me(Me.tableabo_view1.products_last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_date_availableNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_date_availableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_date_availableNull()
            Me(Me.tableabo_view1.products_date_availableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_statusNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_statusNull()
            Me(Me.tableabo_view1.products_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_publicNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_publicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_publicNull()
            Me(Me.tableabo_view1.products_publicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_runtimeNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_runtimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_runtimeNull()
            Me(Me.tableabo_view1.products_runtimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_yearNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_yearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_yearNull()
            Me(Me.tableabo_view1.products_yearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_countries_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_countries_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_countries_idNull()
            Me(Me.tableabo_view1.products_countries_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_ratingNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_ratingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_ratingNull()
            Me(Me.tableabo_view1.products_ratingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_directors_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_directors_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_directors_idNull()
            Me(Me.tableabo_view1.products_directors_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_studioNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_studioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_studioNull()
            Me(Me.tableabo_view1.products_studioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isin_cinema_nowNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.in_cinema_nowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setin_cinema_nowNull()
            Me(Me.tableabo_view1.in_cinema_nowColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_dvdpostchoiceNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_dvdpostchoiceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_dvdpostchoiceNull()
            Me(Me.tableabo_view1.products_dvdpostchoiceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_other_languageNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_other_languageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_other_languageNull()
            Me(Me.tableabo_view1.products_other_languageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_nextNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_nextColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_nextNull()
            Me(Me.tableabo_view1.products_nextColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_series_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_series_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_series_idNull()
            Me(Me.tableabo_view1.products_series_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_series_numberNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.products_series_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_series_numberNull()
            Me(Me.tableabo_view1.products_series_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_codeNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.activation_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_codeNull()
            Me(Me.tableabo_view1.activation_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_cmtNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.activation_cmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_cmtNull()
            Me(Me.tableabo_view1.activation_cmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_codeNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.discount_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_codeNull()
            Me(Me.tableabo_view1.discount_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_cmt1Null() As Boolean
            Return Me.IsNull(Me.tableabo_view1.discount_cmt1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_cmt1Null()
            Me(Me.tableabo_view1.discount_cmt1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdiscount_cmt2Null() As Boolean
            Return Me.IsNull(Me.tableabo_view1.discount_cmt2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdiscount_cmt2Null()
            Me(Me.tableabo_view1.discount_cmt2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbo_Creation_DateNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.Abo_Creation_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbo_Creation_DateNull()
            Me(Me.tableabo_view1.Abo_Creation_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWishList_SizeNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.WishList_SizeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWishList_SizeNull()
            Me(Me.tableabo_view1.WishList_SizeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_IDNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.Previous_Action_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_IDNull()
            Me(Me.tableabo_view1.Previous_Action_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_NameNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.Previous_Action_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_NameNull()
            Me(Me.tableabo_view1.Previous_Action_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Discount_IDNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.Previous_Discount_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Discount_IDNull()
            Me(Me.tableabo_view1.Previous_Discount_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Discount_NameNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.Previous_Discount_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Discount_NameNull()
            Me(Me.tableabo_view1.Previous_Discount_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMail_SentNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.Mail_SentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMail_SentNull()
            Me(Me.tableabo_view1.Mail_SentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_Activation_TypeNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.Previous_Action_Activation_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_Activation_TypeNull()
            Me(Me.tableabo_view1.Previous_Action_Activation_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_Activation_IDNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.Previous_Action_Activation_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_Activation_IDNull()
            Me(Me.tableabo_view1.Previous_Action_Activation_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_Activation_group_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.Previous_Action_Activation_group_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_Activation_group_idNull()
            Me(Me.tableabo_view1.Previous_Action_Activation_group_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_Activation_group_nameNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.Previous_Action_Activation_group_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_Activation_group_nameNull()
            Me(Me.tableabo_view1.Previous_Action_Activation_group_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_dateNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.Previous_Action_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_dateNull()
            Me(Me.tableabo_view1.Previous_Action_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_lastnameNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.customers_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_lastnameNull()
            Me(Me.tableabo_view1.customers_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_street_addressNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.entry_street_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_street_addressNull()
            Me(Me.tableabo_view1.entry_street_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_postcodeNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.entry_postcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_postcodeNull()
            Me(Me.tableabo_view1.entry_postcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_cityNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.entry_cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_cityNull()
            Me(Me.tableabo_view1.entry_cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isactivation_group_nameNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.activation_group_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setactivation_group_nameNull()
            Me(Me.tableabo_view1.activation_group_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscampaignNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.campaignColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcampaignNull()
            Me(Me.tableabo_view1.campaignColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscreated_atNull() As Boolean
            Return Me.IsNull(Me.tableabo_view1.created_atColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcreated_atNull()
            Me(Me.tableabo_view1.created_atColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class abo_stop_whyRow
        Inherits Global.System.Data.DataRow
        
        Private tableabo_stop_why As abo_stop_whyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableabo_stop_why = CType(Me.Table,abo_stop_whyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_stop_why_id() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.abo_stop_why_idColumn),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.abo_stop_why_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why.dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date' in table 'abo_stop_why' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why.dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop1() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop1Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop2() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop2Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop3() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop3Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop4() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop4Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop5() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop5Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop6() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop6Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop7() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop7Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop8() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop8Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop9() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop9Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop10() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop10Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop11() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop11Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop12() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop12Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop13() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop13Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop14() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop14Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop15() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop15Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop16() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop16Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop17() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop17Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop18() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop18Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop19() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop19Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop20() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop20Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop21() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop21Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop22() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop22Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop23() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop23Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop24() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop24Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop25() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop25Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop26() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.whystop26Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystop26Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystopother() As String
            Get
                Return CType(Me(Me.tableabo_stop_why.whystopotherColumn),String)
            End Get
            Set
                Me(Me.tableabo_stop_why.whystopotherColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property youliked1() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.youliked1Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.youliked1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property youliked2() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.youliked2Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.youliked2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property youliked3() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.youliked3Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.youliked3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property youliked4() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.youliked4Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.youliked4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property youliked5() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.youliked5Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.youliked5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property youliked6() As Integer
            Get
                Return CType(Me(Me.tableabo_stop_why.youliked6Column),Integer)
            End Get
            Set
                Me(Me.tableabo_stop_why.youliked6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_dateNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why.dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_dateNull()
            Me(Me.tableabo_stop_why.dateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class abo_stop_why_explainedRow
        Inherits Global.System.Data.DataRow
        
        Private tableabo_stop_why_explained As abo_stop_why_explainedDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableabo_stop_why_explained = CType(Me.Table,abo_stop_why_explainedDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property whystop() As String
            Get
                Return CType(Me(Me.tableabo_stop_why_explained.whystopColumn),String)
            End Get
            Set
                Me(Me.tableabo_stop_why_explained.whystopColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property explained() As String
            Get
                Return CType(Me(Me.tableabo_stop_why_explained.explainedColumn),String)
            End Get
            Set
                Me(Me.tableabo_stop_why_explained.explainedColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class abo_stop_why_view1Row
        Inherits Global.System.Data.DataRow
        
        Private tableabo_stop_why_view1 As abo_stop_why_view1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableabo_stop_why_view1 = CType(Me.Table,abo_stop_why_view1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'id' in table 'abo_stop_why_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'abo_stop_why_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_stop() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.date_stopColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_stop' in table 'abo_stop_why_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.date_stopColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property reason() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.reasonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'reason' in table 'abo_stop_why_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.reasonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.commentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comment' in table 'abo_stop_why_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.commentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.Previous_Action_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_ID' in table 'abo_stop_why_view1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.Previous_Action_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.Previous_Action_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_Name' in table 'abo_stop_why_view1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.Previous_Action_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_Activation_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.Previous_Action_Activation_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_Activation_Type' in table 'abo_stop_why_vie"& _ 
                            "w1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.Previous_Action_Activation_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_Activation_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.Previous_Action_Activation_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_Activation_ID' in table 'abo_stop_why_view1"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.Previous_Action_Activation_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_Activation_group_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.Previous_Action_Activation_group_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_Activation_group_id' in table 'abo_stop_why"& _ 
                            "_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.Previous_Action_Activation_group_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_Activation_group_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.Previous_Action_Activation_group_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_Activation_group_name' in table 'abo_stop_w"& _ 
                            "hy_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.Previous_Action_Activation_group_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Previous_Action_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.Previous_Action_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Previous_Action_date' in table 'abo_stop_why_view1' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.Previous_Action_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comment_users() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.comment_usersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comment_users' in table 'abo_stop_why_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.comment_usersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property prevent_users() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.prevent_usersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevent_users' in table 'abo_stop_why_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.prevent_usersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dvdPerMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.dvdPerMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dvdPerMonth' in table 'abo_stop_why_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.dvdPerMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credit() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.creditColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'credit' in table 'abo_stop_why_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.creditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cpt_reconduction() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.cpt_reconductionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cpt_reconduction' in table 'abo_stop_why_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.cpt_reconductionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property size_wishlist() As String
            Get
                Try 
                    Return CType(Me(Me.tableabo_stop_why_view1.size_wishlistColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'size_wishlist' in table 'abo_stop_why_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableabo_stop_why_view1.size_wishlistColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetidNull()
            Me(Me.tableabo_stop_why_view1.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableabo_stop_why_view1.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_stopNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.date_stopColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_stopNull()
            Me(Me.tableabo_stop_why_view1.date_stopColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsreasonNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.reasonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetreasonNull()
            Me(Me.tableabo_stop_why_view1.reasonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscommentNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.commentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcommentNull()
            Me(Me.tableabo_stop_why_view1.commentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_IDNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.Previous_Action_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_IDNull()
            Me(Me.tableabo_stop_why_view1.Previous_Action_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_NameNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.Previous_Action_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_NameNull()
            Me(Me.tableabo_stop_why_view1.Previous_Action_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_Activation_TypeNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.Previous_Action_Activation_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_Activation_TypeNull()
            Me(Me.tableabo_stop_why_view1.Previous_Action_Activation_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_Activation_IDNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.Previous_Action_Activation_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_Activation_IDNull()
            Me(Me.tableabo_stop_why_view1.Previous_Action_Activation_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_Activation_group_idNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.Previous_Action_Activation_group_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_Activation_group_idNull()
            Me(Me.tableabo_stop_why_view1.Previous_Action_Activation_group_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_Activation_group_nameNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.Previous_Action_Activation_group_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_Activation_group_nameNull()
            Me(Me.tableabo_stop_why_view1.Previous_Action_Activation_group_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrevious_Action_dateNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.Previous_Action_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrevious_Action_dateNull()
            Me(Me.tableabo_stop_why_view1.Previous_Action_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscomment_usersNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.comment_usersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcomment_usersNull()
            Me(Me.tableabo_stop_why_view1.comment_usersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprevent_usersNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.prevent_usersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprevent_usersNull()
            Me(Me.tableabo_stop_why_view1.prevent_usersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdvdPerMonthNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.dvdPerMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdvdPerMonthNull()
            Me(Me.tableabo_stop_why_view1.dvdPerMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscreditNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.creditColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcreditNull()
            Me(Me.tableabo_stop_why_view1.creditColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscpt_reconductionNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.cpt_reconductionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcpt_reconductionNull()
            Me(Me.tableabo_stop_why_view1.cpt_reconductionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issize_wishlistNull() As Boolean
            Return Me.IsNull(Me.tableabo_stop_why_view1.size_wishlistColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsize_wishlistNull()
            Me(Me.tableabo_stop_why_view1.size_wishlistColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ogone_paymentRow
        Inherits Global.System.Data.DataRow
        
        Private tableogone_payment As ogone_paymentDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableogone_payment = CType(Me.Table,ogone_paymentDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_payment_id() As Integer
            Get
                Return CType(Me(Me.tableogone_payment.ogone_payment_idColumn),Integer)
            End Get
            Set
                Me(Me.tableogone_payment.ogone_payment_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment.date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_added' in table 'ogone_payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment.date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_id() As Integer
            Get
                Return CType(Me(Me.tableogone_payment.abo_idColumn),Integer)
            End Get
            Set
                Me(Me.tableogone_payment.abo_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tableogone_payment.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tableogone_payment.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property amount() As Decimal
            Get
                Return CType(Me(Me.tableogone_payment.amountColumn),Decimal)
            End Get
            Set
                Me(Me.tableogone_payment.amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_payment_status() As Integer
            Get
                Return CType(Me(Me.tableogone_payment.ogone_payment_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableogone_payment.ogone_payment_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_batch_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment.ogone_batch_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_batch_id' in table 'ogone_payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment.ogone_batch_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment.last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_modified' in table 'ogone_payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment.last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_addedNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment.date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_addedNull()
            Me(Me.tableogone_payment.date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_batch_idNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment.ogone_batch_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_batch_idNull()
            Me(Me.tableogone_payment.ogone_batch_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islast_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment.last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlast_modifiedNull()
            Me(Me.tableogone_payment.last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class domiciliation_paymentRow
        Inherits Global.System.Data.DataRow
        
        Private tabledomiciliation_payment As domiciliation_paymentDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledomiciliation_payment = CType(Me.Table,domiciliation_paymentDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_payment_id() As Integer
            Get
                Return CType(Me(Me.tabledomiciliation_payment.domiciliation_payment_idColumn),Integer)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.domiciliation_payment_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_payment_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment.domiciliation_payment_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_payment_date' in table 'domiciliation_payment"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment.domiciliation_payment_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_id() As Integer
            Get
                Return CType(Me(Me.tabledomiciliation_payment.abo_idColumn),Integer)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.abo_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tabledomiciliation_payment.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_name() As String
            Get
                Return CType(Me(Me.tabledomiciliation_payment.customers_nameColumn),String)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.customers_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_address() As String
            Get
                Return CType(Me(Me.tabledomiciliation_payment.customers_addressColumn),String)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.customers_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property amount() As Decimal
            Get
                Return CType(Me(Me.tabledomiciliation_payment.amountColumn),Decimal)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strdomiciliation_debiter_name() As String
            Get
                Return CType(Me(Me.tabledomiciliation_payment.strdomiciliation_debiter_nameColumn),String)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.strdomiciliation_debiter_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property strdomiciliation_number() As String
            Get
                Return CType(Me(Me.tabledomiciliation_payment.strdomiciliation_numberColumn),String)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.strdomiciliation_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property communication() As String
            Get
                Return CType(Me(Me.tabledomiciliation_payment.communicationColumn),String)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.communicationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property first_payment() As Integer
            Get
                Return CType(Me(Me.tabledomiciliation_payment.first_paymentColumn),Integer)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.first_paymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property reconduction() As Integer
            Get
                Return CType(Me(Me.tabledomiciliation_payment.reconductionColumn),Integer)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.reconductionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_status() As Integer
            Get
                Return CType(Me(Me.tabledomiciliation_payment.domiciliation_payment_statusColumn),Integer)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.domiciliation_payment_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_payment_isabel_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment.domiciliation_payment_isabel_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_payment_isabel_date' in table 'domiciliation_"& _ 
                            "payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment.domiciliation_payment_isabel_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_unpaid_id() As Integer
            Get
                Return CType(Me(Me.tabledomiciliation_payment.domiciliation_unpaid_idColumn),Integer)
            End Get
            Set
                Me(Me.tabledomiciliation_payment.domiciliation_unpaid_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property batch_immatriculation_number() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment.batch_immatriculation_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'batch_immatriculation_number' in table 'domiciliation_payme"& _ 
                            "nt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment.batch_immatriculation_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment.last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_modified' in table 'domiciliation_payment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment.last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_stopped_with_dvdathome_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment.abo_stopped_with_dvdathome_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_stopped_with_dvdathome_id' in table 'domiciliation_paym"& _ 
                            "ent' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment.abo_stopped_with_dvdathome_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_payment_dateNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment.domiciliation_payment_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_payment_dateNull()
            Me(Me.tabledomiciliation_payment.domiciliation_payment_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_payment_isabel_dateNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment.domiciliation_payment_isabel_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_payment_isabel_dateNull()
            Me(Me.tabledomiciliation_payment.domiciliation_payment_isabel_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbatch_immatriculation_numberNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment.batch_immatriculation_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbatch_immatriculation_numberNull()
            Me(Me.tabledomiciliation_payment.batch_immatriculation_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islast_modifiedNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment.last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlast_modifiedNull()
            Me(Me.tabledomiciliation_payment.last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_stopped_with_dvdathome_idNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment.abo_stopped_with_dvdathome_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_stopped_with_dvdathome_idNull()
            Me(Me.tabledomiciliation_payment.abo_stopped_with_dvdathome_idColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class wishlist_assigned_view1Row
        Inherits Global.System.Data.DataRow
        
        Private tablewishlist_assigned_view1 As wishlist_assigned_view1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablewishlist_assigned_view1 = CType(Me.Table,wishlist_assigned_view1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wl_assigned_id() As Integer
            Get
                Return CType(Me(Me.tablewishlist_assigned_view1.wl_assigned_idColumn),Integer)
            End Get
            Set
                Me(Me.tablewishlist_assigned_view1.wl_assigned_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property wl_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablewishlist_assigned_view1.wl_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'wl_id' in table 'wishlist_assigned_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablewishlist_assigned_view1.wl_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablewishlist_assigned_view1.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'wishlist_assigned_view1' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablewishlist_assigned_view1.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablewishlist_assigned_view1.products_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_id' in table 'wishlist_assigned_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablewishlist_assigned_view1.products_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rank() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablewishlist_assigned_view1.rankColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rank' in table 'wishlist_assigned_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablewishlist_assigned_view1.rankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tablewishlist_assigned_view1.date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_added' in table 'wishlist_assigned_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablewishlist_assigned_view1.date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_assigned() As Date
            Get
                Try 
                    Return CType(Me(Me.tablewishlist_assigned_view1.date_assignedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_assigned' in table 'wishlist_assigned_view1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablewishlist_assigned_view1.date_assignedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tablewishlist_assigned_view1.customers_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_lastname' in table 'wishlist_assigned_view1' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablewishlist_assigned_view1.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tablewishlist_assigned_view1.customers_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_firstname' in table 'wishlist_assigned_view1' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablewishlist_assigned_view1.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablewishlist_assigned_view1.products_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_type' in table 'wishlist_assigned_view1' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablewishlist_assigned_view1.products_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_title() As String
            Get
                Try 
                    Return CType(Me(Me.tablewishlist_assigned_view1.products_titleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_title' in table 'wishlist_assigned_view1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablewishlist_assigned_view1.products_titleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iswl_idNull() As Boolean
            Return Me.IsNull(Me.tablewishlist_assigned_view1.wl_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setwl_idNull()
            Me(Me.tablewishlist_assigned_view1.wl_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tablewishlist_assigned_view1.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tablewishlist_assigned_view1.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_idNull() As Boolean
            Return Me.IsNull(Me.tablewishlist_assigned_view1.products_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_idNull()
            Me(Me.tablewishlist_assigned_view1.products_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsrankNull() As Boolean
            Return Me.IsNull(Me.tablewishlist_assigned_view1.rankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetrankNull()
            Me(Me.tablewishlist_assigned_view1.rankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_addedNull() As Boolean
            Return Me.IsNull(Me.tablewishlist_assigned_view1.date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_addedNull()
            Me(Me.tablewishlist_assigned_view1.date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_assignedNull() As Boolean
            Return Me.IsNull(Me.tablewishlist_assigned_view1.date_assignedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_assignedNull()
            Me(Me.tablewishlist_assigned_view1.date_assignedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_lastnameNull() As Boolean
            Return Me.IsNull(Me.tablewishlist_assigned_view1.customers_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_lastnameNull()
            Me(Me.tablewishlist_assigned_view1.customers_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_firstnameNull() As Boolean
            Return Me.IsNull(Me.tablewishlist_assigned_view1.customers_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_firstnameNull()
            Me(Me.tablewishlist_assigned_view1.customers_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_typeNull() As Boolean
            Return Me.IsNull(Me.tablewishlist_assigned_view1.products_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_typeNull()
            Me(Me.tablewishlist_assigned_view1.products_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_titleNull() As Boolean
            Return Me.IsNull(Me.tablewishlist_assigned_view1.products_titleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_titleNull()
            Me(Me.tablewishlist_assigned_view1.products_titleColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class aboreconduction_view1Row
        Inherits Global.System.Data.DataRow
        
        Private tableaboreconduction_view1 As aboreconduction_view1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableaboreconduction_view1 = CType(Me.Table,aboreconduction_view1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.abo_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'abo_id' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.abo_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.customers_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_id' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property month1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.month1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'month1' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.month1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property month2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.month2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'month2' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.month2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property month3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.month3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'month3' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.month3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Month12() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.Month12Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Month12' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.Month12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Month13() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.Month13Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Month13' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.Month13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Month23() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.Month23Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Month23' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.Month23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Month123() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.Month123Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Month123' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.Month123Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DOfM1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.DOfM1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOfM1' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.DOfM1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DOfM2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.DOfM2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOfM2' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.DOfM2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DOfM3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.DOfM3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOfM3' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.DOfM3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ogone() As Integer
            Get
                Return CType(Me(Me.tableaboreconduction_view1.OgoneColumn),Integer)
            End Get
            Set
                Me(Me.tableaboreconduction_view1.OgoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Dom() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.DomColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dom' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.DomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableaboreconduction_view1.code_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code_id' in table 'aboreconduction_view1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaboreconduction_view1.code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isabo_idNull() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.abo_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setabo_idNull()
            Me(Me.tableaboreconduction_view1.abo_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_idNull() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.customers_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_idNull()
            Me(Me.tableaboreconduction_view1.customers_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismonth1Null() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.month1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmonth1Null()
            Me(Me.tableaboreconduction_view1.month1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismonth2Null() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.month2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmonth2Null()
            Me(Me.tableaboreconduction_view1.month2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismonth3Null() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.month3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmonth3Null()
            Me(Me.tableaboreconduction_view1.month3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMonth12Null() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.Month12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMonth12Null()
            Me(Me.tableaboreconduction_view1.Month12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMonth13Null() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.Month13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMonth13Null()
            Me(Me.tableaboreconduction_view1.Month13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMonth23Null() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.Month23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMonth23Null()
            Me(Me.tableaboreconduction_view1.Month23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMonth123Null() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.Month123Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMonth123Null()
            Me(Me.tableaboreconduction_view1.Month123Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDOfM1Null() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.DOfM1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDOfM1Null()
            Me(Me.tableaboreconduction_view1.DOfM1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDOfM2Null() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.DOfM2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDOfM2Null()
            Me(Me.tableaboreconduction_view1.DOfM2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDOfM3Null() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.DOfM3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDOfM3Null()
            Me(Me.tableaboreconduction_view1.DOfM3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDomNull() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.DomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDomNull()
            Me(Me.tableaboreconduction_view1.DomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAmountNull()
            Me(Me.tableaboreconduction_view1.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscode_idNull() As Boolean
            Return Me.IsNull(Me.tableaboreconduction_view1.code_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcode_idNull()
            Me(Me.tableaboreconduction_view1.code_idColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ogone_payment_ValidateRow
        Inherits Global.System.Data.DataRow
        
        Private tableogone_payment_Validate As ogone_payment_ValidateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableogone_payment_Validate = CType(Me.Table,ogone_payment_ValidateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_payment_id() As Integer
            Get
                Return CType(Me(Me.tableogone_payment_Validate.ogone_payment_idColumn),Integer)
            End Get
            Set
                Me(Me.tableogone_payment_Validate.ogone_payment_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property date_added() As Date
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.date_addedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'date_added' in table 'ogone_payment_Validate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.date_addedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_id() As Integer
            Get
                Return CType(Me(Me.tableogone_payment_Validate.abo_idColumn),Integer)
            End Get
            Set
                Me(Me.tableogone_payment_Validate.abo_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tableogone_payment_Validate.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tableogone_payment_Validate.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property amount() As Decimal
            Get
                Return CType(Me(Me.tableogone_payment_Validate.amountColumn),Decimal)
            End Get
            Set
                Me(Me.tableogone_payment_Validate.amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_payment_status() As Integer
            Get
                Return CType(Me(Me.tableogone_payment_Validate.ogone_payment_statusColumn),Integer)
            End Get
            Set
                Me(Me.tableogone_payment_Validate.ogone_payment_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ogone_batch_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.ogone_batch_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogone_batch_id' in table 'ogone_payment_Validate' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.ogone_batch_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_modified' in table 'ogone_payment_Validate' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abo_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.Abo_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abo_Amount' in table 'ogone_payment_Validate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.Abo_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abo_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.Abo_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abo_Type' in table 'ogone_payment_Validate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.Abo_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abo_Amount_Discounted() As Double
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.Abo_Amount_DiscountedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abo_Amount_Discounted' in table 'ogone_payment_Validate' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.Abo_Amount_DiscountedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abo_Action_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.Abo_Action_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abo_Action_Name' in table 'ogone_payment_Validate' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.Abo_Action_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abo_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.Abo_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abo_Date' in table 'ogone_payment_Validate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.Abo_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Discount_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.Discount_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount_type' in table 'ogone_payment_Validate' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.Discount_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Discount_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.Discount_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount_Value' in table 'ogone_payment_Validate' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.Discount_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Discount_Explained() As String
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.Discount_ExplainedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount_Explained' in table 'ogone_payment_Validate' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.Discount_ExplainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Diff() As Double
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.DiffColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Diff' in table 'ogone_payment_Validate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.DiffColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpgradeDownGrade() As String
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.UpgradeDownGradeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UpgradeDownGrade' in table 'ogone_payment_Validate' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.UpgradeDownGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'ogone_payment_Validate' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property previous_month_amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.previous_month_amountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'previous_month_amount' in table 'ogone_payment_Validate' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.previous_month_amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Diff_Month() As Double
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.Diff_MonthColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Diff_Month' in table 'ogone_payment_Validate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.Diff_MonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property current_discount_code_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableogone_payment_Validate.current_discount_code_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'current_discount_code_id' in table 'ogone_payment_Validate'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableogone_payment_Validate.current_discount_code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdate_addedNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.date_addedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdate_addedNull()
            Me(Me.tableogone_payment_Validate.date_addedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isogone_batch_idNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.ogone_batch_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setogone_batch_idNull()
            Me(Me.tableogone_payment_Validate.ogone_batch_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islast_modifiedNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlast_modifiedNull()
            Me(Me.tableogone_payment_Validate.last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbo_AmountNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.Abo_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbo_AmountNull()
            Me(Me.tableogone_payment_Validate.Abo_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbo_TypeNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.Abo_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbo_TypeNull()
            Me(Me.tableogone_payment_Validate.Abo_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbo_Amount_DiscountedNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.Abo_Amount_DiscountedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbo_Amount_DiscountedNull()
            Me(Me.tableogone_payment_Validate.Abo_Amount_DiscountedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbo_Action_NameNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.Abo_Action_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbo_Action_NameNull()
            Me(Me.tableogone_payment_Validate.Abo_Action_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbo_DateNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.Abo_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbo_DateNull()
            Me(Me.tableogone_payment_Validate.Abo_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiscount_typeNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.Discount_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiscount_typeNull()
            Me(Me.tableogone_payment_Validate.Discount_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiscount_ValueNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.Discount_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiscount_ValueNull()
            Me(Me.tableogone_payment_Validate.Discount_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiscount_ExplainedNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.Discount_ExplainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiscount_ExplainedNull()
            Me(Me.tableogone_payment_Validate.Discount_ExplainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiffNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.DiffColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiffNull()
            Me(Me.tableogone_payment_Validate.DiffColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUpgradeDownGradeNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.UpgradeDownGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUpgradeDownGradeNull()
            Me(Me.tableogone_payment_Validate.UpgradeDownGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tableogone_payment_Validate.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprevious_month_amountNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.previous_month_amountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprevious_month_amountNull()
            Me(Me.tableogone_payment_Validate.previous_month_amountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiff_MonthNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.Diff_MonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiff_MonthNull()
            Me(Me.tableogone_payment_Validate.Diff_MonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscurrent_discount_code_idNull() As Boolean
            Return Me.IsNull(Me.tableogone_payment_Validate.current_discount_code_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcurrent_discount_code_idNull()
            Me(Me.tableogone_payment_Validate.current_discount_code_idColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class domiciliation_payment_ValidateRow
        Inherits Global.System.Data.DataRow
        
        Private tabledomiciliation_payment_Validate As domiciliation_payment_ValidateDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledomiciliation_payment_Validate = CType(Me.Table,domiciliation_payment_ValidateDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_payment_id() As Integer
            Get
                Return CType(Me(Me.tabledomiciliation_payment_Validate.domiciliation_payment_idColumn),Integer)
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.domiciliation_payment_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_payment_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.domiciliation_payment_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_payment_date' in table 'domiciliation_payment"& _ 
                            "_Validate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.domiciliation_payment_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property abo_id() As Integer
            Get
                Return CType(Me(Me.tabledomiciliation_payment_Validate.abo_idColumn),Integer)
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.abo_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_id() As Integer
            Get
                Return CType(Me(Me.tabledomiciliation_payment_Validate.customers_idColumn),Integer)
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.customers_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property amount() As Decimal
            Get
                Return CType(Me(Me.tabledomiciliation_payment_Validate.amountColumn),Decimal)
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property payment_status() As Integer
            Get
                Return CType(Me(Me.tabledomiciliation_payment_Validate.domiciliation_payment_statusColumn),Integer)
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.domiciliation_payment_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property last_modified() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.last_modifiedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'last_modified' in table 'domiciliation_payment_Validate' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.last_modifiedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abo_Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.Abo_AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abo_Amount' in table 'domiciliation_payment_Validate' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.Abo_AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abo_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.Abo_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abo_Type' in table 'domiciliation_payment_Validate' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.Abo_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abo_Amount_Discounted() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.Abo_Amount_DiscountedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abo_Amount_Discounted' in table 'domiciliation_payment_Vali"& _ 
                            "date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.Abo_Amount_DiscountedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abo_Action_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.Abo_Action_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abo_Action_Name' in table 'domiciliation_payment_Validate' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.Abo_Action_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abo_Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.Abo_DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abo_Date' in table 'domiciliation_payment_Validate' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.Abo_DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Discount_type() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.Discount_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount_type' in table 'domiciliation_payment_Validate' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.Discount_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Discount_Value() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.Discount_ValueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount_Value' in table 'domiciliation_payment_Validate' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.Discount_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Discount_Explained() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.Discount_ExplainedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount_Explained' in table 'domiciliation_payment_Validat"& _ 
                            "e' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.Discount_ExplainedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Diff() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.DiffColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Diff' in table 'domiciliation_payment_Validate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.DiffColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpgradeDownGrade() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.UpgradeDownGradeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UpgradeDownGrade' in table 'domiciliation_payment_Validate'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.UpgradeDownGradeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property products_model() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.products_modelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'products_model' in table 'domiciliation_payment_Validate' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.products_modelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property previous_month_amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.previous_month_amountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'previous_month_amount' in table 'domiciliation_payment_Vali"& _ 
                            "date' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.previous_month_amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Diff_Month() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.Diff_MonthColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Diff_Month' in table 'domiciliation_payment_Validate' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.Diff_MonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property current_discount_code_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.current_discount_code_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'current_discount_code_id' in table 'domiciliation_payment_V"& _ 
                            "alidate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.current_discount_code_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_name() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.customers_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_name' in table 'domiciliation_payment_Validate' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.customers_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_address() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.customers_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_address' in table 'domiciliation_payment_Validate"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.customers_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_payment_isabel_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.domiciliation_payment_isabel_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_payment_isabel_date' in table 'domiciliation_"& _ 
                            "payment_Validate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.domiciliation_payment_isabel_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_unpaid_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.domiciliation_unpaid_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_unpaid_id' in table 'domiciliation_payment_Va"& _ 
                            "lidate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.domiciliation_unpaid_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_firstname() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.customers_firstnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_firstname' in table 'domiciliation_payment_Valida"& _ 
                            "te' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.customers_firstnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property customers_lastname() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.customers_lastnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'customers_lastname' in table 'domiciliation_payment_Validat"& _ 
                            "e' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.customers_lastnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_debiter_name() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.domiciliation_debiter_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_debiter_name' in table 'domiciliation_payment"& _ 
                            "_Validate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.domiciliation_debiter_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property domiciliation_number() As Long
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.domiciliation_numberColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'domiciliation_number' in table 'domiciliation_payment_Valid"& _ 
                            "ate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.domiciliation_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entry_street_address() As String
            Get
                Try 
                    Return CType(Me(Me.tabledomiciliation_payment_Validate.entry_street_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entry_street_address' in table 'domiciliation_payment_Valid"& _ 
                            "ate' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledomiciliation_payment_Validate.entry_street_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_payment_dateNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.domiciliation_payment_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_payment_dateNull()
            Me(Me.tabledomiciliation_payment_Validate.domiciliation_payment_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Islast_modifiedNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.last_modifiedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setlast_modifiedNull()
            Me(Me.tabledomiciliation_payment_Validate.last_modifiedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbo_AmountNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.Abo_AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbo_AmountNull()
            Me(Me.tabledomiciliation_payment_Validate.Abo_AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbo_TypeNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.Abo_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbo_TypeNull()
            Me(Me.tabledomiciliation_payment_Validate.Abo_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbo_Amount_DiscountedNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.Abo_Amount_DiscountedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbo_Amount_DiscountedNull()
            Me(Me.tabledomiciliation_payment_Validate.Abo_Amount_DiscountedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbo_Action_NameNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.Abo_Action_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbo_Action_NameNull()
            Me(Me.tabledomiciliation_payment_Validate.Abo_Action_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbo_DateNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.Abo_DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbo_DateNull()
            Me(Me.tabledomiciliation_payment_Validate.Abo_DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiscount_typeNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.Discount_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiscount_typeNull()
            Me(Me.tabledomiciliation_payment_Validate.Discount_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiscount_ValueNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.Discount_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiscount_ValueNull()
            Me(Me.tabledomiciliation_payment_Validate.Discount_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiscount_ExplainedNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.Discount_ExplainedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiscount_ExplainedNull()
            Me(Me.tabledomiciliation_payment_Validate.Discount_ExplainedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiffNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.DiffColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiffNull()
            Me(Me.tabledomiciliation_payment_Validate.DiffColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUpgradeDownGradeNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.UpgradeDownGradeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUpgradeDownGradeNull()
            Me(Me.tabledomiciliation_payment_Validate.UpgradeDownGradeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isproducts_modelNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.products_modelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setproducts_modelNull()
            Me(Me.tabledomiciliation_payment_Validate.products_modelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isprevious_month_amountNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.previous_month_amountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setprevious_month_amountNull()
            Me(Me.tabledomiciliation_payment_Validate.previous_month_amountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiff_MonthNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.Diff_MonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiff_MonthNull()
            Me(Me.tabledomiciliation_payment_Validate.Diff_MonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscurrent_discount_code_idNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.current_discount_code_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcurrent_discount_code_idNull()
            Me(Me.tabledomiciliation_payment_Validate.current_discount_code_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_nameNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.customers_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_nameNull()
            Me(Me.tabledomiciliation_payment_Validate.customers_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_addressNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.customers_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_addressNull()
            Me(Me.tabledomiciliation_payment_Validate.customers_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_payment_isabel_dateNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.domiciliation_payment_isabel_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_payment_isabel_dateNull()
            Me(Me.tabledomiciliation_payment_Validate.domiciliation_payment_isabel_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_unpaid_idNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.domiciliation_unpaid_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_unpaid_idNull()
            Me(Me.tabledomiciliation_payment_Validate.domiciliation_unpaid_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_firstnameNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.customers_firstnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_firstnameNull()
            Me(Me.tabledomiciliation_payment_Validate.customers_firstnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscustomers_lastnameNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.customers_lastnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcustomers_lastnameNull()
            Me(Me.tabledomiciliation_payment_Validate.customers_lastnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_debiter_nameNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.domiciliation_debiter_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_debiter_nameNull()
            Me(Me.tabledomiciliation_payment_Validate.domiciliation_debiter_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdomiciliation_numberNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.domiciliation_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdomiciliation_numberNull()
            Me(Me.tabledomiciliation_payment_Validate.domiciliation_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isentry_street_addressNull() As Boolean
            Return Me.IsNull(Me.tabledomiciliation_payment_Validate.entry_street_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setentry_street_addressNull()
            Me(Me.tabledomiciliation_payment_Validate.entry_street_addressColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class mail_messages_sent_history_view1Row
        Inherits Global.System.Data.DataRow
        
        Private tablemail_messages_sent_history_view1 As mail_messages_sent_history_view1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablemail_messages_sent_history_view1 = CType(Me.Table,mail_messages_sent_history_view1DataTable)
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class customersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As customersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As customersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As customersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class productsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As productsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As productsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As productsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class aboRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As aboRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As aboRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As aboRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class abo_actionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As abo_actionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As abo_actionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As abo_actionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class AboRentRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AboRentRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As AboRentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As AboRentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class abo_view2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As abo_view2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As abo_view2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As abo_view2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class abo_view1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As abo_view1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As abo_view1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As abo_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class abo_stop_whyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As abo_stop_whyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As abo_stop_whyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As abo_stop_whyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class abo_stop_why_explainedRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As abo_stop_why_explainedRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As abo_stop_why_explainedRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As abo_stop_why_explainedRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class abo_stop_why_view1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As abo_stop_why_view1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As abo_stop_why_view1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As abo_stop_why_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ogone_paymentRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ogone_paymentRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ogone_paymentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ogone_paymentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class domiciliation_paymentRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As domiciliation_paymentRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As domiciliation_paymentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As domiciliation_paymentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class wishlist_assigned_view1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As wishlist_assigned_view1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As wishlist_assigned_view1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As wishlist_assigned_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class aboreconduction_view1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As aboreconduction_view1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As aboreconduction_view1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As aboreconduction_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ogone_payment_ValidateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ogone_payment_ValidateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ogone_payment_ValidateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ogone_payment_ValidateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class domiciliation_payment_ValidateRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As domiciliation_payment_ValidateRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As domiciliation_payment_ValidateRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As domiciliation_payment_ValidateRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class mail_messages_sent_history_view1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As mail_messages_sent_history_view1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As mail_messages_sent_history_view1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As mail_messages_sent_history_view1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
